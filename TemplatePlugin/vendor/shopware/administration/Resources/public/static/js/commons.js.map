{"version":3,"sources":["webpack:///./src/core/service/api/product-stream-preview.service.js","webpack:///./src/core/service/api.service.ts","webpack:///./src/core/service/api/sync.api.service.js","webpack:///./src/core/service/api/snippet-set.api.service.js","webpack:///./src/core/service/api/business-events.api.service.js","webpack:///./src/core/service/api/product-export.api.service.js","webpack:///./src/core/service/api/acl.api.service.js","webpack:///./src/core/factory/cache-adapter.factory.js","webpack:///./src/core/service/api/user-input-sanitize.service.js","webpack:///./src/core/service/api/user-activity.service.js","webpack:///./src/core/service/jsonapi-parser.service.js","webpack:///./src/core/service/api/app-url-change.service.js","webpack:///./src/core/service/api/tag.api.service.js","webpack:///./src/core/data/entity-collection.data.ts","webpack:///./src/core/helper/sanitizer.helper.js","webpack:///./src/core/helper/middleware.helper.js","webpack:///./src/core/factory/module.factory.ts","webpack:///./src/core/factory/template.factory.js","webpack:///./src/core/factory/component.factory.ts","webpack:///./src/core/factory/async-component.factory.ts","webpack:///./src/core/factory/entity.factory.js","webpack:///./src/core/factory/state.factory.ts","webpack:///./src/core/factory/service.factory.ts","webpack:///./src/core/factory/classes-factory.js","webpack:///./src/core/factory/mixin.factory.js","webpack:///./src/core/factory/filter.factory.ts","webpack:///./src/core/factory/directive.factory.js","webpack:///./src/core/factory/locale.factory.js","webpack:///./src/core/factory/shortcut.factory.js","webpack:///./src/core/factory/plugin-boot.factory.js","webpack:///./src/core/factory/api-service.factory.js","webpack:///./src/core/data/entity-definition.data.js","webpack:///./src/core/factory/entity-definition.factory.js","webpack:///./src/core/factory/worker-notification.factory.js","webpack:///./src/core/data/ShopwareError.js","webpack:///./src/core/helper/flattree.helper.js","webpack:///./src/core/helper/device.helper.js","webpack:///./src/core/data/changeset-generator.data.js","webpack:///./src/core/data/entity.data.ts","webpack:///./src/core/data/entity-factory.data.js","webpack:///./src/core/data/entity-hydrator.data.ts","webpack:///./src/core/data/repository.data.ts","webpack:///./src/core/data/error-resolver.data.js","webpack:///./src/core/data/error-store.data.js","webpack:///./src/core/data/filter-factory.data.js","webpack:///./src/core/data/index.js","webpack:///./src/core/application.ts","webpack:///./src/core/data/repository-factory.data.ts","webpack:///./src/core/factory/api-context.factory.js","webpack:///./src/core/factory/app-context.factory.js","webpack:///./src/core/factory/router.factory.js","webpack:///./src/core/service/api/index.js","webpack:///./src/core/service/extension-api-data.service.ts","webpack:///./src/core/extension-api.ts","webpack:///./src/core/shopware.ts","webpack:///index)\\.js|\\.ts$","webpack:///./src/core/service/api/language-plugin.api.service.js","webpack:///./src/core/service/api/search.api.service.js","webpack:///./src/core/service/api/import-export.api.service.js","webpack:///./src/core/service/api/customer-group-registration.api.service.js","webpack:///./src/core/service/utils/types.utils.ts","webpack:///./src/core/service/api/known-ips.api.service.js","webpack:///./src/core/service/utils/object.utils.ts","webpack:///./src/core/service/api/checkout-store.api.service.js","webpack:///./src/core/service/api/config.api.service.js","webpack:///./src/core/service/api/notifications.service.js","webpack:///./src/core/service/api/sales-channel.api.service.js","webpack:///./src/core/service/api/seo-url-template.api.service.js","webpack:///./src/core/service/api/media-folder.api.service.js","webpack:///./src/core/helper/upload-task.helper.js","webpack:///./src/core/service/api/media.api.service.js","webpack:///./src/core/service/api/document.api.service.js","webpack:///./src/core/service/api/number-range.api.service.js","webpack:///./src/core/service/api/marketing.service.js","webpack:///./src/core/service/api/order-document.api.service.js","webpack:///./src/core/service/api/app-cms-blocks.service.js","webpack:///./src/core/service/api/store-context.api.service.js","webpack:///./src/core/service/utils/format.utils.ts","webpack:///./src/core/service/utils/dom.utils.ts","webpack:///./src/core/service/utils/file-reader.utils.ts","webpack:///./src/core/service/utils/sort.utils.ts","webpack:///./src/core/service/util.service.ts","webpack:///./src/core/feature.ts","webpack:///./src/core/service/api/order.api.service.js","webpack:///./src/core/service/api/user-validation.api.service.js","webpack:///./src/core/service/api/order-state-machine.api.service.js","webpack:///./src/core/service/api/scheduled-task.api.service.js","webpack:///./src/core/service/api/extension-sdk.service.ts","webpack:///./src/core/service/api/update.api.service.js","webpack:///./src/core/service/utils/string.utils.ts","webpack:///./src/core/data/criteria.data.ts","webpack:///./src/core/service/api/state-machine.api.service.js","webpack:///./src/core/service/utils/debug.utils.ts","webpack:///./src/core/service/api/system-config.api.service.js","webpack:///./src/core/helper/refresh-token.helper.js","webpack:///./src/core/service/api/seo-url.api.service.js","webpack:///./src/core/service/api/flow-actions.api.service.js","webpack:///./src/core/service/api/calculate-price.api.service.js","webpack:///./src/core/service/api/cache.api.service.js","webpack:///./src/core/service/api/promotion-sync.api.service.js","webpack:///./src/core/service/api/first-run-wizard.api.service.js","webpack:///./src/core/service/api/message-queue.api.service.js","webpack:///./src/core/factory/http.factory.js","webpack:///./src/core/service/api/excludedSearchTerm.api.service.js","webpack:///./src/core/service/api/cart-store-api.api.service.js","webpack:///./src/core/service/api/app-action-button.service.js","webpack:///./src/core/service/api/app-modules.service.js","webpack:///./src/core/service/api/store.api.service.js","webpack:///./src/core/service/api/integration.api.service.js","webpack:///./src/core/service/api/snippet.api.service.js","webpack:///./src/core/service/api/user.api.service.js","webpack:///./src/core/service/api/mail.api.service.js","webpack:///./src/core/service/api/recommendations.api.service.js","webpack:///./src/core/service/api/user-config.api.service.js","webpack:///./src/core/service/api/customer-validation.api.service.js","webpack:///./src/core/service/api/user-recovery.api.service.js"],"names":["ProductStreamPreviewService","httpClient","loginService","name","salesChannelId","criteria","filter","additionalHeaders","this","post","headers","getBasicHeaders","then","response","ApiService","handleResponse","apiEndpoint","contentType","id","prefix","url","length","basicHeaders","Accept","Authorization","getToken","Object","assign","endpoint","client","type","data","undefined","hasOwnProperty","parseJsonApiData","parseJsonApi","versionId","paramDictionary","params","keys","key","map","join","SyncApiService","payload","additionalParams","Shopware","Classes","SnippetSetApiService","page","limit","filters","sort","defaultSort","sortBy","sortDirection","getApiBasePath","get","BusinessEventsApiService","ProductExportApiService","productExport","apiRoute","AclApiService","getHeaders","values","allowUrlList","flushCacheUrls","cacheAdapterFactory","originalAdapter","requestCaches","config","requestChangesData","includes","method","shouldFlushCache","forEach","requestHash","JSON","stringify","identicalRequest","Utils","debug","warn","cloneResponse","setTimeout","request","parse","AppUrlChangeService","html","field","UserActivityApiService","jsonApiParserService","json","jsonData","types","isString","err","isObject","isArray","convertRawDataToJson","parsed","errors","links","meta","areTopMemberPropertiesPresent","convertedStructure","associations","aggregations","includedMap","included","Map","item","set","createIncludeMap","record","dataItem","createItem","associationLinks","prototype","call","renameObjectPropertiesToCamelCase","parseDataStructure","attributes","relationships","relations","mappedRelations","prop","relationship","related","mapIncluded","createRelationships","attributesCollection","attributeKey","attribute","replace","match","toUpperCase","includedKey","has","entries","description","strategy","resp","status","Service","Criteria","Data","TagApiService","ids","definitionProperties","bulkMergeProgress","a","tagRepository","getRepository","isRunning","tag","create","save","_isNew","propertyName","property","relation","currentAssignment","progress","total","repository","entity","setLimit","setPage","addFilter","equalsAny","searchIds","Context","api","syncDeleted","EntityCollection","middlewareNames","Sanitizer","domPurify","setConfig","clearConfig","middlewareName","middlewareFn","addHook","removeHooks","dirtyHtml","sanitize","MiddlewareHelper","_stack","middleware","Error","push","args","stack","frame","getModuleRoutes","moduleRoutes","modules","module","routes","route","Feature","isActive","flag","isChildren","middlewareHelper","go","registerModule","moduleId","splitModuleId","split","display","routeMiddleware","routeKey","routePrefixName","routePrefixPath","coreRoute","path","component","components","default","componentList","routeComponents","componentKey","createRouteComponentList","childrenRoutes","children","iterateChildRoutes","registerChildRoutes","alias","isFunction","use","size","moduleDefinition","manifest","navigation","navigationEntry","moduleType","parent","link","label","position","settingsItem","Array","group","to","icon","iconComponent","title","State","commit","addSettingsItemsToStore","extensionEntryRoute","extensionName","addEntryRouteToExtensionRouteStore","getModuleRegistry","value","delete","getModuleByEntityName","entityName","from","find","getModuleSnippets","reduce","accumulator","localeKey","snippets","merge","getModuleByKey","routeDefinition","child","routeDefinitionChildren","registerComponentTemplate","componentName","componentTemplate","template","templateRegistry","overrides","raw","extend","extendComponentTemplate","extendComponentName","templateExtension","registerTemplateOverride","templateOverride","overrideIndex","index","getRenderedTemplate","registerNormalizedTemplate","normalizedTemplateRegistry","resolveTemplates","clearTwigCache","Twig","clearRegistry","getTwigCache","getRegistry","disableTwigCache","cache","getTemplateRegistry","getNormalizedTemplateRegistry","getTemplateOverrides","TwigTemplates","TwigCore","token","definitions","exports","extendTag","regex","next","open","context","chain","output","placeholders","Templates","registry","parentPlaceholder","parentRegExp","RegExp","templateDefinition","resolveExtendsComponent","hasOverridesInExtensionChain","resolvedtokens","resolveExtendTokens","tokens","finalHtml","render","updatedTemplate","baseTemplate","override","buildTwigTemplateInstance","overrideTokens","resolveTokens","applyTemplateOverrides","acc","block","isInOverrides","findBlock","mergeTokens","resolvedTokens","t","subToken","replacement","xs","s","extendedComponentTokens","cloneDeep","extensionTokens","itemTokens","findNestedBlock","normalizeTokens","resolveToken","blockName","isIn","parsers","twig","options","register","componentConfiguration","componentRegistry","TemplateFactory","functional","extends","overrideRegistry","splice","build","skipTemplate","templatesResolved","resolveComponentTemplates","extendComp","buildedComp","convertedOverrides","convertOverrides","overrideComp","_isOverride","superRegistry","buildSuperRegistry","isNotEmptyObject","inheritedFrom","isAnOverride","methods","addSuperBehaviour","getComponentTemplate","getComponentRegistry","getOverrideRegistry","getComponentHelper","componentHelper","registerComponentHelper","helperFunction","markComponentTemplatesAsNotResolved","clear","reduceRight","previous","shift","methodName","methodFunction","methodOrComputed","ConfigMethodOrComputed","cmd","func","updateSuperRegistry","methodString","toString","test","overridePrefix","resolveSuperCallChain","$super","_initVirtualCallStack","superStack","_findInSuperRegister","superFuncObject","_virtualCallStack","result","bind","_inheritedFrom","_superRegistry","methodsOrComputed","extension","parentName","parentsParentName","extendsName","extendsNameString","findMethodInChain","parentBlock","resolvedParent","splitPath","resolveGetterSetterChain","obj","constructor","configurationResolveMethod","awaitedConfig","Promise","resolve","awaitedConfigResult","configResolveMethod","_clearComponentHelper","isSyncComponent","syncComponents","markComponentAsSync","add","Set","initComponent","asyncComponent","asyncOverrideComponent","all","c","resultConfig","awaitedOverrides","awaitedOverride","addEntityDefinition","entityDefinition","entityDefinitions","getEntityDefinition","getDefinitionRegistry","getRawEntityObject","getPropertyBlacklist","getRequiredProperties","definition","blocklist","requiredFields","required","getAssociatedProperties","properties","propName","getTranslatableProperties","translatable","schema","deep","propSchema","getRawPropertyValue","format","defineProperty","writable","enumerable","configurable","getMethod","setMethod","stateFactory","serviceAccessor","serviceName","Application","getContainer","list","$list","service","addServiceProvider","registerMiddleware","addServiceProviderMiddleware","registerDecorator","addServiceProviderDecorator","publicObject","privateObject","mixinName","mixin","mixinRegistry","getByName","getMixinRegistry","filterRegistry","filterName","filterFactoryMethod","noop","registerDirective","directive","directiveRegistry","getDirectiveByName","getDirectiveRegistry","getLocaleByName","localeName","localeRegistry","getLocaleRegistry","localeMessages","originalMessages","object","getBrowserLanguage","getBrowserLanguages","getLastKnownLocale","window","localStorage","getItem","localStorageKey","storeCurrentLocale","document","shortLocaleName","querySelector","setAttribute","setItem","shortLanguageCodes","messages","locale","lang","toLowerCase","matchedLanguage","language","languages","navigator","userLanguage","systemLanguage","getPathByCombination","combination","shortcutRegistry","getShortcutRegistry","addBootPromise","promiseResolve","pluginPromises","getBootPromises","apiServiceRegistry","apiServiceName","apiService","getServices","scalarTypes","jsonTypes","EntityDefinition","filterProperties","flags","primary_key","isTranslatableField","callback","getScalarTypes","getJsonTypes","entityDefinitionRegistry","remove","getTranslatedFields","getTranslatableFields","getAssociationFields","getRequiredFields","opts","validateOpts","initialize","initialized","helper","fn","entry","queue","q","mergedData","middlewareFunctionWrapper","resetHelper","ShopwareError","code","detail","_id","utils","createId","_code","_parameters","parameters","_status","_detail","_trace","FlatTree","sorting","defaultPosition","_registeredNodes","_defaultPosition","_sorting","_tree","elements","level","element","newParent","node","nodeIdentifier","target","DeviceHelper","listeners","addEventListener","resize","debounce","event","listenerObject","listener","scope","onResize","removeResizeListener","getUserAgent","userAgent","getViewportWidth","innerWidth","getViewportHeight","innerHeight","getDevicePixelRatio","devicePixelRatio","getScreenWidth","screen","width","getScreenHeight","height","getScreenOrientation","orientation","getPlatform","platform","getSystemKey","indexOf","castValueToNullIfNecessary","ChangesetGenerator","pkFields","getEntityName","getPrimaryKeyFields","pkData","fieldName","deletionQueue","changes","recursion","origin","getOrigin","draft","getDraft","forEachField","readOnly","write_protected","draftValue","originValue","isScalarField","extensions","isJsonField","isEqual","associationChanges","handleOneToMany","handleManyToMany","change","getPrimaryKeyData","originIds","getIds","nested","primary","local","reference","source","mapping","cascade_delete","referenceField","assignSetterMethod","view","setReactive","Entity","EntityFactory","toManyAssociations","getToManyAssociations","associatedProperty","createCollection","markAsNew","subRoute","EntityHydrator","entities","hydrateEntity","collection","row","cacheKey","attributeValue","getField","isJsonObjectField","isEmptyObject","isJsonListField","hydrateExtensions","isToManyAssociation","hydrateToMany","isToOneAssociation","nestedEntity","hydrateToOne","e","EntityClass","associationCriteria","getAssociationCriteria","nestedRaw","getIncluded","hasAssociation","getAssociation","apiResourcePath","substr","Repository","hydrator","changesetGenerator","entityFactory","errorResolver","buildHeaders","hydrateSearchResult","setIds","search","useSync","saveWithSync","saveWithRest","generate","keepApiErrors","resetApiErrors","sendDeletions","sendChanges","isNew","operations","buildDeleteOperations","action","catch","errorResponse","error","pointer","startsWith","substring","handleWriteErrors","entityId","behavior","reject","promises","failOnError","getSyncChangeset","changeset","deletions","sendUpserts","changedField","success","getSyncErrors","current","segments","operation","handleDeleteError","getLimit","setTotalCountMode","getPage","iterateIds","syncResult","currentResult","versionName","patch","requests","deletion","compatibility","appId","authToken","access","languageId","currencyId","inheritance","grouped","ErrorResolver","dispatch","writeErrors","reduceErrorsByWriteIndex","handleErrors","addSystemErrors","system","shopwareError","expression","denormalized","lastIndex","segment","systemErrors","writeIndex","resolveError","buildAssociationChangeset","resolveOneToOneFieldError","resolveJsonFieldError","getErrorPath","errorStore","addSystemError","associationName","associationChange","basePath","currentField","createPathToError","state","pop","store","currentStore","addApiError","removeApiError","deleteReactive","isEmpty","removeSystemError","FilterFactory","STRING_FILTER_INPUT","NUMBER_FILTER_INPUT","DATE_FILTER_INPUT","ASSOCIATION_FILTER_INPUT","BOOLEAN_FILTER_INPUT","PRICE_FILTER_INPUT","EXISTENCE_FILTER_INPUT","getFilterProperties","accessor","parts","first","returnProperty","localField","ErrorStore","ApplicationBootstrapper","container","_resolveViewInitialized","$container","containerName","factory","nameOrMiddleware","_addMiddleware","nameOrDecorator","decorator","_addDecorator","initializer","provider","apiContext","registerApiContext","appContext","registerAppContext","_private","ApiContextFactory","app","AppContextFactory","features","init","initState","registerConfig","initializeFeatureFlags","startBootProcess","root","viewAdapterInstance","isLoggedIn","bootFullApplication","logout","bootLogin","sessionStorage","initializeLoginInitializer","initDependencies","createApplicationRoot","createApplicationRootError","initContainer","initializeInitializers","loadPlugins","Plugin","router","getRouterInstance","environment","firstRunWizard","history","console","initError","services","digest","asyncInitializers","getAsyncInitializers","loginInitializer","serviceKey","isDevelopmentMode","process","fetch","plugins","bundles","injectAllPlugins","plugin","injectPlugin","bundleName","bundle","baseUrl","pluginName","entryFiles","stringUtils","string","camelCasePluginName","upperFirst","camelCase","URL","injectIframe","active","integrationId","bundleVersion","version","iframeSrc","bundleType","allScripts","allStyles","js","src","injectJs","css","injectCss","scriptSrc","script","createElement","async","onload","onerror","body","appendChild","styleSrc","rel","href","head","permissions","Vue","observable","RepositoryFactory","createContext","Defaults","isDevMode","installationPath","getInstallationPath","apiPath","systemLanguageId","getAssetsPath","assetPath","fullPath","schemeAndHttpHost","createRouter","Router","View","moduleFactory","LoginService","allRoutes","instance","addRoutes","addModuleRoutes","createRouterInstance","viewModuleRoutes","convertRouteComponentToViewComponent","viewAllRoutes","mergedRoutes","registerModuleRoutesAsChildren","beforeRouterInterceptor","getViewComponent","_setModuleFavicon","setModuleFavicon","assetsPath","beforeEach","loggedIn","tokenHandler","Helper","RefreshTokenHelper","loginAllowlist","forceRoute","isRefreshing","privilege","can","matched","resolveRoute","fireRefreshTokenRequest","moduleInfo","getModuleInfo","$module","navigationInfo","currentNavigationEntry","getNavigationInfo","$current","moduleRegistry","foundModule","parentModule","parentPath","core","moduleRootRoutes","moduleNormalRoutes","moduleRoute","getComponent","routeDestination","favicon","favRef","getElementById","faviconSrc","require","publishedDataSets","parsePath","lastSegment","pathToLastSegment","handle","publishData","registeredDataSet","_uid","updateSubscriber","setObject","lastPath","newPath","$set","transferObject","prePath","getIsDirty","realPath","parsedPath","unwatch","$watch","dataSet","immediate","$once","getPublishedDataSets","_features_","Bottle","strict","application","addFactory","AsyncComponentFactory","ComponentFactory","ModuleFactory","StateFactory","ServiceFactory","ClassesFactory","MixinFactory","DirectiveFactory","LocaleFactory","ShortcutFactory","PluginBootFactory","ApiServiceFactory","EntityDefinitionFactory","WorkerNotificationFactory","ShopwareClass","getTemplate","addDefinition","getDefinition","ExtensionApi","defaultLanguageIds","storefrontSalesChannelTypeId","productComparisonTypeId","apiSalesChannelTypeId","defaultSalutationId","HttpFactory","RouterFactory","ModuleFilterFactory","FlatTreeHelper","SanitizerHelper","ApiServices","ShopwareInstance","webpackContext","req","webpackContextResolve","__webpack_require__","o","LanguagePluginApiService","SearchApiService","term","setTerm","queries","searchQuery","ImportExportApiService","profileId","expireDate","file","formData","FormData","append","logId","offset","fileId","accessToken","CustomerGroupRegistrationApiService","customerId","additionalRequest","customerIds","isUndefined","isPlainObject","isRegExp","isDate","isBoolean","isNumber","KnownIpsApiService","ips","objectMerge","objectCopy","objectGet","objectSet","objectPick","mergeWith","objectMergeWith","pick","deepCopyObject","copyObject","deepMergeObject","firstObject","secondObject","objValue","srcValue","concat","getObjectDiff","b","valueOf","getArrayChanges","objDiff","CheckoutStoreService","contextToken","ConfigApiService","NotificationsService","latestTimestamp","SalesChannelApiService","SeoUrlTemplateApiService","urlTemplate","MediaFolderApiService","targetId","UploadTask","uploadTag","fileName","running","UploadEvents","UPLOAD_ADDED","UPLOAD_FINISHED","UPLOAD_FAILED","UPLOAD_CANCELED","MediaApiService","uploads","$listeners","hasListeners","array","removeListener","addListener","tagListener","defaultListeners","hasDefaultListeners","uploadData","addUploads","uploadCollection","tasks","getListenerForTag","_createUploadEvent","upload","affectedUploads","affectedListeners","totalUploads","successUploads","failureUploads","task","_startUpload","successAmount","failureAmount","totalAmount","cause","File","fileReader","readAsArrayBuffer","buffer","uploadMediaById","uploadMediaFromUrl","mimeType","mediaId","DocumentEvents","DOCUMENT_FAILED","DOCUMENT_FINISHED","DocumentApiService","$listener","orderId","documentTypeName","documentConfig","referencedDocumentId","referenced_document_id","static","docCreated","documentId","fileExtension","documentNumber","createDocumentEvent","orderDeepLink","responseType","documentDeepLink","download","NumberRangeApiService","typeName","preview","urlSuffix","pattern","start","MarketingService","phase","comingSoonStartDate","startDate","lastCallStartDate","endDate","storeBanner","background","color","image","content","textColor","headline","cta","category","text","dashboardBanner","leftImage","bgColor","hideInSmallViewports","srcset","linkColor","inlineActions","placeholder","execution","arguments","externalLink","mainAction","buttonVariant","bannerIsClickable","OrderDocumentApiService","AppCmsBlocksService","blocks","StoreContextService","currency","val","sign","decimalPlaces","additionalOptions","decimalOpts","minimumFractionDigits","maximumFractionDigits","style","systemCurrencyISOCode","toLocaleString","currentLocale","date","givenDate","Date","isNaN","lastKnownLang","userTimeZone","currentUser","timeZone","dateTimeFormatter","Intl","DateTimeFormat","year","month","day","hour","minute","dateWithUserTimezone","dateObj","localizedDate","toLocaleDateString","second","md5","MD5","hash","fileSize","bytes","denominator","units","Number","parseInt","String","i","toFixed","toISODate","useTime","isoDate","toISOString","getScrollbarHeight","HTMLElement","offsetHeight","clientHeight","getScrollbarWidth","offsetWidth","clientWidth","copyToClipboard","stringToCopy","tempTextArea","select","execCommand","removeChild","registerPromiseOnFileReader","abort","DOMException","splitFileNameAndExtension","completeFileName","fileParts","readFileAsArrayBuffer","inputFile","fReader","FileReader","readFileAsDataURL","readAsDataURL","readFileAsText","readAsText","getNameAndExtensionFromFile","fileHandle","getNameAndExtensionFromUrl","urlObject","ref","indexOfQueryIndicator","decodeURI","afterSort","firstItem","sortedElements","lastId","loop","leaf","nextItem","dom","domUtils","capitalizeString","kebabCase","snakeCase","isEmptyOrSpaces","isUrl","isValidIp","typesUtils","fileReaderUtils","sortUtils","flattenDeep","slice","uniqBy","chunk","intersectionBy","uuidV4","throttle","flow","flagConfig","flagName","OrderApiService","getVersionHeader","productId","quantity","dummyPrice","priceDefinition","taxRules","isCalculated","identifier","skipAutomaticPromotions","orderAddressId","customerAddressId","UserValidationApiService","email","username","OrderStateMachineApiService","actionName","mediaIds","orderTransactionId","orderDeliveryStateId","ScheduledTaskApiService","ExtensionSdkService","entityIdList","UpdateService","getBasicParams","pluginDeactivationStrategy","actionUrlPart","offsetParam","basicParams","trim","Boolean","ip","StateMachineApiService","stateFieldName","additionalQueryParams","query","makeQueryParams","SystemConfigApiService","domain","refreshTokenHelper","_isRefreshing","_subscribers","_errorSubscribers","_whitelist","errorCallback","refreshToken","newToken","onRefreshToken","finally","onRefreshTokenFailed","urls","_whitelists","getRefreshTokenHelper","SeoUrlApiService","seoUrl","routeName","FlowActionApiService","CalculatePriceApiService","taxId","price","prices","CacheApiService","skip","PromotionSyncApiService","FirstRunWizardApiService","MessageQueueApiService","receiver","cancelToken","createHTTPClient","Axios","baseURL","interceptors","originalRequest","resource","whitelist","subscribe","getApplicationRoot","location","reload","$router","refreshTokenInterceptor","handleErrorStates","singleError","variant","message","globalErrorHandlingInterceptor","CancelToken","NODE_ENV","adapter","requestCacheAdapterInterceptor","createClient","isCancel","Cancel","viewRoot","$tc","resultItem","missingPrivilegeError","missingPrivileges","missingPrivilegesMessage","autoClose","growl","blockingEntities","usages","usageObject","times","count","timesSnippet","blockingEntitiesSnippet","frameworkLanguageNotFound","removeItem","actions","ExcludedSearchTermService","_getHeader","lineItemConstants","freeze","PRODUCT","CREDIT","CUSTOM","PROMOTION","priceTypes","ABSOLUTE","QUANTITY","CartStoreService","itemType","lineItemTypes","getLineItemTypes","getLineItemPriceTypes","lineItemKeys","isNewProductItem","isUnitPriceEdited","unitPrice","isTaxRateEdited","taxRate","isCustomItem","shouldPriceUpdated","mapLineItemTypeToPriceType","items","referencedId","stackable","removable","getRouteForItem","getPayloadForItem","shippingCosts","InvalidActionButtonParameterError","AppActionButtonService","AppModulesService","StoreApiService","shopwareId","password","unauthenticated","onlyDownload","IntegrationApiService","user","SnippetApiService","translationKey","isCustom","localeFactory","allSnippets","fnName","UserApiService","MailApiService","recipientMail","recipient","mailTemplate","mailTemplateMedia","testMode","documentIds","templateData","contentHtml","translated","contentPlain","mailTemplateData","mailTemplateType","recipients","subject","senderMail","senderName","sendMailTemplate","RecommendationsApiService","UserConfigService","upsertData","CustomerValidationApiService","exception","UserRecoveryApiService","passwordConfirm"],"mappings":"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","file":"static/js/commons.js","sourcesContent":["import ApiService from '../api.service';\n\nexport default class ProductStreamPreviewService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'productStreamPreviewService';\n    }\n\n    /**\n     * @param salesChannelId: String\n     * @param criteria: Criteria\n     * @param filter: Array\n     * @param additionalHeaders: Object\n     * @returns {*} - ApiService.handleResponse(response)\n     */\n    preview(salesChannelId, criteria, filter, additionalHeaders = {}) {\n        return this.httpClient.post(\n            `_admin/product-stream-preview/${salesChannelId}`,\n            { ...criteria, ...{ filter } },\n            {\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then(response => ApiService.handleResponse(response));\n    }\n}\n","import parseJsonApi from 'src/core/service/jsonapi-parser.service';\nimport type { AxiosInstance, AxiosResponse } from 'axios';\nimport type { LoginService } from './login.service';\n\nexport type BasicHeaders = {\n    Accept: string,\n    Authorization: string,\n    'Content-Type': string,\n    [key: string]: string,\n};\n\n/**\n * ApiService class which provides the common methods for our REST API\n * @class\n */\nclass ApiService {\n    client: AxiosInstance = {} as AxiosInstance;\n\n    loginService: LoginService;\n\n    endpoint = '';\n\n    type = 'application/vnd.api+json';\n\n    name = '';\n\n    constructor(\n        httpClient: AxiosInstance,\n        loginService: LoginService,\n        apiEndpoint: string,\n        contentType = 'application/vnd.api+json',\n    ) {\n        this.httpClient = httpClient;\n        this.loginService = loginService;\n        this.apiEndpoint = apiEndpoint;\n        this.contentType = contentType;\n    }\n\n    /**\n     * Returns the URI to the API endpoint\n     */\n    getApiBasePath(id?: string|number, prefix = ''): string {\n        let url = '';\n\n        if (prefix?.length) {\n            url += `${prefix}/`;\n        }\n\n        if ((id && typeof id === 'number') || (typeof id === 'string' && id.length > 0)) {\n            return `${url}${this.apiEndpoint}/${id}`;\n        }\n\n        return `${url}${this.apiEndpoint}`;\n    }\n\n    /**\n     * Get the basic headers for a request.\n     */\n    getBasicHeaders(additionalHeaders = {}): BasicHeaders {\n        const basicHeaders = {\n            Accept: this.contentType,\n            Authorization: `Bearer ${this.loginService.getToken()}`,\n            'Content-Type': 'application/json',\n        };\n\n        return Object.assign({}, basicHeaders, additionalHeaders);\n    }\n\n    /**\n     * Basic response handling.\n     * Converts the JSON api data when the specific content type is set.\n     */\n    static handleResponse(response: AxiosResponse<unknown>): unknown {\n        if (response.data === null || response.data === undefined) {\n            return response;\n        }\n\n        let data = response.data;\n        const headers = response.headers as unknown;\n\n        if (typeof headers !== 'object' || headers === null || !headers.hasOwnProperty('content-type')) {\n            return data;\n        }\n\n        // @ts-expect-error\n        if (headers['content-type'] && headers['content-type'] === 'application/vnd.api+json') {\n            data = ApiService.parseJsonApiData(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * Parses a JSON api data structure to a simplified object.\n     */\n    static parseJsonApiData(data: string|unknown): Record<string, unknown>|null {\n        // @ts-expect-error\n        return parseJsonApi(data);\n    }\n\n    static getVersionHeader(versionId: string): { 'sw-version-id': string } {\n        return { 'sw-version-id': versionId };\n    }\n\n    static makeQueryParams(paramDictionary = {} as { [key: string]: string|number}): string {\n        const params = Object\n            .keys(paramDictionary)\n            .filter(key => typeof paramDictionary[key] === 'string')\n            .map(key => `${key}=${paramDictionary[key]}`);\n\n        if (!params.length) {\n            return '';\n        }\n\n        return `?${params.join('&')}`;\n    }\n\n    /**\n     * Getter for the API end point\n     */\n    get apiEndpoint(): string {\n        return this.endpoint;\n    }\n\n    /**\n     * Setter for the API end point\n     */\n    set apiEndpoint(endpoint: string) {\n        this.endpoint = endpoint;\n    }\n\n    /**\n     * Getter for the http client\n     */\n    get httpClient(): AxiosInstance {\n        return this.client;\n    }\n\n    /**\n     * Setter for the http client\n     */\n    set httpClient(client) {\n        this.client = client;\n    }\n\n    get contentType(): string {\n        return this.type;\n    }\n\n    set contentType(contentType) {\n        this.type = contentType;\n    }\n}\n\nexport default ApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"sync\"\n * @class\n * @extends ApiService\n */\nclass SyncApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sync') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'syncService';\n    }\n\n    sync(payload, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(`/_action/${this.apiEndpoint}`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SyncApiService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"snippet-set\"\n * @class\n * @extends ApiService\n */\nclass SnippetSetApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'snippet-set') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'snippetSetService';\n    }\n\n    /**\n     * @returns {Promise<T>}\n     */\n    getCustomList(page = 1, limit = 25, filters = {}, sort = {}) {\n        const headers = this.getBasicHeaders();\n\n        const defaultSort = {\n            sortBy: 'id',\n            sortDirection: 'ASC',\n        };\n\n        sort = { ...defaultSort, ...sort };\n\n        return this.httpClient\n            .post(\n                `/_action/${this.getApiBasePath()}`,\n                { page, limit, filters, sort },\n                { headers },\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Call the API to get all available BaseFiles\n     *\n     * @returns {Promise<T>}\n     */\n    getBaseFiles() {\n        const params = {};\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/baseFile`, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getAuthors() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/author`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SnippetSetApiService;\n","import ApiService from '../api.service';\n\n/**\n * @deprecated tag:v6.5.0 - Will be removed in v6.5.0. Please use `sw-flow` - Flow builder instead.\n *\n * @class\n * @extends ApiService\n */\nclass BusinessEventsApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'business-events') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'businessEventService';\n    }\n\n    /**\n     * Get all business events\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getBusinessEvents(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_info/events.json', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default BusinessEventsApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"product-export\"\n * @class\n * @extends ApiService\n */\nclass ProductExportApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'product-export') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'productExportService';\n    }\n\n    validateProductExportTemplate(productExport) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/validate`;\n\n        return this.httpClient.post(\n            apiRoute,\n            productExport,\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    previewProductExport(productExport) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/preview`;\n\n        return this.httpClient.post(\n            apiRoute,\n            productExport,\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    /**\n     * Get the generated access key and secret access key from the API\n     *\n     * @param {Object} additionalParams\n     * @param {Object} additionalHeaders\n     * @returns {Promise<T>}\n     */\n    generateKey(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/access-key/product-export', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default ProductExportApiService;\n","class AclApiService {\n    constructor(httpClient, loginService) {\n        this.httpClient = httpClient;\n        this.loginService = loginService;\n        this.name = 'aclApiService';\n    }\n\n    additionalPrivileges() {\n        const headers = this.getHeaders();\n        return this.httpClient.get('/_action/acl/additional_privileges', { headers }).then((response) => {\n            return Object.values(response.data);\n        });\n    }\n\n    allPrivileges() {\n        const headers = this.getHeaders();\n        return this.httpClient.get('/_action/index', {}, { headers }).then((response) => {\n            return Object.values(response.data);\n        });\n    }\n\n    getHeaders() {\n        return {\n            Accept: 'application/json',\n            Authorization: `Bearer ${this.loginService.getToken()}`,\n            'Content-Type': 'application/json',\n        };\n    }\n}\n\nexport default AclApiService;\n","// this list contains all URLs which should be cached\nconst allowUrlList = [\n    '/search/user-config',\n    '/search/product',\n    '/search/product-review',\n    '/search/property-group',\n    '/search/newsletter-recipient',\n    '/search/salutation',\n    '/search/product-search-config',\n    '/search/product-search-config-field',\n    '/app-system/action-button/product/list',\n    'app-system/action-button/product/list',\n    '/search/currency',\n    '/search/order',\n    '/search/customer',\n    '/_info/me',\n];\n\n/**\n * When one of these urls get requested\n * the whole cache gets flushed\n * @type {string[]}\n */\nconst flushCacheUrls = [\n    '/user-config',\n    'user-config',\n    '/_action/sync',\n    '_action/sync',\n    '/product-visibility',\n    'product-visibility',\n];\n\n// the timeout at which the response in the cache gets cleared\nconst requestCacheTimeout = 1500;\n\n/**\n * This cacheAdapterFactory creates an adapter for the axios\n * library. The created adapter do short time caching for\n * identical requests.\n *\n * @param originalAdapter\n * @param requestCaches\n * @returns {(function(*=): (*))|*}\n */\nexport default function cacheAdapterFactory(originalAdapter, requestCaches = {}) {\n    return (config) => {\n        const requestChangesData = ['delete', 'patch'].includes(config?.method);\n        const shouldFlushCache = flushCacheUrls.includes(config?.url);\n\n        // remove all caches when something gets changed\n        if (requestChangesData || shouldFlushCache) {\n            Object.keys(requestCaches).forEach((key) => {\n                delete requestCaches[key];\n            });\n\n            return originalAdapter(config);\n        }\n\n        // ignore requests which are not in the allowedUrlList\n        const isNotInAllowList = !allowUrlList.includes(config?.url);\n        if (isNotInAllowList) {\n            return originalAdapter(config);\n        }\n\n        // use the stringified configuration as hashValue\n        const requestHash = JSON.stringify(config);\n\n        // check if identical requests already exists\n        const identicalRequest = requestCaches[requestHash];\n        if (identicalRequest) {\n            Shopware.Utils.debug.warn(\n                'http.factory',\n                'Duplicated requests happening in short amount of time: ',\n                config,\n                'This duplicated request should be fixed.',\n            );\n\n            // when identical requests exists then return the previous value as a clone\n            return cloneResponse(identicalRequest);\n        }\n\n        // when no identical request exists then\n        // create a new one with the original adapter\n        requestCaches[requestHash] = originalAdapter(config);\n\n        // remove the request cache entry after 1.5 seconds\n        setTimeout(() => {\n            if (requestCaches[requestHash]) {\n                delete requestCaches[requestHash];\n            }\n        }, requestCacheTimeout);\n\n        // return a clone of the created request from the request cache\n        return cloneResponse(requestCaches[requestHash]);\n    };\n}\n\n/**\n * This function returns a clone of the original axios response object.\n * This guarantees that the response can be mutated and following requests are returning the\n * original, initial response values.\n * @param request\n * @returns {Promise<{finishedRequest: *, response: any}>}\n */\nfunction cloneResponse(request) {\n    return request.then((response) => {\n        // response is in JSON format therefore JSON stringify is safe\n        return JSON.parse(JSON.stringify(response));\n    });\n}\n","import ApiService from '../api.service';\n\nexport default class AppUrlChangeService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'userInputSanitizeService';\n    }\n\n    /**\n     *\n     * @param {{ html: String, [field: String] }} param0\n     * @returns {*} - ApiService.handleResponse(response)\n     */\n    sanitizeInput({ html, field }) {\n        return this.httpClient.post(\n            '_admin/sanitize-html',\n            {\n                html,\n                field: field ?? null,\n            }, {\n                headers: this.getBasicHeaders(),\n            },\n        ).then(response => ApiService.handleResponse(response));\n    }\n}\n","import ApiService from '../api.service';\n\n/**\n * @class\n * @extends ApiService\n */\nclass UserActivityApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'increment/user_activity') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userActivityApiService';\n    }\n\n    /**\n     * @param payload\n     * @param additionalParams\n     * @param additionalHeaders\n     * @returns {Promise<T>}\n     */\n    increment(payload, additionalParams = {}, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post('/_action/increment/user_activity', payload, {\n                additionalParams,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @param additionalParams\n     * @param additionalHeaders\n     * @returns {Promise<T>}\n     */\n    getIncrement(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/increment/user_activity', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default UserActivityApiService;\n","/**\n * @module core/helper/jsonapi-parser\n */\nimport types from 'src/core/service/utils/types.utils';\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\n/**\n * Converts a JSONApi compliant data structure into a nested object structure which suits the data entry management\n * of the application much better.\n *\n * @example\n * import jsonApiParserService from 'src/core/service/jsonapi-parser.service';\n *\n * httpClient.get('/foo').then((response) => {\n *     const parsedResponse = jsonApiParserService(response.data);\n * });\n *\n * @param {String|Object} data Data structure\n * @returns {Object|null} Parsed data structure or `null` if the `data` parameter isn't an object or string.\n * @method jsonApiParserService\n * @memberOf module:core/helper/jsonapi-parser\n */\nexport default function jsonApiParserService(data) {\n    const json = convertRawDataToJson(data);\n\n    if (!json) {\n        return null;\n    }\n\n    // Provided data was parsed before or doesn't follows the JSONApi spec, so we're returning data structure untouched\n    if (json.parsed === true || !areTopMemberPropertiesPresent(json)) {\n        return json;\n    }\n\n    const convertedStructure = parseDataStructure(json);\n\n    // Mark the converted structure as \"parsed\", so we're not parsing it again\n    convertedStructure.parsed = true;\n\n    return convertedStructure;\n}\n\n/**\n * Tries to convert the raw data input into a JSON format.\n *\n * @param {String|Object} [data={}] Data structure to parse\n * @returns {Boolean|Object} Converted data structure or false when the data type wasn't an object or string.\n */\nfunction convertRawDataToJson(data) {\n    let jsonData;\n    if (types.isString(data)) {\n        try {\n            jsonData = JSON.parse(data);\n        } catch (err) {\n            return false;\n        }\n    } else if (types.isObject(data) && !types.isArray(data)) {\n        jsonData = data;\n    } else {\n        return false;\n    }\n\n    return jsonData;\n}\n\n/**\n * Basic check if we're dealing with a data structure which follows the JSONApi spec.\n * @param {Object} json\n * @returns {Boolean}\n */\nfunction areTopMemberPropertiesPresent(json) {\n    return (json.data !== undefined\n        || json.errors !== undefined\n        || json.links !== undefined\n        || json.meta !== undefined);\n}\n\n/**\n * Iterates over the `included` property of the JSONApi spec and creates a new map with unique identifiers.\n *\n * @param {Array} included\n * @returns {Map<any, any>}\n */\nfunction createIncludeMap(included) {\n    const includedMap = new Map();\n\n    if (!included || !included.length) {\n        return includedMap;\n    }\n\n    included.forEach((item) => {\n        const key = `${item.type}-${item.id}`;\n        includedMap.set(key, item);\n    });\n\n    return includedMap;\n}\n\n/**\n * Parses the data structure and converts it from JSONApi spec to a nested object structure to work with our data\n * management and handling.\n *\n * @param {Object} json\n * @returns {Object} parsed data structure\n */\nfunction parseDataStructure(json) {\n    const data = {\n        links: null,\n        errors: null,\n        data: null,\n        associations: null,\n        aggregations: null,\n    };\n\n    // Errors will be returned right away, we don't need to convert anything\n    if (json.errors) {\n        data.errors = json.errors;\n        return data;\n    }\n\n    const includedMap = createIncludeMap(json.included);\n\n    if (types.isArray(json.data)) {\n        data.data = json.data.map((record) => {\n            const dataItem = createItem(record, includedMap);\n\n            if (hasOwnProperty(dataItem, 'associationLinks')) {\n                data.associations = { ...data.associations, ...dataItem.associationLinks };\n                delete dataItem.associationLinks;\n            }\n\n            return dataItem;\n        });\n    } else if (types.isObject(json.data)) {\n        const dataItem = createItem(json.data, includedMap);\n\n        if (Object.prototype.hasOwnProperty.call(dataItem, 'associationLinks')) {\n            data.associations = { ...data.associations, ...dataItem.associationLinks };\n            delete dataItem.associationLinks;\n        }\n        data.data = dataItem;\n    } else {\n        data.data = null;\n    }\n\n    if (json.meta && Object.keys(json.meta).length) {\n        data.meta = renameObjectPropertiesToCamelCase(json.meta);\n    }\n\n    if (json.links && Object.keys(json.links).length) {\n        data.links = json.links;\n    }\n\n    if (json.aggregations && Object.keys(json.aggregations).length) {\n        data.aggregations = json.aggregations;\n    }\n\n    return data;\n}\n\n/**\n * Creates a new object item for the nested object structure.\n *\n * @param {Object} record\n * @param {Map} includedMap\n * @returns {{id, type, links: {}, meta: {}}}\n */\nfunction createItem(record, includedMap) {\n    let item = {\n        id: record.id,\n        type: record.type,\n        links: record.links || {},\n        meta: record.meta || {},\n    };\n\n    if (record.attributes && Object.keys(record.attributes).length > 0) {\n        const attributes = renameObjectPropertiesToCamelCase(record.attributes);\n        item = { ...item, ...attributes };\n    }\n\n    if (record.relationships) {\n        const relations = createRelationships(record.relationships, includedMap);\n        item = { ...item, ...relations.mappedRelations, ...{ associationLinks: relations.associationLinks } };\n    }\n\n    return item;\n}\n\n/**\n * Renames the attributes which can be kebab-case to camel-case.\n *\n * @param {Object} attributesCollection\n * @returns {Object}\n */\nfunction renameObjectPropertiesToCamelCase(attributesCollection) {\n    const attributes = {};\n    Object.keys(attributesCollection).forEach((attributeKey) => {\n        const attribute = attributesCollection[attributeKey];\n        const key = attributeKey.replace(/-([a-z])/g, (match, item) => {\n            return item.toUpperCase();\n        });\n        attributes[key] = attribute;\n    });\n\n    return attributes;\n}\n\n/**\n * Maps the included entries and creates new items out of it including dependency resolving\n * @param {Object} item\n * @param {Map} includedMap\n * @returns {Object}\n */\nfunction mapIncluded(item, includedMap) {\n    const includedKey = `${item.type}-${item.id}`;\n    if (!includedMap.has(includedKey)) {\n        return item;\n    }\n\n    const included = includedMap.get(includedKey);\n    return createItem(included, includedMap);\n}\n\n/**\n * Resolve the dependencies between entries in `includedMap` and the relations of the item.\n *\n * @param {Object} relationships\n * @param {Map} includedMap\n * @returns {Object}\n */\nfunction createRelationships(relationships, includedMap) {\n    const mappedRelations = {};\n    const associationLinks = {};\n\n    Object.keys(relationships).forEach((prop) => {\n        const relationship = relationships[prop];\n\n        if (relationship.links && Object.keys(relationship.links).length) {\n            associationLinks[prop] = relationship.links.related;\n        }\n\n        // We don't have any data, don't continue with the iteration\n        if (!relationship.data) {\n            return;\n        }\n\n        const data = relationship.data;\n\n        if (types.isArray(data)) {\n            mappedRelations[prop] = data.map((item) => mapIncluded(item, includedMap));\n        } else if (types.isObject(data)) {\n            mappedRelations[prop] = mapIncluded(data, includedMap);\n        } else {\n            mappedRelations[prop] = null;\n        }\n    });\n\n    return { mappedRelations: mappedRelations, associationLinks: associationLinks };\n}\n","import ApiService from '../api.service';\n\nexport default class AppUrlChangeService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'appUrlChangeService';\n    }\n\n    /**\n     * @returns {Promise<Array<{key: string, description: string}>>}\n     */\n    fetchResolverStrategies() {\n        return this.httpClient.get(\n            'app-system/app-url-change/strategies',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then(({ data }) => {\n            return Object.entries(data).map(([key, description]) => {\n                return { name: key, description };\n            });\n        });\n    }\n\n    /**\n     * @param {{name: string}} strategy\n     * @returns {*}\n     */\n    resolveUrlChange({ name }) {\n        return this.httpClient\n            .post(\n                'app-system/app-url-change/resolve',\n                { strategy: name },\n                {\n                    headers: this.getBasicHeaders(),\n                },\n            );\n    }\n\n    /**\n     * @returns {Promise<{newUrl: string, oldUrl: string} | null>}\n     */\n    getUrlDiff() {\n        return this.httpClient.get(\n            'app-system/app-url-change/url-difference',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((resp) => {\n            if (resp.status === 204) {\n                return null;\n            }\n            return resp.data;\n        });\n    }\n}\n","import ApiService from '../api.service';\n\nconst { Service } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nexport default class TagApiService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'tagApiService';\n    }\n\n    /**\n     * @param params: RequestParams\n     * @param filters: Object\n     * @param additionalHeaders: Object\n     * @returns {*} - ApiService.handleResponse(response)\n     */\n    filterIds(params, filters = {}, additionalHeaders = {}) {\n        return this.httpClient.post(\n            '_admin/tag-filter-ids',\n            { ...params, ...filters },\n            {\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then(response => ApiService.handleResponse(response));\n    }\n\n    /**\n     * @param ids: Array\n     * @param name: String\n     * @param definitionProperties: Object\n     * @param bulkMergeProgress: Object\n     */\n    async merge(ids, name, definitionProperties, bulkMergeProgress) {\n        const limit = 200;\n        const tagRepository = this.getRepository('tag');\n\n        bulkMergeProgress.isRunning = true;\n\n        const tag = tagRepository.create();\n        tag.name = name;\n\n        await tagRepository.save(tag);\n        tag._isNew = false;\n\n        // eslint-disable-next-line\n        for (const [propertyName, property] of Object.entries(definitionProperties)) {\n            if (property.relation !== 'many_to_many') {\n                // eslint-disable-next-line\n                continue;\n            }\n\n            let page = 1;\n            bulkMergeProgress.currentAssignment = propertyName;\n            bulkMergeProgress.progress = 0;\n            bulkMergeProgress.total = 0;\n\n            const repository = this.getRepository(property.entity);\n\n            do {\n                const criteria = new Criteria();\n                criteria.setLimit(limit);\n                criteria.setPage(page);\n                criteria.addFilter(Criteria.equalsAny('tags.id', ids));\n\n                // eslint-disable-next-line\n                const { data, total } = await repository.searchIds(criteria, Shopware.Context.api);\n                tag[propertyName] = data.map((id) => { return { id }; });\n\n                if (total !== 0) {\n                    bulkMergeProgress.total = total;\n                    // eslint-disable-next-line\n                    await tagRepository.save(tag);\n                }\n                tag[propertyName] = [];\n\n                bulkMergeProgress.progress += data.length;\n                page += 1;\n            } while (bulkMergeProgress.isRunning && bulkMergeProgress.progress < bulkMergeProgress.total);\n        }\n\n        if (!bulkMergeProgress.isRunning) {\n            return;\n        }\n\n        await tagRepository.syncDeleted(ids, Shopware.Context.api);\n    }\n\n    getRepository(entity) {\n        return Service('repositoryFactory').create(entity);\n    }\n}\n","import EntityCollection from '@shopware-ag/admin-extension-sdk/es/data/_internals/EntityCollection';\n\nexport default EntityCollection;\n","import domPurify from 'dompurify';\n\n/**\n * @description Contains all valid middleware names\n * @type {Array<String>}\n */\nconst middlewareNames = [\n    'beforeSanitizeElements',\n    'uponSanitizeElement',\n    'afterSanitizeElements',\n    'beforeSanitizeAttributes',\n    'uponSanitizeAttribute',\n    'afterSanitizeAttributes',\n    'beforeSanitizeShadowDOM',\n    'uponSanitizeShadowNode',\n    'afterSanitizeShadowDOM',\n];\n\nexport default class Sanitizer {\n    // eslint-disable-next-line inclusive-language/use-inclusive-words\n    /**\n     * Sets the domPurify config globally until {@link Sanitizer#clearConfig} will get called.\n     * See <https://github.com/cure53/DOMPurify/tree/master/demos#what-is-this> for all configuration options.\n     *\n     * @static\n     * @param {Object} config\n     * @return {void}\n     */\n    static setConfig(config) {\n        return domPurify.setConfig(config);\n    }\n\n    /**\n     * Clears all globally set configuration values.\n     *\n     * @static\n     * @return {void}\n     */\n    static clearConfig() {\n        return domPurify.clearConfig();\n    }\n\n    /**\n     * Adds a middleware to the sanitizer to allow modifying content.\n     *\n     * @static\n     * @param {String} middlewareName\n     * @param {Function} [middlewareFn=() => {}]\n     * @return {boolean}\n     */\n    static addMiddleware(middlewareName, middlewareFn = () => {}) {\n        if (!middlewareNames.includes(middlewareName)) {\n            Shopware.Utils.debug.warn(\n                'Sanitizer',\n                `No middleware found for name \"${middlewareName}\", \n                the following are available: ${middlewareNames.join(', ')}`,\n            );\n            return false;\n        }\n\n        domPurify.addHook(middlewareName, middlewareFn);\n        return true;\n    }\n\n    /**\n     * Removes a registered middleware using the provided name.\n     *\n     * @static\n     * @param {String}middlewareName\n     * @return {boolean}\n     */\n    static removeMiddleware(middlewareName) {\n        if (!middlewareNames.includes(middlewareName)) {\n            Shopware.Utils.debug.warn(\n                'Sanitizer',\n                `No middleware found for name \"${middlewareName}\", \n                the following are available: ${middlewareNames.join(', ')}`,\n            );\n            return false;\n        }\n\n        domPurify.removeHooks(middlewareName);\n        return true;\n    }\n\n    /**\n     * Sanitizes a malformed HTML string and suspicious strings\n     *\n     * @param {String} dirtyHtml\n     * @param {Object} [config={}]\n     * @return {String}\n     */\n    static sanitize(dirtyHtml, config = {}) {\n        return domPurify.sanitize(dirtyHtml, config);\n    }\n}\n","export default class MiddlewareHelper {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this._stack = [];\n    }\n\n    /**\n     * Returns the stack of registered middleware\n     *\n     * @returns {Array}\n     */\n    get stack() {\n        return this._stack;\n    }\n\n    /**\n     * Registers a new middleware to the stack\n     *\n     * @param {Function} middleware\n     * @throws Will throw an error if the argument is not a function\n     * @return {MiddlewareHelper}\n     */\n    use(middleware) {\n        if (typeof middleware !== 'function') {\n            throw new Error('Middleware must be a function.');\n        }\n        this._stack.push(middleware);\n        return this;\n    }\n\n    /**\n     * Runs all registered middleware from the stack\n     *\n     * @param {*} args\n     */\n    go(...args) {\n        // @see NEXT-15358 change _recursive_ to iterative stack processing\n        // keeping function signature to stay compatible to existing code\n        this.stack.forEach(frame => frame(() => {}, ...args));\n    }\n}\n","/**\n * @module core/factory/module\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport { hasOwnProperty, merge } from 'src/core/service/utils/object.utils';\nimport types from 'src/core/service/utils/types.utils';\nimport MiddlewareHelper from 'src/core/helper/middleware.helper';\nimport type { Route, RouteConfig } from 'vue-router';\nimport type { ComponentConfig } from './component.factory';\n\nexport default {\n    getModuleRoutes,\n    registerModule,\n    getModuleRegistry,\n    getModuleByEntityName,\n    getModuleSnippets,\n    getModuleByKey,\n};\n\nexport type ModuleTypes = 'plugin' | 'core';\ntype ModuleRoutes = Map<string, RouteConfig>\n\ninterface Navigation {\n    moduleType: ModuleTypes,\n    parent?: string,\n    id: string,\n    path?: string,\n    link?: string,\n    label?: string,\n    position?: number,\n}\n\ninterface SettingsItem {\n    group: 'shop' | 'system' | 'plugin',\n    to: string,\n    icon?: string,\n    iconComponent: unknown,\n    privilege?: string,\n    id?: string,\n    name?: string,\n    label?: string,\n}\n\ninterface ModuleManifest {\n    flag: string,\n    type: ModuleTypes,\n    routeMiddleware: (next: () => void, currentRoute: Route) => void,\n    routes: {\n        [key: string]: RouteConfig\n    },\n    routePrefixName: string,\n    routePrefixPath: string,\n    coreRoute?: boolean,\n    navigation?: Navigation[],\n    settingsItem?: SettingsItem[] | SettingsItem,\n    extensionEntryRoute?: {\n        extensionName: string,\n        route: string,\n    },\n    entity?: string,\n    entityDisplayProperty?: string,\n    snippets?: {\n        [lang: string]: unknown\n    },\n    name: string,\n    title: string,\n    display?: boolean\n}\n\ninterface ModuleDefinition {\n    manifest: ModuleManifest,\n    navigation?: Navigation[],\n    routes: ModuleRoutes,\n    type: ModuleTypes\n}\n\n/**\n * Registry for modules\n * @type {Map<String, Object>}\n */\nconst modules: Map<string, ModuleDefinition> = new Map();\n\nconst middlewareHelper = new MiddlewareHelper();\n\n/**\n * Returns the registry of all modules mounted in the application.\n */\nfunction getModuleRegistry(): Map<string, ModuleDefinition> {\n    modules.forEach((value, key) => {\n        if (hasOwnProperty(value.manifest, 'flag')\n            && !Shopware.Feature.isActive(value.manifest.flag)\n        ) {\n            modules.delete(key);\n        }\n    });\n\n    return modules;\n}\n\n/**\n * Registers a module in the application. The module will be mounted using\n * the defined routes of the module using the router.\n */\nfunction registerModule(moduleId: string, module: ModuleManifest): false | ModuleDefinition {\n    const type = module.type || 'plugin';\n    let moduleRoutes: ModuleRoutes = new Map();\n\n    // A module should always have an unique identifier cause overloading modules can cause unexpected side effects\n    if (!moduleId) {\n        warn(\n            'ModuleFactory',\n            'Module has no unique identifier \"id\". Abort registration.',\n            module,\n        );\n        return false;\n    }\n\n    if (modules.has(moduleId)) {\n        warn(\n            'ModuleFactory',\n            `A module with the identifier \"${moduleId}\" is registered already. Abort registration.`,\n            modules.get(moduleId),\n        );\n\n        return false;\n    }\n\n    const splitModuleId = moduleId.split('-');\n\n    if (splitModuleId.length < 2) {\n        warn(\n            'ModuleFactory',\n            'Module identifier does not match the necessary format \"[namespace]-[name]\":',\n            moduleId,\n            'Abort registration.',\n        );\n        return false;\n    }\n\n    if (!hasOwnProperty(module, 'display')) {\n        module.display = true;\n    }\n\n    if (!module.display) {\n        return false;\n    }\n\n    // Modules will be mounted using the routes definition in the manifest file. If the module doesn't contains a routes\n    // definition it isn't accessible in the application.\n    if (!hasOwnProperty(module, 'routes') && !(module.routeMiddleware)) {\n        warn(\n            'ModuleFactory',\n            `Module \"${moduleId}\" has no configured routes or a routeMiddleware.`,\n            'The module will not be accessible in the administration UI.',\n            'Abort registration.',\n            module,\n        );\n        return false;\n    }\n\n    // Sanitize the modules routes\n    if (hasOwnProperty(module, 'routes')) {\n        Object.keys(module.routes).forEach((routeKey) => {\n            let route = module.routes[routeKey];\n\n            // Check if custom prefix name exists\n            const routePrefixName = module.routePrefixName ? module.routePrefixName : splitModuleId.join('.');\n\n            // Rewrite name\n            route.name = `${routePrefixName}.${routeKey}`;\n\n            // Check if custom prefix path exists\n            const routePrefixPath = module.routePrefixPath ? module.routePrefixPath : splitModuleId.join('/');\n\n            // Core routes don't need to be nested\n            if (!route.coreRoute) {\n                // Rewrite path\n                route.path = `/${routePrefixPath}/${route.path}`;\n            }\n\n\n            // Set the type of the route e.g. \"core\" or \"plugin\"\n            route.type = type;\n\n            // Generate the component list based on a route\n            route = createRouteComponentList(route, moduleId, module);\n\n            if (!route) {\n                return;\n            }\n\n            // Support for children routes\n            const childrenRoutes = route.children ?? {};\n            if (hasOwnProperty(route, 'children') && Object.keys(childrenRoutes).length) {\n                route = iterateChildRoutes(route);\n\n                moduleRoutes = registerChildRoutes(route, moduleRoutes);\n            }\n\n            // Alias support\n            if (\n                route.alias\n                && typeof route.alias === 'string'\n                && route.alias.length > 0\n                && (!route.coreRoute)\n            ) {\n                route.alias = `/${splitModuleId.join('/')}/${route.alias}`;\n            }\n\n            route.isChildren = false;\n            route.routeKey = routeKey;\n\n            moduleRoutes.set(route.name ?? '', route);\n        });\n    }\n\n    // We only register the module if it either has one valid route or uses the router middleware\n    if (module.routeMiddleware && types.isFunction(module.routeMiddleware)) {\n        middlewareHelper.use(module.routeMiddleware);\n    } else if (moduleRoutes.size === 0) {\n        warn(\n            'ModuleFactory',\n            `The module \"${moduleId}\" was not registered cause it hasn't a valid route definition`,\n            'Abort registration.',\n            module.routes,\n        );\n        return false;\n    }\n\n    const moduleDefinition: ModuleDefinition = {\n        routes: moduleRoutes,\n        manifest: module,\n        type,\n    };\n\n    // Add the navigation of the module to the module definition. We'll create a menu entry later on\n    if (hasOwnProperty(module, 'navigation') && module.navigation) {\n        if (!types.isArray(module.navigation)) {\n            warn(\n                'ModuleFactory',\n                'The route definition has to be an array.',\n                module.navigation,\n            );\n            return false;\n        }\n\n        module.navigation = module.navigation.filter((navigationEntry) => {\n            navigationEntry.moduleType = module.type;\n\n            if (module.type === 'plugin' && !navigationEntry.parent) {\n                warn(\n                    'ModuleFactory',\n                    'Navigation entries from plugins are not allowed on the first level.',\n                    'Set a property \"parent\" to register your navigation entry',\n                );\n                return false;\n            }\n\n            if (!navigationEntry.id && !navigationEntry.path && !navigationEntry.parent && !navigationEntry.link) {\n                warn(\n                    'ModuleFactory',\n                    'The navigation entry does not contains the necessary properties',\n                    'Abort registration of the navigation entry',\n                    navigationEntry,\n                );\n                return false;\n            }\n\n            if (!navigationEntry.label || !navigationEntry.label.length) {\n                warn(\n                    'ModuleFactory',\n                    'The navigation entry needs a property called \"label\"',\n                );\n                return false;\n            }\n\n            if (module.type === 'plugin') {\n                if (navigationEntry.position) {\n                    navigationEntry.position += 1000;\n                } else {\n                    navigationEntry.position = 1000;\n                }\n            }\n\n            return true;\n        });\n        moduleDefinition.navigation = module.navigation;\n    }\n\n    if (hasOwnProperty(module, 'settingsItem') && module.settingsItem) {\n        addSettingsItemsToStore(moduleId, module);\n    }\n\n    if (hasOwnProperty(module, 'extensionEntryRoute') && module.extensionEntryRoute) {\n        addEntryRouteToExtensionRouteStore(module.extensionEntryRoute);\n    }\n\n    modules.set(moduleId, moduleDefinition);\n\n    return moduleDefinition;\n}\n\n/**\n * Registers the route children in the module routes map recursively.\n */\nfunction registerChildRoutes(routeDefinition: RouteConfig, moduleRoutes: ModuleRoutes): ModuleRoutes {\n    Object.values(routeDefinition.children ?? {}).map((child) => {\n        if (hasOwnProperty(child, 'children') && Object.keys(child.children ?? {}).length) {\n            moduleRoutes = registerChildRoutes(child, moduleRoutes);\n        }\n        moduleRoutes.set(child.name ?? '', child);\n        return child;\n    });\n\n    return moduleRoutes;\n}\n\n/**\n * Recursively iterates over the route children definitions and converts the format to the vue-router route definition.\n */\nfunction iterateChildRoutes(routeDefinition: RouteConfig): RouteConfig {\n    const routeDefinitionChildren = routeDefinition.children;\n\n    if (!routeDefinitionChildren || routeDefinitionChildren === undefined) {\n        return routeDefinition;\n    }\n\n    routeDefinition.children = Object.entries(routeDefinitionChildren).map(([key, child]) => {\n        if (child.path && child.path.length === 0) {\n            child.path = '';\n        } else {\n            child.path = `${routeDefinition.path}/${child.path}`;\n        }\n\n        child.name = `${routeDefinition.name ?? ''}.${key}`;\n        child.isChildren = true;\n\n        if (hasOwnProperty(child, 'children') && Object.keys(child.children ?? {}).length) {\n            child = iterateChildRoutes(child);\n        }\n\n        return child;\n    });\n\n    return routeDefinition;\n}\n\n/**\n * Generates the route component list e.g. adds supports for multiple components per route as well as validating\n * the developer input.\n */\nfunction createRouteComponentList(route: RouteConfig, moduleId: string, module: ModuleManifest): RouteConfig {\n    if (hasOwnProperty(module, 'flag')) {\n        route.flag = module.flag;\n    }\n\n    // Remove the component cause we remapped it to the components object of the route object\n    if (route.component) {\n        route.components = {\n            default: route.component,\n        };\n        delete route.component;\n    }\n\n    const componentList: { [componentKey: string]: ComponentConfig } = {};\n    const routeComponents = route.components ?? {};\n    Object.keys(routeComponents).forEach((componentKey) => {\n        const component = routeComponents[componentKey];\n\n        // Don't register a component without a name\n        if (!component) {\n            warn(\n                'ModuleFactory',\n                `The route definition of module \"${moduleId}\" is not valid.\n                    A route needs an assigned component name.`,\n            );\n            return;\n        }\n\n        // @ts-expect-error\n        componentList[componentKey] = component;\n    });\n\n    // @ts-expect-error\n    route.components = componentList;\n\n    return route;\n}\n\n/**\n * Returns the defined module routes which will be registered in the router and therefore will be accessible in the\n * application.\n */\nfunction getModuleRoutes(): RouteConfig[] {\n    const moduleRoutes: RouteConfig[] = [];\n\n    modules.forEach((module) => {\n        module.routes.forEach((route) => {\n            if (hasOwnProperty(route, 'flag') && !Shopware.Feature.isActive(route.flag)) {\n                return;\n            }\n\n            if (route.isChildren) {\n                return;\n            }\n            middlewareHelper.go(route);\n            moduleRoutes.push(route);\n        });\n    });\n\n    return moduleRoutes;\n}\n\n/**\n * Returns the first found module with the given entity name\n */\nfunction getModuleByEntityName(entityName: string): ModuleDefinition | undefined {\n    return Array.from(modules.values()).find((value) => {\n        return entityName === value.manifest.entity;\n    });\n}\n\n/**\n * Returns a list of all module specific snippets\n */\nfunction getModuleSnippets(): { [lang:string]: unknown } {\n    return Array.from(modules.values()).reduce<{ [lang:string] : unknown }>((accumulator, module) => {\n        const manifest = module.manifest;\n\n        if (!hasOwnProperty(manifest, 'snippets')) {\n            return accumulator;\n        }\n\n        const localeKey = Object.keys(manifest.snippets ?? {});\n        if (!localeKey.length) {\n            return accumulator;\n        }\n\n        localeKey.forEach((key) => {\n            if (!hasOwnProperty(accumulator, key)) {\n                accumulator[key] = {};\n            }\n            if (manifest.snippets) {\n                const snippets = manifest.snippets[key];\n                accumulator[key] = merge(accumulator[key], snippets);\n            }\n        });\n\n        return accumulator;\n    }, {});\n}\n\n/**\n * Adds a module to the settingsItems Store\n */\nfunction addSettingsItemsToStore(moduleId: string, module: ModuleManifest): void {\n    if (hasOwnProperty(module, 'flag') && !Shopware.Feature.isActive(module.flag)) {\n        return;\n    }\n\n    if (!module.settingsItem) {\n        return;\n    }\n\n    if (!Array.isArray(module.settingsItem)) {\n        module.settingsItem = [module.settingsItem];\n    }\n\n    module.settingsItem.forEach((settingsItem) => {\n        if (settingsItem.group\n            && settingsItem.to\n            && (settingsItem.icon || settingsItem.iconComponent)\n        ) {\n            if (!hasOwnProperty(settingsItem, 'id') || !settingsItem.id) {\n                settingsItem.id = moduleId;\n            }\n\n            if (!hasOwnProperty(settingsItem, 'name') || !settingsItem.name) {\n                settingsItem.name = module.name;\n            }\n\n            if (!hasOwnProperty(settingsItem, 'label') || !settingsItem.label) {\n                settingsItem.label = module.title;\n            }\n\n            Shopware.State.commit('settingsItems/addItem', settingsItem);\n        } else {\n            warn(\n                'ModuleFactory',\n                'The settingsItem entry does not contain the necessary properties',\n                'Abort registration of settingsItem entry',\n                settingsItem,\n            );\n        }\n    });\n}\n\nfunction addEntryRouteToExtensionRouteStore(config: { extensionName: string, route: string }):void {\n    if (config.extensionName === 'string') {\n        warn(\n            'ModuleFactory',\n            'extensionEntryRoute.extensionName needs to be an string',\n        );\n\n        return;\n    }\n\n    if (config.route === 'string') {\n        warn(\n            'ModuleFactory',\n            'extensionEntryRoute.route needs to be an string',\n        );\n\n        return;\n    }\n\n    Shopware.State.commit('extensionEntryRoutes/addItem', config);\n}\n\n/**\n * Returns the first found module with the given key-value\n */\nfunction getModuleByKey(key: string, value: string): ModuleDefinition | undefined {\n    return Array.from(modules.values()).find((module) => {\n        return value === module.manifest[key as keyof ModuleManifest];\n    });\n}\n","// eslint-disable\n/**\n * @module core/factory/async-template\n * @private\n */\nimport Twig from 'twig';\nimport { cloneDeep } from 'src/core/service/utils/object.utils';\n\nexport default {\n    registerComponentTemplate,\n    extendComponentTemplate,\n    registerTemplateOverride,\n    getRenderedTemplate,\n    resolveTemplates,\n    clearTwigCache,\n    getTwigCache,\n    disableTwigCache,\n    getTemplateRegistry,\n    getNormalizedTemplateRegistry,\n    getTemplateOverrides,\n};\n\n/**\n * Internal Twig.Templates method\n * @param {null}\n */\nlet TwigTemplates = null;\n\n/**\n * Extends the Twig core for compatibility.\n */\nTwig.extend(TwigCore => {\n    /**\n     * Remove tokens 2 (output_whitespace_pre), 3 (output_whitespace_post), 4 (output_whitespace_both) and 8 (output).\n     * This tokens are used for functions and data output.\n     * Since the data binding is done in Vue this could lead to syntax issues.\n     * We are only using the block system for template inheritance.\n     *\n     * @type {Array<any>}\n     */\n    TwigCore.token.definitions = [\n        TwigCore.token.definitions[0],\n        TwigCore.token.definitions[1],\n        TwigCore.token.definitions[5],\n        TwigCore.token.definitions[6],\n        TwigCore.token.definitions[7],\n        TwigCore.token.definitions[9],\n        TwigCore.token.definitions[10],\n    ];\n\n    /**\n     * Twig inheritance extension.\n     * The parent function is used as a statement tag.\n     * This is used to prevent syntax issues between Twig and Vue.\n     * Use `{% parent %}` to print out the parent content of a block.\n     */\n    TwigCore.exports.extendTag({\n        type: 'parent',\n        regex: /^parent/,\n        next: [],\n        open: true,\n\n        parse(token, context, chain) {\n            return {\n                chain,\n                output: TwigCore.placeholders.parent,\n            };\n        },\n    });\n\n    /** Make the placeholders available in the exposed Twig object. */\n    TwigCore.exports.placeholders = TwigCore.placeholders;\n\n    /** Make the Twig template cache registry available. */\n    TwigCore.exports.getRegistry = function getRegistry() {\n        return TwigCore.Templates.registry;\n    };\n\n    /** Provide possibility to clear the template cache registry */\n    TwigCore.exports.clearRegistry = function clearRegistry() {\n        TwigCore.Templates.registry = {};\n    };\n\n    TwigTemplates = TwigCore.Templates;\n    TwigCore.cache = false;\n});\n\n/**\n * Escaped parent placeholder\n * @type {string}\n */\nconst parentPlaceholder = Twig.placeholders.parent.replace(/\\|/g, '\\\\|');\n\n/**\n * Parent placeholder as regular expression\n * @type {RegExp}\n */\nconst parentRegExp = new RegExp(parentPlaceholder, 'gm');\n\n/**\n * Holds a list with all registered component templates.\n * Including registered overrides.\n *\n * @type {Map<String, Object>}\n */\nconst templateRegistry = new Map();\n\n/**\n * Holds a list with all registered normalized component templates.\n * Including registered overrides.\n *\n * Each template contains the following information\n * - name - name of the component associated with the template\n * - template - Twig.Template which represents the template raw\n * - raw - Raw template string\n * - html - Pre-rendered markup\n * - extends - If a component extends another component, it will be listed here\n *\n * @type {Map<String, Object>}\n */\nconst normalizedTemplateRegistry = new Map();\n\n/**\n * Registers the main template for the defined component.\n *\n * @private\n * @param {string} componentName\n * @param {string} componentTemplate\n * @returns {boolean}\n */\nfunction registerComponentTemplate(componentName, componentTemplate = null) {\n    const template = templateRegistry.get(componentName) || {};\n    const overrides = (template.overrides ? template.overrides : []);\n\n    templateRegistry.set(componentName, {\n        name: componentName,\n        raw: componentTemplate,\n        extend: null,\n        overrides: overrides,\n    });\n\n    return true;\n}\n/**\n * Registers the main template for the component\n * based on the template of the extended component.\n * If the component comes with an own template extension\n * it will also be registered as an override of the extended template.\n *\n * @private\n * @param {String} componentName\n * @param {String} extendComponentName\n * @param {String|null} [templateExtension=null]\n */\nfunction extendComponentTemplate(\n    componentName,\n    extendComponentName,\n    templateExtension = null,\n) {\n    const template = templateRegistry.get(componentName) || {};\n    const overrides = (template.overrides ? template.overrides : []);\n\n    // If a component doesn't override the template, provide an empty string\n    if (!templateExtension) {\n        templateExtension = '';\n    }\n\n    templateRegistry.set(componentName, {\n        name: componentName,\n        raw: templateExtension,\n        extend: extendComponentName,\n        overrides: overrides,\n    });\n\n    return true;\n}\n\n/**\n * Registers an override of a component template.\n * The override can be registered before the main template is defined.\n *\n * @private\n * @param {String} componentName\n * @param {String|null} [templateOverride=null]\n * @param {Number|null} [overrideIndex=0]\n */\nfunction registerTemplateOverride(\n    componentName,\n    templateOverride = null,\n    overrideIndex = 0,\n) {\n    const component = templateRegistry.get(componentName) || {\n        name: componentName,\n        raw: null,\n        extend: null,\n        overrides: [],\n    };\n    component.overrides.push({\n        index: overrideIndex,\n        raw: templateOverride,\n    });\n    templateRegistry.set(componentName, component);\n    return true;\n}\n\nfunction registerNormalizedTemplate(item) {\n    let templateDefinition = resolveExtendsComponent(item);\n\n    // extended component was not found\n    if (!templateDefinition) {\n        normalizedTemplateRegistry.delete(item.name);\n        return;\n    }\n\n    templateDefinition = {\n        ...templateDefinition,\n        html: '',\n    };\n\n    const hasOverridesInExtensionChain = (component) => {\n        if (!component.extend) {\n            return false;\n        }\n\n        return component.extend.overrides.length > 0 || hasOverridesInExtensionChain(component.extend);\n    };\n    if (hasOverridesInExtensionChain(templateDefinition) && Shopware.Feature.isActive('FEATURE_NEXT_17978')) {\n        // If this component extends (transitively) a component that is overwritten, resolve that extended component\n        // with all its overrides first, before resolving this component with it.\n        registerNormalizedTemplate(templateRegistry.get(templateDefinition.extend.name));\n    }\n\n    // Extend with overrides\n    const resolvedtokens = resolveExtendTokens(templateDefinition.template.tokens, templateDefinition);\n    templateDefinition.template.tokens = resolvedtokens;\n\n    // Write back built template to the registry\n    normalizedTemplateRegistry.set(templateDefinition.name, templateDefinition);\n\n    // Apply overrides\n    templateDefinition = applyTemplateOverrides(templateDefinition.name);\n    templateDefinition.html = templateDefinition.html.replace(parentRegExp, '');\n\n    // Final template will be written to the registry\n    normalizedTemplateRegistry.set(templateDefinition.name, templateDefinition);\n}\n\n/**\n * Resolves the templates, builds the extend chain, applies overrides, replaces all remaining parent placeholders\n * and updates the item in the registry.\n *\n * @private\n * @returns {Map<String, Object>}\n */\nfunction resolveTemplates() {\n    const componentTemplates = Array.from(templateRegistry.values());\n    componentTemplates.forEach(registerNormalizedTemplate);\n\n    return normalizedTemplateRegistry;\n}\n\nfunction applyTemplateOverrides(name) {\n    const item = normalizedTemplateRegistry.get(name);\n\n    if (!item.overrides.length) {\n        // Render the final rendered output with all overridden blocks\n        const finalHtml = item.template.render({});\n\n        // Update item which will written to the registry\n        const updatedTemplate = {\n            ...item,\n            html: finalHtml,\n        };\n\n        normalizedTemplateRegistry.set(updatedTemplate.name, updatedTemplate);\n        return updatedTemplate;\n    }\n\n    const baseTemplate = normalizedTemplateRegistry.get(item.name);\n\n    // iterate the overrides per component\n    item.overrides.forEach((override, index) => {\n        const overrideTemplate = buildTwigTemplateInstance(\n            `${baseTemplate.name}-${index}`,\n            override.raw,\n        );\n\n        overrideTemplate.tokens.forEach((overrideTokens) => {\n            // resolve the template tokens\n            if (overrideTokens.type === 'logic') {\n                baseTemplate.template.tokens = resolveTokens(baseTemplate.template.tokens, [overrideTokens], name);\n            }\n        });\n    });\n\n    normalizedTemplateRegistry.set(baseTemplate.name, baseTemplate);\n\n    let updatedTemplate = normalizedTemplateRegistry.get(item.name);\n\n    // Render the final rendered output with all overridden blocks\n    const finalHtml = updatedTemplate.template.render({});\n\n    // Update item which will written to the registry\n    updatedTemplate = {\n        ...updatedTemplate,\n        html: finalHtml,\n    };\n\n    normalizedTemplateRegistry.set(updatedTemplate.name, updatedTemplate);\n\n    return updatedTemplate;\n}\n\n/**\n * Resolve template tokens\n * @param {Object[]} tokens\n * @param {Object[]} overrideTokens\n * @returns {Object} | undefined\n */\nfunction resolveTokens(tokens, overrideTokens) {\n    if (!tokens) {\n        return [];\n    }\n\n    return tokens.reduce((acc, token) => {\n        if (token.type !== 'logic' || !token.token || !token.token.block) {\n            return [...acc, token];\n        }\n\n        const blockName = token.token.block;\n        const isInOverrides = findBlock(blockName, overrideTokens);\n\n        if (isInOverrides) {\n            if (isInOverrides.type === 'logic') {\n                isInOverrides.token.output = mergeTokens(token, isInOverrides.token.output);\n            }\n\n            return [...acc, isInOverrides];\n        }\n\n        const resolvedTokens = resolveTokens(token.token.output, overrideTokens);\n\n        token.token.output = resolvedTokens;\n\n        return [...acc, token];\n    }, []);\n}\n\n\nfunction mergeTokens(token, tokens) {\n    return tokens.reduce((acc, t) => {\n        if (t.type === 'logic' && t.token.type === 'parent') {\n            return [...acc, ...token.token.output];\n        }\n\n        if (t.token?.output) {\n            t.token.output = resolveSubTokens(t.token.output, token.token.output);\n        }\n\n        return [...acc, t];\n    }, []);\n}\n\n/**\n * Resolve parent in sub-token\n * @param {Object[]} subToken\n * @param {Object} replacement\n * @returns {Object[]}\n */\nfunction resolveSubTokens(subToken, replacement) {\n    return subToken.reduce((xs, s) => {\n        if (s.type === 'logic' && s.token.type === 'parent') {\n            return [...xs, ...replacement];\n        }\n\n        return [...xs, s];\n    }, []);\n}\n\n/**\n * Resolve token of the extension\n * @param {Object[]} tokens\n * @param {Object} item\n * @returns {Object[]}\n */\nfunction resolveExtendTokens(tokens, item) {\n    if (!item.extend) {\n        return tokens;\n    }\n\n    let extendedComponentTokens;\n    if (normalizedTemplateRegistry.has(item.extend.name) && Shopware.Feature.isActive('FEATURE_NEXT_17978')) {\n        // If the component was already registered in the normalizedTemplateRegistry (i.e. their overrides and tokens\n        // have been resolved), use that template's tokens instead of the raw tokens of an unresolved component.\n        // Use a clone of the tokens so the already registered template is not altered.\n        extendedComponentTokens = cloneDeep(normalizedTemplateRegistry.get(item.extend.name).template.tokens);\n    } else {\n        extendedComponentTokens = item.extend.template.tokens;\n    }\n\n    const extensionTokens = Array.from(resolveExtendTokens(extendedComponentTokens, item.extend));\n    const itemTokens = normalizeTokens(Array.from(tokens), extensionTokens);\n\n    tokens = extensionTokens.map((token) => {\n        return resolveToken(token, itemTokens, item.name);\n    });\n\n    return tokens;\n}\n\n/**\n * Normalize itemTokens - remove wrapping block which doesn't exist in the extension token tree\n * @param {Object[]} tokens\n * @param {Object[]} extensionTokens\n * @returns {Object[]}\n */\nfunction normalizeTokens(tokens, extensionTokens) {\n    const result = tokens.reduce((acc, token) => {\n        if (token.token && !findNestedBlock(token.token.block, extensionTokens)) {\n            return [...acc, ...token.token.output];\n        }\n\n        return [...acc, token];\n    }, []);\n\n    return result;\n}\n\n/**\n * Search deeply for a token by name in a list of tokens and their tokens\n * @param {String} blockName\n * @param {Object[]} tokens\n * @returns {Object} | undefined\n */\nfunction findNestedBlock(blockName, tokens) {\n    const result = tokens.find((t) => {\n        const exists = t.token && t.token.block === blockName;\n\n        return exists || (t.token && findNestedBlock(blockName, t.token.output));\n    });\n\n    return result;\n}\n\n/**\n * Search for a token by name in a list of tokens\n * @param {String} blockName\n * @param {Object[]} tokens\n * @returns {Object} | undefined\n */\nfunction findBlock(blockName, tokens) {\n    const result = tokens.find((t) => {\n        return t.token && t.token.block === blockName;\n    });\n\n    return result;\n}\n\nfunction resolveToken(token, itemTokens, name) {\n    // plain html - just return the token\n    if (token.type !== 'logic') {\n        return token;\n    }\n\n    const tokenBlockName = token.token.block;\n    const isIn = findBlock(tokenBlockName, itemTokens);\n\n    if (isIn) {\n        if (isIn.type !== 'logic') {\n            return isIn;\n        }\n\n        isIn.token.output = mergeTokens(token, isIn.token.output);\n\n        return isIn;\n    }\n\n    // resolve the outputs in depth\n    token.token.output = token.token.output.map((t) => {\n        return resolveToken(t, itemTokens, name);\n    });\n\n    return token;\n}\n\n/**\n * Resolves the extend chain for a given component\n * @param {Object} item\n * @returns {null|Object}\n */\nfunction resolveExtendsComponent(item) {\n    if (!item) {\n        return null;\n    }\n\n    if (item.extend) {\n        const extend = resolveExtendsComponent(templateRegistry.get(item.extend));\n        if (!extend) {\n            return null;\n        }\n\n        return {\n            ...item,\n            template: buildTwigTemplateInstance(item.name, item.raw),\n            extend,\n        };\n    }\n\n    return { ...item, template: buildTwigTemplateInstance(item.name, item.raw) };\n}\n\n/**\n * Creates a new Twig.Template instance which will be later used to render the component template\n * @param {String} name - component name\n * @param {String} template - Template raw string\n * @returns {Twig.Template}\n */\nfunction buildTwigTemplateInstance(name, template) {\n    return TwigTemplates.parsers.twig({\n        id: `${name}-baseTemplate`,\n        data: template,\n        path: false,\n        options: {},\n    });\n}\n\n/**\n * Clears the twig cache\n * @private\n * @returns {void}\n */\nfunction clearTwigCache() {\n    Twig.clearRegistry();\n}\n\n/**\n * Returns the twig cache\n *\n * @private\n * @returns {Object}\n */\nfunction getTwigCache() {\n    return Twig.getRegistry();\n}\n\n/**\n * Disables the twig cache\n *\n * @private\n * @returns {void}\n */\nfunction disableTwigCache() {\n    Twig.cache(false);\n}\n\n/**\n * Get the complete template registry.\n *\n * @private\n * @returns {Map}\n */\nfunction getTemplateRegistry() {\n    return templateRegistry;\n}\n\n/**\n * Get the complete template registry which got normalized including\n * twig templates and the pre-rendered markup\n *\n * @private\n * @returns {Map}\n */\nfunction getNormalizedTemplateRegistry() {\n    return normalizedTemplateRegistry;\n}\n\n/**\n * Get all template overrides which are registered for a component.\n *\n * @private\n * @param componentName\n * @returns {Array}\n */\nfunction getTemplateOverrides(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return [];\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    return template.overrides || [];\n}\n\n/**\n * Returns the rendered markup for the component template including all template overrides.\n *\n * @private\n * @param componentName\n * @returns {null|string}\n */\nfunction getRenderedTemplate(componentName) {\n    if (Shopware.Feature.isActive('FEATURE_NEXT_19822')) {\n        const component = templateRegistry.get(componentName);\n\n        if (!component) {\n            return null;\n        }\n\n        registerNormalizedTemplate(component);\n\n        const componentTemplate = normalizedTemplateRegistry.get(componentName);\n\n        if (!componentTemplate) {\n            return null;\n        }\n\n        return componentTemplate.html;\n        // eslint-disable-next-line no-else-return\n    } else {\n        const componentTemplate = normalizedTemplateRegistry.get(componentName);\n\n        if (!componentTemplate) {\n            return null;\n        }\n\n        return componentTemplate.html;\n    }\n}\n","/**\n * @module core/factory/component\n * @deprecated tag:v6.5.0 - will be replaced by async-component.factory.ts\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport { cloneDeep } from 'src/core/service/utils/object.utils';\nimport TemplateFactory from 'src/core/factory/template.factory';\n// eslint-disable-next-line import/no-named-default\nimport type { default as Vue, ComponentOptions } from 'vue';\nimport type {\n    ThisTypedComponentOptionsWithRecordProps,\n    ThisTypedComponentOptionsWithArrayProps,\n// eslint-disable-next-line import/no-unresolved\n} from 'vue/types/options';\n\nexport default {\n    register,\n    extend,\n    override,\n    build,\n    getComponentTemplate,\n    getComponentRegistry,\n    getOverrideRegistry,\n    getComponentHelper,\n    registerComponentHelper,\n    resolveComponentTemplates,\n    markComponentTemplatesAsNotResolved,\n};\n\n// @ts-expect-error\nexport interface ComponentConfig<V extends Vue = Vue> extends ComponentOptions<V> {\n    functional?: boolean,\n    extends?: ComponentConfig<V> | string,\n    _isOverride?: boolean,\n}\n\n/**\n * Indicates if the templates of the components are resolved.\n */\nlet templatesResolved = false;\n\n/**\n * Registry which holds all components\n */\nconst componentRegistry = new Map<string, ComponentConfig>();\n\n/**\n * Registry which holds all component overrides\n */\nconst overrideRegistry = new Map<string, ComponentConfig[]>();\n\n/**\n * Registry for globally registered helper functions like src/app/service/map-error.service.js\n */\nconst componentHelper: { [helperName: string]: unknown } = {};\n\n/**\n * Returns the map with all registered components.\n */\nfunction getComponentRegistry(): Map<string, ComponentConfig> {\n    return componentRegistry;\n}\n\n/**\n * Returns the map with all registered component overrides.\n */\nfunction getOverrideRegistry(): Map<string, ComponentConfig[]> {\n    return overrideRegistry;\n}\n\n/**\n * Returns the map of component helper functions\n */\nfunction getComponentHelper(): { [helperName: string]: unknown } {\n    return componentHelper;\n}\n\n/**\n * Register a new component helper function\n */\nfunction registerComponentHelper(name: string, helperFunction: unknown): boolean {\n    if (!name || !name.length) {\n        warn('ComponentFactory/ComponentHelper', 'A ComponentHelper always needs a name.', helperFunction);\n        return false;\n    }\n\n    if (componentHelper.hasOwnProperty(name)) {\n        warn('ComponentFactory/ComponentHelper', `A ComponentHelper with the name ${name} already exists.`, helperFunction);\n        return false;\n    }\n\n    componentHelper[name] = helperFunction;\n\n    return true;\n}\n\n/**\n * Register a new component.\n */\n/* eslint-disable max-len */\n// @ts-expect-error\nfunction register<V extends Vue, Data, Methods, Computed, PropNames extends string>(componentName: string, componentConfiguration: ThisTypedComponentOptionsWithArrayProps<V, Data, Methods, Computed, PropNames>): boolean | ComponentConfig;\nfunction register<V extends Vue, Data, Methods, Computed, Props>(componentName: string, componentConfiguration: ThisTypedComponentOptionsWithRecordProps<V, Data, Methods, Computed, Props>): boolean | ComponentConfig;\nfunction register(componentName: string, componentConfiguration: ComponentConfig<Vue>): boolean | ComponentConfig {\n    /* eslint-enable max-len */\n    const config = componentConfiguration;\n\n    if (!componentName || !componentName.length) {\n        warn(\n            'ComponentFactory',\n            'A component always needs a name.',\n            componentConfiguration,\n        );\n        return false;\n    }\n\n    if (componentRegistry.has(componentName)) {\n        warn(\n            'ComponentFactory',\n            `The component \"${componentName}\" is already registered. Please select a unique name for your component.`,\n            config,\n        );\n        return false;\n    }\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component.\n         */\n        TemplateFactory.registerComponentTemplate(componentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else if (!config.functional && typeof config.render !== 'function') {\n        warn(\n            'ComponentFactory',\n            `The component \"${config.name}\" needs a template to be functional.`,\n            'Please add a \"template\" property to your component definition',\n            config,\n        );\n        return false;\n    }\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Create a new component extending from another existing component.\n */\nfunction extend(\n    componentName: string,\n    extendComponentName: string,\n    componentConfiguration: ComponentConfig = { name: '' },\n): ComponentConfig {\n    const config = componentConfiguration;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component based on the extended component.\n         */\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName);\n    }\n\n    config.name = componentName;\n    config.extends = extendComponentName;\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Override an existing component including its config and template.\n */\nfunction override(componentName: string, componentConfiguration: ComponentConfig, overrideIndex = null): ComponentConfig {\n    const config = componentConfiguration;\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register a template override for the existing component template.\n         */\n        TemplateFactory.registerTemplateOverride(componentName, config.template, overrideIndex);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    }\n\n    const overrides = overrideRegistry.get(componentName) || [];\n\n    if (overrideIndex !== null && overrideIndex >= 0 && overrides.length > 0) {\n        overrides.splice(overrideIndex, 0, config);\n    } else {\n        overrides.push(config);\n    }\n\n    overrideRegistry.set(componentName, overrides);\n\n    return config;\n}\n\n/**\n * Returns the complete rendered template of the component.\n */\nfunction getComponentTemplate(componentName: string): string | null {\n    if (!templatesResolved) {\n        resolveComponentTemplates();\n    }\n    return TemplateFactory.getRenderedTemplate(componentName);\n}\n\n/**\n * Returns the complete component including extension and overrides.\n */\nfunction build(componentName: string, skipTemplate = false): ComponentConfig | boolean {\n    if (!templatesResolved) {\n        resolveComponentTemplates();\n    }\n\n    let config = componentRegistry.get(componentName);\n\n    if (!config) {\n        throw new Error(\n            `The component registry has not found a component with the name \"${componentName}\".`,\n        );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    config = Object.create(config);\n\n    if (!config) {\n        throw new Error(\n            `The config of the component \"${componentName}\" is invalid.`,\n        );\n    }\n\n    if (config.extends) {\n        let extendComp: ComponentConfig | undefined;\n\n        if (typeof config.extends === 'string') {\n            const buildedComp = build(config.extends, true);\n\n            if (typeof buildedComp !== 'boolean') {\n                extendComp = buildedComp;\n            }\n        }\n\n        if (extendComp) {\n            config.extends = extendComp;\n        } else {\n            delete config.extends;\n        }\n    }\n\n    if (overrideRegistry.has(componentName)) {\n        // clone the override configuration to prevent side-effects to the config\n        const overrides = cloneDeep(overrideRegistry.get(componentName));\n\n        const convertedOverrides = convertOverrides(overrides);\n\n        convertedOverrides.forEach((overrideComp) => {\n            overrideComp.extends = config;\n            overrideComp._isOverride = true;\n            config = overrideComp;\n        });\n    }\n\n    const superRegistry = buildSuperRegistry(config);\n\n    if (isNotEmptyObject(superRegistry) && config) {\n        const inheritedFrom = isAnOverride(config)\n            ? `#${componentName}`\n            : typeof config.extends !== 'string' && config?.extends?.name;\n\n        // @ts-expect-error\n        config.methods = { ...config.methods, ...addSuperBehaviour(inheritedFrom, superRegistry) };\n    }\n\n    /**\n     * if config has a render function it will ignore template\n     */\n    if (typeof config?.render === 'function') {\n        delete config.template;\n        return config;\n    }\n\n    if (skipTemplate && config) {\n        delete config.template;\n        return config;\n    }\n\n    /**\n     * Get the final template result including all overrides or extensions.\n     */\n    const componentTemplate = getComponentTemplate(componentName);\n    if (config && typeof componentTemplate === 'string') {\n        config.template = componentTemplate;\n    }\n\n    if (typeof config?.template !== 'string') {\n        return false;\n    }\n\n    return config;\n}\n\n/**\n * Reorganizes the structure of the given overrides.\n */\nfunction convertOverrides(overrides: ComponentConfig[] | undefined): ComponentConfig[] {\n    if (!overrides) {\n        return [];\n    }\n\n    // eslint-disable-next-line max-len\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment */\n    // @ts-expect-error\n    return overrides\n        // @ts-expect-error\n        .reduceRight((acc, overrideComp) => {\n            if (acc.length === 0) {\n                return [overrideComp];\n            }\n\n            const previous = acc.shift();\n\n            Object.entries(overrideComp).forEach(([prop, values]) => {\n                // check if current property exists in previous override\n                // @ts-expect-error\n                if (previous && previous.hasOwnProperty(prop)) {\n                    // if it exists iterate over the methods\n                    // and hoist them if they don't exists in previous override\n\n\n                    // ignore array based properties\n                    if (Array.isArray(values)) {\n                        return;\n                    }\n\n                    // check for methods in current property-object\n                    if (typeof values === 'object') {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                        Object.entries(values).forEach(([methodName, methodFunction]) => {\n                            // @ts-expect-error\n                            if (!previous[prop].hasOwnProperty(methodName)) {\n                                // move the function over\n                                // @ts-expect-error\n                                previous[prop][methodName] = methodFunction;\n                                // @ts-expect-error\n                                delete overrideComp[prop][methodName];\n                            }\n                        });\n                    }\n                } else {\n                    // move the property over\n                    // @ts-expect-error\n                    previous[prop] = values;\n                    // @ts-expect-error\n                    delete overrideComp[prop];\n                }\n            });\n\n            return [...[overrideComp], previous, ...acc];\n        }, []);\n\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n}\n\ninterface SuperRegistry {\n    [name: string]: {\n        [sName: string]: {\n            parent: string,\n            func: (args: $TSFixMe[]) => $TSFixMe\n        }\n    }\n}\n\ninterface SuperBehavior {\n    $super(name: string, ...args: $TSFixMe[]): $TSFixMe,\n    _initVirtualCallStack(name: string): void,\n    _findInSuperRegister(name: string): SuperRegistry,\n    _superRegistry(): SuperRegistry,\n    _inheritedFrom(): string,\n    _virtualCallStack: { [name: string]: string }\n}\n\n/**\n * Build the superRegistry for computed properties and methods.\n */\nfunction buildSuperRegistry(config: ComponentConfig): SuperRegistry {\n    let superRegistry: SuperRegistry = {};\n\n    // if it is an override build the super registry recursively\n    if (config._isOverride && config.extends && typeof config.extends !== 'string') {\n        superRegistry = buildSuperRegistry(config.extends);\n    }\n\n    /**\n     * Search for `this.$super()` call in every `computed` property and `method``\n     * and resolve the call chain.\n     */\n    ['computed', 'methods'].forEach((methodOrComputed) => {\n        // @ts-expect-error\n        const ConfigMethodOrComputed = config[methodOrComputed] as typeof config['computed'] | typeof config['methods'];\n\n        if (!ConfigMethodOrComputed) {\n            return;\n        }\n\n        const methods = Object.entries(ConfigMethodOrComputed);\n\n        methods.forEach(([name, method]) => {\n            // is computed getter/setter definition\n            if (methodOrComputed === 'computed' && typeof method === 'object') {\n                Object.entries(method).forEach(([cmd, func]) => {\n                    const path = `${name}.${cmd}`;\n\n                    superRegistry = updateSuperRegistry(superRegistry, path, func, methodOrComputed, config);\n                });\n            } else {\n                // @ts-expect-error\n                superRegistry = updateSuperRegistry(superRegistry, name, method, methodOrComputed, config);\n            }\n        });\n    });\n\n    return superRegistry;\n}\n\nfunction updateSuperRegistry(\n    superRegistry: SuperRegistry,\n    methodName: string,\n    method: unknown,\n    methodOrComputed: 'methods'|'computed',\n    config: ComponentConfig,\n): SuperRegistry {\n    const superCallPattern = /\\.\\$super/g;\n    const methodString = typeof method === 'function' && method.toString();\n    const hasSuperCall = methodString && superCallPattern.test(methodString);\n\n    if (!hasSuperCall) {\n        return superRegistry;\n    }\n\n    if (!superRegistry.hasOwnProperty(methodName)) {\n        superRegistry[methodName] = {};\n    }\n\n    const overridePrefix = isAnOverride(config) ? '#' : '';\n\n    superRegistry[methodName] = resolveSuperCallChain(config, methodName, methodOrComputed, overridePrefix);\n\n    return superRegistry;\n}\n\n/**\n * Returns a superBehaviour object, which contains a super-like callstack.\n */\nfunction addSuperBehaviour(inheritedFrom: string, superRegistry: SuperRegistry): SuperBehavior {\n    const superBehavior: SuperBehavior = {\n        $super(this: SuperBehavior, name, ...args) {\n            this._initVirtualCallStack(name);\n\n            const superStack = this._findInSuperRegister(name);\n\n            const superFuncObject = superStack[this._virtualCallStack[name]];\n\n            // @ts-expect-error\n            this._virtualCallStack[name] = superFuncObject.parent;\n\n            // @ts-expect-error\n            const result = superFuncObject.func.bind(this)(...args);\n\n            // reset the virtual call-stack\n            if (superFuncObject.parent) {\n                this._virtualCallStack[name] = this._inheritedFrom();\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return result;\n        },\n        _initVirtualCallStack(name) {\n            // if there is no virtualCallStack\n            if (!this._virtualCallStack) {\n                this._virtualCallStack = { name };\n            }\n\n            if (!this._virtualCallStack[name]) {\n                this._virtualCallStack[name] = this._inheritedFrom();\n            }\n        },\n        // @ts-expect-error\n        _findInSuperRegister(name) {\n            return this._superRegistry()[name];\n        },\n        _superRegistry() {\n            return superRegistry;\n        },\n        _inheritedFrom() {\n            return inheritedFrom;\n        },\n    };\n\n    return superBehavior;\n}\n\n/**\n * Resolves the super call chain for a given method (or computed property).\n */\nfunction resolveSuperCallChain(\n    config: ComponentConfig,\n    methodName: string,\n    methodsOrComputed: 'methods'|'computed' = 'methods',\n    overridePrefix = '',\n): $TSFixMe {\n    const extension = config.extends;\n\n    if (!extension || typeof extension === 'string') {\n        return {};\n    }\n\n    const parentName = `${overridePrefix}${extension.name ?? ''}`;\n    let parentsParentName = typeof extension.extends === 'object' && extension.extends\n        ? `${overridePrefix}${extension.extends.name ?? ''}`\n        : null;\n\n    if (parentName === parentsParentName) {\n        if (overridePrefix.length > 0 || extension._isOverride) {\n            overridePrefix = `#${overridePrefix}`;\n        }\n\n        const extendsName = (\n            extension\n            && extension.extends\n            && typeof extension.extends !== 'string'\n            && extension.extends.name\n        );\n        const extendsNameString = typeof extendsName === 'string' ? extendsName : '';\n        parentsParentName = `${overridePrefix}${extendsNameString}`;\n    }\n\n    const methodFunction = findMethodInChain(extension, methodName, methodsOrComputed);\n\n    const parentBlock = {};\n    // @ts-expect-error\n    parentBlock[parentName] = {\n        parent: parentsParentName,\n        func: methodFunction,\n    };\n\n    const resolvedParent = resolveSuperCallChain(extension, methodName, methodsOrComputed, overridePrefix);\n\n    const result = {\n        ...resolvedParent,\n        ...parentBlock,\n    };\n\n    return result;\n}\n\n/**\n * Returns a method in the extension chain object.\n */\nfunction findMethodInChain(\n    extension: ComponentConfig,\n    methodName: string,\n    methodsOrComputed: 'methods'|'computed',\n): $TSFixMe {\n    const splitPath = methodName.split('.');\n\n    if (splitPath.length > 1) {\n        return resolveGetterSetterChain(extension, splitPath, methodsOrComputed);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (extension[methodsOrComputed]?.[methodName]) {\n        // @ts-expect-error\n        return extension[methodsOrComputed][methodName];\n    }\n\n    if (extension.extends) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    return null;\n}\n\n/**\n * Returns a method in the extension chain object with a method path like `getterSetterMethod.get`.\n */\nfunction resolveGetterSetterChain(\n    extension: ComponentConfig,\n    path: string[],\n    methodsOrComputed: 'methods'|'computed',\n):$TSFixMe {\n    const [methodName, cmd] = path;\n\n    if (!extension[methodsOrComputed]) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    // @ts-expect-error\n    if (!extension[methodsOrComputed][methodName]) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    // @ts-expect-error\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return extension[methodsOrComputed][methodName][cmd];\n}\n\n/**\n * Tests a component, whether it is an extension or an override.\n */\nfunction isAnOverride(config: ComponentConfig): boolean {\n    if (!config.extends || typeof config.extends === 'string') {\n        return false;\n    }\n\n    return config.extends.name === config.name;\n}\n\n/**\n * Tests an object, whether it is empty or not.\n */\nfunction isNotEmptyObject(obj: $TSFixMe): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-member-access\n    return (Object.keys(obj).length !== 0 && obj.constructor === Object);\n}\n\n/**\n * Resolves the component templates using the template factory.\n */\nfunction resolveComponentTemplates(): boolean {\n    TemplateFactory.resolveTemplates();\n    templatesResolved = true;\n    return true;\n}\n\n/**\n * Helper method which clears the normalized templates and marks\n * the indicator as `false`, so another resolve run is possible\n */\nfunction markComponentTemplatesAsNotResolved(): boolean {\n    TemplateFactory.getNormalizedTemplateRegistry().clear();\n    templatesResolved = false;\n    return true;\n}\n","import { warn } from 'src/core/service/utils/debug.utils';\nimport { cloneDeep } from 'src/core/service/utils/object.utils';\nimport TemplateFactory from 'src/core/factory/template.factory';\n// eslint-disable-next-line import/no-named-default\nimport type { default as Vue, ComponentOptions } from 'vue';\nimport type {\n    ThisTypedComponentOptionsWithRecordProps,\n    ThisTypedComponentOptionsWithArrayProps,\n// eslint-disable-next-line import/no-unresolved\n} from 'vue/types/options';\n\nexport default {\n    register,\n    extend,\n    override,\n    build,\n    getComponentTemplate,\n    getComponentRegistry,\n    getOverrideRegistry,\n    getComponentHelper,\n    _clearComponentHelper,\n    registerComponentHelper,\n    resolveComponentTemplates,\n    markComponentTemplatesAsNotResolved,\n    isSyncComponent,\n    markComponentAsSync,\n};\n\n// @ts-expect-error\nexport interface ComponentConfig<V extends Vue = Vue> extends ComponentOptions<V> {\n    functional?: boolean,\n    extends?: ComponentConfig<V> | string,\n    _isOverride?: boolean,\n}\n\n/**\n * Registry which holds all components\n * @private\n */\ntype AwaitedComponentConfig = () => Promise<ComponentConfig | boolean>;\nconst componentRegistry = new Map<string, AwaitedComponentConfig>();\n\n/**\n * Registry which holds all component overrides\n * @private\n */\nconst overrideRegistry = new Map<string, AwaitedComponentConfig[]>();\n\n/**\n * Registry for globally registered helper functions like src/app/service/map-error.service.js\n * @private\n */\nconst componentHelper: { [helperName: string]: unknown } = {};\n\n/**\n * Contains all components which should be created as a async component\n * @private\n */\nconst syncComponents = new Set<string>();\n\n/**\n * Check if the component should be a synchronous component\n * @private\n */\nfunction isSyncComponent(componentName: string): boolean {\n    return syncComponents.has(componentName);\n}\n\n/**\n * Add a component to the synchronous component list. This\n * component will be compiled directly on boot.\n * @public\n */\nfunction markComponentAsSync(componentName: string): void {\n    syncComponents.add(componentName);\n}\n\n/**\n * Returns the map with all registered components.\n * @private\n */\nfunction getComponentRegistry(): Map<string, AwaitedComponentConfig> {\n    return componentRegistry;\n}\n\n/**\n * Returns the map with all registered component overrides.\n * @private\n */\nfunction getOverrideRegistry(): Map<string, AwaitedComponentConfig[]> {\n    return overrideRegistry;\n}\n\n/**\n * Returns the map of component helper functions\n * @public\n */\nfunction getComponentHelper(): { [helperName: string]: unknown } {\n    return componentHelper;\n}\n\n/**\n * @private\n */\nfunction _clearComponentHelper(): void {\n    Object.keys(componentHelper).forEach((key) => {\n        delete componentHelper[key];\n    });\n}\n\n/**\n * Register a new component helper function\n * @public\n */\nfunction registerComponentHelper(name: string, helperFunction: unknown): boolean {\n    if (!name || !name.length) {\n        warn('ComponentFactory/ComponentHelper', 'A ComponentHelper always needs a name.', helperFunction);\n        return false;\n    }\n\n    if (componentHelper.hasOwnProperty(name)) {\n        warn('ComponentFactory/ComponentHelper', `A ComponentHelper with the name ${name} already exists.`, helperFunction);\n        return false;\n    }\n\n    componentHelper[name] = helperFunction;\n\n    return true;\n}\n\n/**\n * Register a new component.\n * @public\n */\n/* eslint-disable max-len */\n// function overload to support all vue component object variations\n// @ts-expect-error\nfunction register<V extends Vue, Data, Methods, Computed, PropNames extends string>(componentName: string, componentConfiguration: ThisTypedComponentOptionsWithArrayProps<V, Data, Methods, Computed, PropNames>): boolean | ComponentConfig;\nfunction register<V extends Vue, Data, Methods, Computed, PropNames extends string>(componentName: string, componentConfiguration: () => Promise<ThisTypedComponentOptionsWithArrayProps<V, Data, Methods, Computed, PropNames>>): boolean | ComponentConfig;\nfunction register<V extends Vue, Data, Methods, Computed, Props>(componentName: string, componentConfiguration: ThisTypedComponentOptionsWithRecordProps<V, Data, Methods, Computed, Props>): boolean | ComponentConfig;\nfunction register<V extends Vue, Data, Methods, Computed, Props>(componentName: string, componentConfiguration: () => Promise<ThisTypedComponentOptionsWithRecordProps<V, Data, Methods, Computed, Props>>): boolean | ComponentConfig;\nfunction register(componentName: string, componentConfiguration: ComponentConfig<Vue> | (() => Promise<ComponentConfig<Vue>>)): boolean | (() => Promise<ComponentConfig|boolean>) {\n/* eslint-enable max-len */\n    if (!componentName || !componentName.length) {\n        warn(\n            'ComponentFactory',\n            'A component always needs a name.',\n            componentConfiguration,\n        );\n        return false;\n    }\n\n    if (componentRegistry.has(componentName)) {\n        warn(\n            'ComponentFactory',\n            `The component \"${componentName}\" is already registered. Please select a unique name for your component.`,\n            componentConfiguration,\n        );\n        return false;\n    }\n\n    const configurationResolveMethod = async (): Promise<false | ComponentConfig<Vue>> => {\n        const awaitedConfig = typeof componentConfiguration === 'function'\n            ? componentConfiguration\n            : (): Promise<ComponentConfig> => Promise.resolve(componentConfiguration);\n\n        let awaitedConfigResult = await awaitedConfig();\n\n        /**\n         * Check if the resulted config is a ES module. Then we need to use the default\n         * value of it.\n         */\n        if (awaitedConfigResult.hasOwnProperty('default')) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            awaitedConfigResult = awaitedConfigResult.default;\n        }\n        const config = { ...awaitedConfigResult };\n\n        config.name = componentName;\n\n        if (config.template) {\n            /**\n             * Register the main template of the component.\n             */\n            TemplateFactory.registerComponentTemplate(componentName, config.template);\n\n            /**\n             * Delete the template string from the component config.\n             * The complete rendered template including all overrides will be added later.\n             */\n            delete config.template;\n        } else if (!config.functional && typeof config.render !== 'function') {\n            warn(\n                'ComponentFactory',\n                `The component \"${config.name}\" needs a template to be functional.`,\n                'Please add a \"template\" property to your component definition',\n                config,\n            );\n            return false;\n        }\n\n        return config;\n    };\n\n    componentRegistry.set(componentName, configurationResolveMethod);\n\n    return configurationResolveMethod;\n}\n\n/**\n * Create a new component extending from another existing component.\n * @public\n */\nfunction extend(\n    componentName: string,\n    extendComponentName: string,\n    componentConfiguration: ComponentConfig | (() => Promise<ComponentConfig>) = { name: '' },\n): () => Promise<ComponentConfig> {\n    let config: ComponentConfig;\n\n    const configurationResolveMethod = async (): Promise<ComponentConfig> => {\n        if (config) {\n            return config;\n        }\n\n        const awaitedConfig = typeof componentConfiguration === 'function'\n            ? componentConfiguration\n            : (): Promise<ComponentConfig> => Promise.resolve(componentConfiguration);\n\n        let awaitedConfigResult = await awaitedConfig();\n\n        /**\n         * Check if the resulted config is a ES module. Then we need to use the default\n         * value of it.\n         */\n        if (awaitedConfigResult.hasOwnProperty('default')) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            awaitedConfigResult = awaitedConfigResult.default;\n        }\n\n        config = { ...awaitedConfigResult };\n\n        if (config.template) {\n            /**\n             * Register the main template of the component based on the extended component.\n             */\n            TemplateFactory.extendComponentTemplate(componentName, extendComponentName, config.template);\n\n            /**\n             * Delete the template string from the component config.\n             * The complete rendered template including all overrides will be added later.\n             */\n            delete config.template;\n        } else {\n            TemplateFactory.extendComponentTemplate(componentName, extendComponentName);\n        }\n\n        config.name = componentName;\n        config.extends = extendComponentName;\n\n        return config;\n    };\n\n    componentRegistry.set(componentName, configurationResolveMethod);\n\n    return configurationResolveMethod;\n}\n\n/**\n * Override an existing component including its config and template.\n * @public\n */\nfunction override(\n    componentName: string,\n    componentConfiguration: ComponentConfig|(() => Promise<ComponentConfig>),\n    overrideIndex = null,\n): () => Promise<ComponentConfig> {\n    let config: ComponentConfig;\n    const configResolveMethod = async (): Promise<ComponentConfig> => {\n        if (config) {\n            return config;\n        }\n\n        const awaitedConfig = typeof componentConfiguration === 'function'\n            ? componentConfiguration\n            : (): Promise<ComponentConfig> => Promise.resolve(componentConfiguration);\n\n        config = await awaitedConfig();\n\n        /**\n         * Check if the resulted config is a ES module. Then we need to use the default\n         * value of it.\n         */\n        if (config.hasOwnProperty('default')) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            config = config.default;\n        }\n\n        config.name = componentName;\n\n        if (config.template) {\n            /**\n             * Register a template override for the existing component template.\n             */\n            TemplateFactory.registerTemplateOverride(componentName, config.template, overrideIndex);\n\n            /**\n             * Delete the template string from the component config.\n             * The complete rendered template including all overrides will be added later.\n             */\n            delete config.template;\n        }\n\n        return config;\n    };\n\n    const overrides = overrideRegistry.get(componentName) || [];\n\n    if (overrideIndex !== null && overrideIndex >= 0 && overrides.length > 0) {\n        overrides.splice(overrideIndex, 0, configResolveMethod);\n    } else {\n        overrides.push(configResolveMethod);\n    }\n\n    overrideRegistry.set(componentName, overrides);\n\n    return configResolveMethod;\n}\n\n/**\n * Returns the complete rendered template of the component.\n * @private\n */\nasync function getComponentTemplate(componentName: string): Promise<string | null> {\n    await initComponent(componentName);\n\n    return TemplateFactory.getRenderedTemplate(componentName);\n}\n\nasync function initComponent(componentName: string): Promise<void> {\n    const asyncComponent = componentRegistry.get(componentName);\n    const asyncOverrideComponent = overrideRegistry.get(componentName);\n\n    if (asyncComponent) {\n        await asyncComponent();\n    }\n\n    if (asyncOverrideComponent) {\n        await Promise.all(asyncOverrideComponent.map(c => c()));\n    }\n}\n\n/**\n * Returns the complete component including extension and overrides.\n * @private\n */\nasync function build(componentName: string, skipTemplate = false): Promise<ComponentConfig | boolean> {\n    const awaitedConfig = componentRegistry.get(componentName);\n\n    if (!awaitedConfig) {\n        throw new Error(\n            `The component registry has not found a component with the name \"${componentName}\".`,\n        );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const resultConfig: ComponentConfig|boolean = await awaitedConfig();\n    if (typeof resultConfig === 'boolean') {\n        throw new Error(\n            `The component registry could not build the component with the name \"${componentName}\".`,\n        );\n    }\n\n    // let config: ComponentConfig = Object.create(resultConfig) as ComponentConfig;\n    let config: ComponentConfig = { ...resultConfig } as ComponentConfig;\n\n    if (!config) {\n        throw new Error(\n            `The config of the component \"${componentName}\" is invalid.`,\n        );\n    }\n\n    if (config.extends) {\n        let extendComp: ComponentConfig | undefined;\n\n        if (typeof config.extends === 'string') {\n            const buildedComp = await build(config.extends, true);\n\n            if (typeof buildedComp !== 'boolean') {\n                extendComp = buildedComp;\n            }\n        }\n\n        if (extendComp) {\n            config.extends = extendComp;\n        } else {\n            delete config.extends;\n        }\n    }\n\n    if (overrideRegistry.has(componentName)) {\n        // clone the override configuration to prevent side-effects to the config\n        const overrides = cloneDeep(overrideRegistry.get(componentName));\n\n        const convertedOverrides = await convertOverrides(overrides);\n\n        convertedOverrides.forEach((overrideComp) => {\n            overrideComp.extends = config;\n            overrideComp._isOverride = true;\n            config = { ...overrideComp };\n        });\n    }\n\n    const superRegistry = buildSuperRegistry(config);\n\n    if (isNotEmptyObject(superRegistry) && config) {\n        const inheritedFrom = isAnOverride(config)\n            ? `#${componentName}`\n            : typeof config.extends !== 'string' && config?.extends?.name;\n\n        // @ts-expect-error\n        config.methods = { ...config.methods, ...addSuperBehaviour(inheritedFrom, superRegistry) };\n    }\n\n    /**\n     * if config has a render function it will ignore template\n     */\n    if (typeof config?.render === 'function') {\n        delete config.template;\n        return config;\n    }\n\n    if (skipTemplate && config) {\n        delete config.template;\n        return config;\n    }\n\n    /**\n     * Get the final template result including all overrides or extensions.\n     */\n    const componentTemplate = await getComponentTemplate(componentName);\n    if (config && typeof componentTemplate === 'string') {\n        config.template = componentTemplate;\n    }\n\n    if (typeof config?.template !== 'string') {\n        return false;\n    }\n\n    return config;\n}\n\n/**\n * Reorganizes the structure of the given overrides.\n */\nasync function convertOverrides(awaitedOverrides: AwaitedComponentConfig[] | undefined): Promise<ComponentConfig[]> {\n    if (!awaitedOverrides) {\n        return [];\n    }\n\n    const overrides = await Promise.all(awaitedOverrides.map((awaitedOverride) => {\n        return awaitedOverride();\n    }));\n\n    // eslint-disable-next-line max-len\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment */\n    // @ts-expect-error\n    return overrides\n        // @ts-expect-error\n        .reduceRight((acc, overrideComp) => {\n            if (acc.length === 0) {\n                return [overrideComp];\n            }\n\n            const previous = acc.shift();\n\n            Object.entries(overrideComp).forEach(([prop, values]) => {\n                // check if current property exists in previous override\n                // @ts-expect-error\n                if (previous && previous.hasOwnProperty(prop)) {\n                    // if it exists iterate over the methods\n                    // and hoist them if they don't exists in previous override\n\n\n                    // ignore array based properties\n                    if (Array.isArray(values)) {\n                        return;\n                    }\n\n                    // check for methods in current property-object\n                    if (typeof values === 'object') {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                        Object.entries(values).forEach(([methodName, methodFunction]) => {\n                            // @ts-expect-error\n                            if (!previous[prop].hasOwnProperty(methodName)) {\n                                // move the function over\n                                // @ts-expect-error\n                                previous[prop][methodName] = methodFunction;\n                                // @ts-expect-error\n                                delete overrideComp[prop][methodName];\n                            }\n                        });\n                    }\n                } else {\n                    // move the property over\n                    // @ts-expect-error\n                    previous[prop] = values;\n                    // @ts-expect-error\n                    delete overrideComp[prop];\n                }\n            });\n\n            return [...[overrideComp], previous, ...acc];\n        }, []);\n\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n}\n\ninterface SuperRegistry {\n    [name: string]: {\n        [sName: string]: {\n            parent: string,\n            func: (args: $TSFixMe[]) => $TSFixMe\n        }\n    }\n}\n\ninterface SuperBehavior {\n    $super(name: string, ...args: $TSFixMe[]): $TSFixMe,\n    _initVirtualCallStack(name: string): void,\n    _findInSuperRegister(name: string): SuperRegistry,\n    _superRegistry(): SuperRegistry,\n    _inheritedFrom(): string,\n    _virtualCallStack: { [name: string]: string }\n}\n\n/**\n * Build the superRegistry for computed properties and methods.\n */\nfunction buildSuperRegistry(config: ComponentConfig): SuperRegistry {\n    let superRegistry: SuperRegistry = {};\n\n    // if it is an override build the super registry recursively\n    if (config._isOverride && config.extends && typeof config.extends !== 'string') {\n        superRegistry = buildSuperRegistry(config.extends);\n    }\n\n    /**\n     * Search for `this.$super()` call in every `computed` property and `method``\n     * and resolve the call chain.\n     */\n    ['computed', 'methods'].forEach((methodOrComputed) => {\n        // @ts-expect-error\n        const ConfigMethodOrComputed = config[methodOrComputed] as typeof config['computed'] | typeof config['methods'];\n\n        if (!ConfigMethodOrComputed) {\n            return;\n        }\n\n        const methods = Object.entries(ConfigMethodOrComputed);\n\n        methods.forEach(([name, method]) => {\n            // is computed getter/setter definition\n            if (methodOrComputed === 'computed' && typeof method === 'object') {\n                Object.entries(method).forEach(([cmd, func]) => {\n                    const path = `${name}.${cmd}`;\n\n                    superRegistry = updateSuperRegistry(superRegistry, path, func, methodOrComputed, config);\n                });\n            } else {\n                // @ts-expect-error\n                superRegistry = updateSuperRegistry(superRegistry, name, method, methodOrComputed, config);\n            }\n        });\n    });\n\n    return superRegistry;\n}\n\nfunction updateSuperRegistry(\n    superRegistry: SuperRegistry,\n    methodName: string,\n    method: unknown,\n    methodOrComputed: 'methods'|'computed',\n    config: ComponentConfig,\n): SuperRegistry {\n    const superCallPattern = /\\.\\$super/g;\n    const methodString = typeof method === 'function' && method.toString();\n    const hasSuperCall = methodString && superCallPattern.test(methodString);\n\n    if (!hasSuperCall) {\n        return superRegistry;\n    }\n\n    if (!superRegistry.hasOwnProperty(methodName)) {\n        superRegistry[methodName] = {};\n    }\n\n    const overridePrefix = isAnOverride(config) ? '#' : '';\n\n    superRegistry[methodName] = resolveSuperCallChain(config, methodName, methodOrComputed, overridePrefix);\n\n    return superRegistry;\n}\n\n/**\n * Returns a superBehaviour object, which contains a super-like callstack.\n */\nfunction addSuperBehaviour(inheritedFrom: string, superRegistry: SuperRegistry): SuperBehavior {\n    const superBehavior: SuperBehavior = {\n        $super(this: SuperBehavior, name, ...args) {\n            this._initVirtualCallStack(name);\n\n            const superStack = this._findInSuperRegister(name);\n\n            const superFuncObject = superStack[this._virtualCallStack[name]];\n\n            // @ts-expect-error\n            this._virtualCallStack[name] = superFuncObject.parent;\n\n            // @ts-expect-error\n            const result = superFuncObject.func.bind(this)(...args);\n\n            // reset the virtual call-stack\n            if (superFuncObject.parent) {\n                this._virtualCallStack[name] = this._inheritedFrom();\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return result;\n        },\n        _initVirtualCallStack(name) {\n            // if there is no virtualCallStack\n            if (!this._virtualCallStack) {\n                this._virtualCallStack = { name };\n            }\n\n            if (!this._virtualCallStack[name]) {\n                this._virtualCallStack[name] = this._inheritedFrom();\n            }\n        },\n        // @ts-expect-error\n        _findInSuperRegister(name) {\n            return this._superRegistry()[name];\n        },\n        _superRegistry() {\n            return superRegistry;\n        },\n        _inheritedFrom() {\n            return inheritedFrom;\n        },\n    };\n\n    return superBehavior;\n}\n\n/**\n * Resolves the super call chain for a given method (or computed property).\n */\nfunction resolveSuperCallChain(\n    config: ComponentConfig,\n    methodName: string,\n    methodsOrComputed: 'methods'|'computed' = 'methods',\n    overridePrefix = '',\n): $TSFixMe {\n    const extension = config.extends;\n\n    if (!extension || typeof extension === 'string') {\n        return {};\n    }\n\n    const parentName = `${overridePrefix}${extension.name ?? ''}`;\n    let parentsParentName = typeof extension.extends === 'object' && extension.extends\n        ? `${overridePrefix}${extension.extends.name ?? ''}`\n        : null;\n\n    if (parentName === parentsParentName) {\n        if (overridePrefix.length > 0 || extension._isOverride) {\n            overridePrefix = `#${overridePrefix}`;\n        }\n\n        const extendsName = (\n            extension\n            && extension.extends\n            && typeof extension.extends !== 'string'\n            && extension.extends.name\n        );\n        const extendsNameString = typeof extendsName === 'string' ? extendsName : '';\n        parentsParentName = `${overridePrefix}${extendsNameString}`;\n    }\n\n    const methodFunction = findMethodInChain(extension, methodName, methodsOrComputed);\n\n    const parentBlock = {};\n    // @ts-expect-error\n    parentBlock[parentName] = {\n        parent: parentsParentName,\n        func: methodFunction,\n    };\n\n    const resolvedParent = resolveSuperCallChain(extension, methodName, methodsOrComputed, overridePrefix);\n\n    const result = {\n        ...resolvedParent,\n        ...parentBlock,\n    };\n\n    return result;\n}\n\n/**\n * Returns a method in the extension chain object.\n */\nfunction findMethodInChain(\n    extension: ComponentConfig,\n    methodName: string,\n    methodsOrComputed: 'methods'|'computed',\n): $TSFixMe {\n    const splitPath = methodName.split('.');\n\n    if (splitPath.length > 1) {\n        return resolveGetterSetterChain(extension, splitPath, methodsOrComputed);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (extension[methodsOrComputed]?.[methodName]) {\n        // @ts-expect-error\n        return extension[methodsOrComputed][methodName];\n    }\n\n    if (extension.extends) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    return null;\n}\n\n/**\n * Returns a method in the extension chain object with a method path like `getterSetterMethod.get`.\n */\nfunction resolveGetterSetterChain(\n    extension: ComponentConfig,\n    path: string[],\n    methodsOrComputed: 'methods'|'computed',\n):$TSFixMe {\n    const [methodName, cmd] = path;\n\n    if (!extension[methodsOrComputed]) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    // @ts-expect-error\n    if (!extension[methodsOrComputed][methodName]) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    // @ts-expect-error\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return extension[methodsOrComputed][methodName][cmd];\n}\n\n/**\n * Tests a component, whether it is an extension or an override.\n */\nfunction isAnOverride(config: ComponentConfig): boolean {\n    if (!config.extends || typeof config.extends === 'string') {\n        return false;\n    }\n\n    return config.extends.name === config.name;\n}\n\n/**\n * Tests an object, whether it is empty or not.\n */\nfunction isNotEmptyObject(obj: $TSFixMe): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-member-access\n    return (Object.keys(obj).length !== 0 && obj.constructor === Object);\n}\n\n/**\n * Resolves the component templates using the template factory.\n * @private\n */\nfunction resolveComponentTemplates(): boolean {\n    TemplateFactory.resolveTemplates();\n    return true;\n}\n\n/**\n * Helper method which clears the normalized templates and marks\n * the indicator as `false`, so another resolve run is possible\n * @private\n */\nfunction markComponentTemplatesAsNotResolved(): boolean {\n    TemplateFactory.getNormalizedTemplateRegistry().clear();\n    return true;\n}\n","/**\n * @module core/factory/entity\n */\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\nexport default {\n    addEntityDefinition,\n    getEntityDefinition,\n    getDefinitionRegistry,\n    getRawEntityObject,\n    // eslint-disable-next-line inclusive-language/use-inclusive-words\n    getPropertyBlacklist,\n    getRequiredProperties,\n    getAssociatedProperties,\n    getTranslatableProperties,\n};\n\n/**\n * Registry which holds all entity definitions.\n *\n * @type {Map<String, Object>}\n */\nconst entityDefinitions = new Map();\n\n/**\n * @param {String} entityName\n * @param {Object} entityDefinition\n * @returns {boolean}\n */\nfunction addEntityDefinition(entityName, entityDefinition = {}) {\n    if (!entityName || !entityName.length) {\n        return false;\n    }\n\n    entityDefinitions.set(entityName, entityDefinition);\n    return true;\n}\n\n/**\n * Get an entity definition by name.\n *\n * @param {String} entityName\n * @returns {Object}\n */\nfunction getEntityDefinition(entityName) {\n    return entityDefinitions.get(entityName);\n}\n\n/**\n * Get the complete entity definition registry.\n *\n * @returns {Map<any, any>}\n */\nfunction getDefinitionRegistry() {\n    return entityDefinitions;\n}\n\n/**\n * Returns a raw entity object by its schema with empty properties.\n *\n * @param {Object} schema\n * @param {Boolean} deep\n * @return {{}}\n */\nfunction getRawEntityObject(schema, deep = true) {\n    const properties = schema.properties;\n    const obj = {};\n\n    Object.keys(properties).forEach((property) => {\n        const propSchema = properties[property];\n\n        obj[property] = getRawPropertyValue(propSchema, deep);\n    });\n\n    return obj;\n}\n\n/**\n * Returns the default value for a property type to symbolize an empty state.\n *\n * @param {Object} propSchema\n * @param {Boolean} deep\n * @return {*}\n */\nfunction getRawPropertyValue(propSchema, deep = true) {\n    if (propSchema.type === 'boolean') {\n        return null;\n    }\n\n    if (propSchema.type === 'string') {\n        return '';\n    }\n\n    if (propSchema.type === 'number' || propSchema.type === 'integer') {\n        return null;\n    }\n\n    if (propSchema.type === 'array') {\n        return [];\n    }\n\n    // OneToOne Relation\n    if (propSchema.type === 'object' && propSchema.entity) {\n        if (deep === true) {\n            return getRawEntityObject(getEntityDefinition(propSchema.entity), false);\n        }\n\n        return {};\n    }\n\n    // JSON Field\n    if (propSchema.type === 'object') {\n        if (deep === true && propSchema.properties) {\n            return getRawEntityObject(propSchema, false);\n        }\n\n        return {};\n    }\n\n    if (propSchema.type === 'string' && propSchema.format === 'date-time') {\n        return '';\n    }\n\n    return null;\n}\n\n// eslint-disable-next-line inclusive-language/use-inclusive-words\nfunction getPropertyBlacklist() {\n    return [\n        'createdAt',\n        'updatedAt',\n        'uploadedAt',\n        'childCount',\n        'versionId',\n        'links',\n        'extensions',\n        'mimeType',\n        'fileExtension',\n        'metaData',\n        'fileSize',\n        'fileName',\n        'mediaType',\n        'mediaFolder',\n    ];\n}\n\n/**\n * Get a list of all entity properties which are required.\n *\n * @param {String} entityName\n * @returns {Array}\n */\nfunction getRequiredProperties(entityName) {\n    if (!entityDefinitions.has(entityName)) {\n        return [];\n    }\n\n    const definition = entityDefinitions.get(entityName);\n    // eslint-disable-next-line inclusive-language/use-inclusive-words\n    const blocklist = getPropertyBlacklist();\n    const requiredFields = [];\n\n    definition.required.forEach((property) => {\n        if (!blocklist.includes(property)) {\n            requiredFields.push(property);\n        }\n    });\n\n    return requiredFields;\n}\n\n/**\n * Get a list of all entity properties which are translatable.\n *\n * @param {String} entityName\n * @return {Array}\n */\nfunction getTranslatableProperties(entityName) {\n    if (!entityDefinitions.has(entityName)) {\n        return [];\n    }\n\n    const definition = entityDefinitions.get(entityName);\n\n    return definition.translatable;\n}\n\n/**\n * Returns the associated properties of an entity.\n *\n * @param {String} entityName\n * @returns {Array}\n */\nfunction getAssociatedProperties(entityName) {\n    const definition = entityDefinitions.get(entityName);\n\n    return Object.keys(definition.properties).reduce((accumulator, propName) => {\n        const prop = definition.properties[propName];\n        if (prop.type === 'array' && hasOwnProperty(prop, 'entity')) {\n            accumulator.push(propName);\n        }\n\n        return accumulator;\n    }, []);\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport type { Store } from 'vuex';\n\nclass State {\n    public _registerProperty(name: string, property: $TSFixMe): this {\n        Object.defineProperty(this, name, {\n            value: property,\n            writable: false,\n            enumerable: true,\n            configurable: true,\n        });\n\n        return this;\n    }\n\n    public _registerPrivateProperty(name: string, property: $TSFixMe): this {\n        Object.defineProperty(this, name, {\n            value: property,\n            writable: false,\n            enumerable: true,\n            configurable: true,\n        });\n\n        return this;\n    }\n\n    public _registerGetterMethod(name: string, getMethod: $TSFixMeFunction, setMethod: $TSFixMeFunction): this {\n        Object.defineProperty(this, name, {\n            get: getMethod,\n            set: setMethod,\n            enumerable: true,\n            configurable: true,\n        });\n\n        return this;\n    }\n}\n\nexport interface FullState extends State {\n    _store: Store<VuexRootState>,\n    list: () => (keyof VuexRootState)[],\n    get: <NAME extends keyof VuexRootState>(name: NAME) => VuexRootState[NAME],\n    getters: Store<VuexRootState>['getters'],\n    commit: Store<VuexRootState>['commit'],\n    dispatch: Store<VuexRootState>['dispatch'],\n    // eslint-disable-next-line max-len\n    watch: Store<VuexRootState>['watch'],\n    subscribe: Store<VuexRootState>['subscribe'],\n    subscribeAction: Store<VuexRootState>['subscribeAction'],\n    registerModule: Store<VuexRootState>['registerModule'],\n    unregisterModule: Store<VuexRootState>['unregisterModule'],\n}\n\nexport default function stateFactory(): FullState {\n    // force the additional properties (added in \"state.init\")\n    return new State() as FullState;\n}\n","type ServiceObject = {\n    get: <SN extends keyof ServiceContainer>(serviceName: SN) => ServiceContainer[SN],\n    list: () => (keyof ServiceContainer)[],\n    register: <SN extends keyof ServiceContainer>(serviceName: SN, service: ServiceContainer[SN]) => void,\n    registerMiddleware: typeof Shopware.Application.addServiceProviderMiddleware,\n    registerDecorator: typeof Shopware.Application.addServiceProviderDecorator,\n}\n\n/**\n * Return the ServiceObject (Shopware.Service().myService)\n * or direct access the services (Shopware.Service('myService')\n */\nfunction serviceAccessor<SN extends keyof ServiceContainer>(serviceName: SN): ServiceContainer[SN]\nfunction serviceAccessor(): ServiceObject\nfunction serviceAccessor<SN extends keyof ServiceContainer>(serviceName?: SN): ServiceContainer[SN] | ServiceObject {\n    if (serviceName) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return Shopware.Application.getContainer('service')[serviceName];\n    }\n\n    const serviceObject: ServiceObject = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        get: (name) => Shopware.Application.getContainer('service')[name],\n        list: () => Shopware.Application.getContainer('service').$list(),\n        register: (name, service) => Shopware.Application.addServiceProvider(name, service),\n        registerMiddleware: (...args) => Shopware.Application.addServiceProviderMiddleware(...args),\n        registerDecorator: (...args) => Shopware.Application.addServiceProviderDecorator(...args),\n    };\n\n    return serviceObject;\n}\n\nexport default serviceAccessor;\n","export default (publicObject, privateObject) => {\n    return (function ClassesBuilder() {\n        // public functions\n        const Classes = function Classes() {\n            Object.entries(publicObject).forEach(([key, value]) => {\n                Object.defineProperty(this, key, {\n                    value,\n                    configurable: true,\n                    enumerable: true,\n                    writable: true,\n                });\n            });\n        };\n\n        // private functions\n        Classes.prototype = privateObject;\n\n        return new Classes();\n    }());\n};\n","/**\n * @module core/factory/mixin\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nexport default {\n    register,\n    getByName,\n    getMixinRegistry,\n};\n\n/**\n * Registry which holds all mixins\n *\n * @type {Map}\n */\nconst mixinRegistry = new Map();\n\n/**\n * Get the complete mixin registry\n *\n * @returns {Map}\n */\nfunction getMixinRegistry() {\n    return mixinRegistry;\n}\n\n/**\n * Register a new mixin\n *\n * @param {String} mixinName\n * @param {Object} [mixin={}]\n * @returns {Boolean|Object}\n */\nfunction register(mixinName, mixin = {}) {\n    if (!mixinName || !mixinName.length) {\n        warn(\n            'MixinFactory',\n            'A mixin always needs a name.',\n            mixin,\n        );\n        return false;\n    }\n\n    if (mixinRegistry.has(mixinName)) {\n        warn(\n            'MixinFactory',\n            `The mixin \"${mixinName}\" is already registered. Please select a unique name for your mixin.`,\n            mixin,\n        );\n        return false;\n    }\n\n    mixinRegistry.set(mixinName, mixin);\n\n    return mixin;\n}\n\n/**\n * Get a mixin by its name\n *\n * @param mixinName\n * @returns {any | undefined}\n */\nfunction getByName(mixinName) {\n    if (!mixinRegistry.has(mixinName)) {\n        throw new Error(`The mixin \"${mixinName}\" is not registered.`);\n    }\n\n    return mixinRegistry.get(mixinName);\n}\n","/**\n * @module core/factory/filter\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nexport default {\n    getRegistry,\n    register,\n    getByName,\n};\n\n\ninterface FilterRegistry extends Map<string, FilterTypes[keyof FilterTypes]> {\n    get: <A extends string>(key: A) => FilterTypes[A];\n}\n\n/**\n * @description Registry which holds all filter\n */\nconst filterRegistry: FilterRegistry = new Map();\n\n/**\n * @description Empty function, used as the default parameter for the register method\n *\n * @deprecated tag:v6.5.0 - will be removed\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = (): void => {};\n\n/**\n * Factory name\n */\nconst name = 'FilterFactory';\n\n/**\n * Get the complete filter registry\n */\nfunction getRegistry(): FilterRegistry {\n    return filterRegistry;\n}\n\n/**\n * @description Register a new filter\n *\n * @deprecated tag:v6.5.0 - second parameter filterFactoryMethod will be required in future version\n */\nfunction register<A extends string>(\n    filterName: A,\n    filterFactoryMethod: FilterTypes[A] = noop,\n): boolean {\n    if (!filterName || !filterName.length) {\n        warn(\n            name,\n            'A filter always needs a name',\n        );\n        return false;\n    }\n\n    if (filterRegistry.has(filterName)) {\n        warn(\n            name,\n            `The filter \"${filterName}\" is already registered. Please select a unique name for your filter.`,\n        );\n        return false;\n    }\n\n    filterRegistry.set(filterName, filterFactoryMethod);\n\n    return true;\n}\n\n/**\n * @description Get a filter by its name\n *\n * @deprecated tag:v6.5.0 - return type noopType will be removed\n */\nfunction getByName<A extends string>(filterName: A): FilterTypes[A] {\n    return filterRegistry.get(filterName);\n}\n","/**\n * @module core/factory/directive\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nexport default {\n    registerDirective,\n    getDirectiveByName,\n    getDirectiveRegistry,\n};\n\n/**\n * Registry which holds all registered directives.\n *\n * @type {Map<String, Object>}\n */\nconst directiveRegistry = new Map();\n\n/**\n * Registers a new directive.\n *\n * @param {String} name\n * @param {Object} [directive={}]\n * @returns {boolean}\n */\nfunction registerDirective(name, directive = {}) {\n    if (!name || !name.length) {\n        warn('DirectiveFactory', 'A directive always needs a name.', directive);\n        return false;\n    }\n\n    if (directiveRegistry.has(name)) {\n        warn('DirectiveFactory', `A directive with the name ${name} already exists.`, directive);\n        return false;\n    }\n\n    directiveRegistry.set(name, directive);\n\n    return true;\n}\n\n/**\n * Get a directive by its name.\n *\n * @param {String} name\n * @returns {Object | undefined}\n */\nfunction getDirectiveByName(name) {\n    return directiveRegistry.get(name);\n}\n\n/**\n * Get the complete registry of directives.\n *\n * @returns {Map<String, Object>}\n */\nfunction getDirectiveRegistry() {\n    return directiveRegistry;\n}\n","/**\n * @module core/factory/locale\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport { object } from 'src/core/service/util.service';\n\nexport default {\n    getLocaleByName,\n    getLocaleRegistry,\n    register,\n    extend,\n    getBrowserLanguage,\n    getBrowserLanguages,\n    getLastKnownLocale,\n    storeCurrentLocale,\n};\n\n/**\n * Registry which holds all locales including the interface translations\n *\n * @type {Map}\n */\nconst localeRegistry = new Map();\n\n/**\n * Defines the default locale\n *\n * @type {String}\n */\nconst defaultLocale = 'en-GB';\n\n/**\n * Defines the key of the localStorage item\n *\n * @type {String}\n */\nconst localStorageKey = 'sw-admin-locale';\n\n/**\n * Get the complete locale registry\n * @returns {Map}\n */\nfunction getLocaleRegistry() {\n    return localeRegistry;\n}\n\n/**\n * Registers a new locale\n *\n * @param {String} localeName\n * @param {Object} [localeMessages={}]\n * @returns {Boolean|String}\n */\nfunction register(localeName, localeMessages = {}) {\n    if (!localeName || !localeName.length) {\n        warn(\n            'LocaleFactory',\n            'A locale always needs a name',\n        );\n        return false;\n    }\n\n    if (localeName.split('-').length < 2) {\n        warn(\n            'LocaleFactory',\n            'The locale name should follow the RFC-4647 standard e.g. [languageCode-countryCode] for example \"en-US\"',\n        );\n        return false;\n    }\n\n    if (localeRegistry.has(localeName)) {\n        warn(\n            'LocaleFactory',\n            `The locale \"${localeName}\" is registered already.`,\n            'Please use the extend method to extend and override certain keys',\n        );\n\n        return false;\n    }\n\n    localeRegistry.set(localeName, localeMessages);\n\n    return localeName;\n}\n\n/**\n * Extends a given locale with the provided translations\n *\n * @param {String} localeName\n * @param {Object} [localeMessages={}]\n * @returns {Boolean|String}\n */\nfunction extend(localeName, localeMessages = {}) {\n    if (localeName.split('-').length < 2) {\n        warn(\n            'LocaleFactory',\n            'The locale name should follow the RFC-4647 standard e.g. [languageCode-countryCode]] for example \"en-US\"',\n        );\n        return false;\n    }\n\n    if (!localeRegistry.has(localeName)) {\n        warn(\n            'LocaleFactory',\n            `The locale \"${localeName}\" doesn't exists. Please use the register method to register a new locale`,\n        );\n        return false;\n    }\n\n    const originalMessages = localeRegistry.get(localeName);\n    localeRegistry.set(localeName, object.merge(originalMessages, localeMessages));\n\n    return localeName;\n}\n\n/**\n * Get translations for a specific locale\n *\n * @param {String} localeName\n * @returns {Boolean|String}\n */\nfunction getLocaleByName(localeName) {\n    if (!localeRegistry.has(localeName)) {\n        return false;\n    }\n\n    return localeRegistry.get(localeName);\n}\n\n/**\n * Checks if the {@link localStorage} has an item associated to the {@link localStorageKey} key.\n *\n * @returns {String}\n */\nfunction getLastKnownLocale() {\n    let localeName = getBrowserLanguage();\n\n    if (window.localStorage.getItem(localStorageKey) !== null) {\n        localeName = window.localStorage.getItem(localStorageKey);\n    }\n\n    return localeName;\n}\n\n/**\n * Terminates the browser language and checks if the language is in the registry.\n * If this is not the case the {@link defaultLocale} will be returned.\n *\n * @returns {String}\n */\nfunction getBrowserLanguage() {\n    const shortLanguageCodes = new Map();\n    localeRegistry.forEach((messages, locale) => {\n        const lang = locale.split('-')[0];\n        shortLanguageCodes.set(lang.toLowerCase(), locale);\n    });\n\n    let matchedLanguage = null;\n\n    getBrowserLanguages().forEach((language) => {\n        if (!matchedLanguage && localeRegistry.has(language)) {\n            matchedLanguage = language;\n        }\n\n        if (!matchedLanguage && shortLanguageCodes.has(language)) {\n            matchedLanguage = shortLanguageCodes.get(language);\n        }\n    });\n\n    return matchedLanguage || defaultLocale;\n}\n\n/**\n * Looks up all available browser languages.\n *\n * @returns {Array}\n */\nfunction getBrowserLanguages() {\n    const languages = [];\n\n    if (navigator.language) {\n        languages.push(navigator.language);\n    }\n\n    // Chrome only\n    if (navigator.languages?.length) {\n        navigator.languages.forEach((lang) => {\n            languages.push(lang);\n        });\n    }\n\n    if (navigator.userLanguage) {\n        languages.push(navigator.userLanguage);\n    }\n\n    if (navigator.systemLanguage) {\n        languages.push(navigator.systemLanguage);\n    }\n\n    return languages;\n}\n\n/**\n * Sets up the DOM and http client to use the provided locale\n *\n * @param {String} localeName\n * @param {AxiosInstance|null} [httpClient=null]\n * @returns {String}\n */\nfunction storeCurrentLocale(localeName) {\n    // Necessary for testing purpose\n    if (typeof document === 'object') {\n        const shortLocaleName = localeName.split('-')[0];\n        document.querySelector('html').setAttribute('lang', shortLocaleName);\n    }\n\n    window.localStorage.setItem(localStorageKey, localeName);\n\n    return localeName;\n}\n","/**\n * @module core/factory/shortcut\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nexport default {\n    getPathByCombination,\n    getShortcutRegistry,\n    register,\n};\n\n/**\n * Registry which holds all shortcuts including the interface translations\n *\n * @type {Map}\n */\nconst shortcutRegistry = new Map();\n\n/**\n * Get the path for a specific combination\n *\n * @param {String} combination\n * @returns {Boolean|String}\n */\nfunction getPathByCombination(combination) {\n    if (!shortcutRegistry.has(combination)) {\n        return false;\n    }\n\n    return shortcutRegistry.get(combination);\n}\n\n/**\n * Get the complete shortcut registry\n * @returns {Map}\n */\nfunction getShortcutRegistry() {\n    return shortcutRegistry;\n}\n\n/**\n * Registers a new shortcut\n *\n * @param {String} combination\n * @param {String} [path='']\n * @returns {Boolean|String}\n */\nfunction register(combination, path = '') {\n    if (!combination || !combination.length) {\n        warn(\n            'ShortcutFactory',\n            'A combination can\\'t be blank.',\n        );\n        return false;\n    }\n\n    if (shortcutRegistry.has(combination)) {\n        warn(\n            'ShortcutFactory',\n            `The combination \"${combination}\" is registered already.`,\n        );\n\n        return false;\n    }\n\n    shortcutRegistry.set(combination, path);\n\n    return combination;\n}\n","/**\n * @module core/factory/directive\n */\n\nexport default {\n    addBootPromise,\n    getBootPromises,\n};\n\n/**\n * Registry which holds all registered plugin promises.\n *\n * @type {Array}\n */\nconst pluginPromises = [];\n\n/**\n * Add a new plugin promise.\n *\n * @returns {Object}\n */\nfunction addBootPromise() {\n    let promiseResolve;\n\n    pluginPromises.push(new Promise((resolve) => {\n        promiseResolve = resolve;\n    }));\n\n    return promiseResolve;\n}\n\n/**\n * Get all plugin promises.\n *\n * @returns {Array}\n */\nfunction getBootPromises() {\n    return pluginPromises;\n}\n","/**\n * @module core/factory/api-service\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nexport default {\n    getRegistry,\n    register,\n    getByName,\n    getServices,\n    has,\n};\n\n/**\n * Registry which holds all registered api services\n *\n * @type {Map}\n */\nconst apiServiceRegistry = new Map();\n\n/**\n * Factory name\n * @type {string}\n */\nconst name = 'ApiServiceFactory';\n\n/**\n * Get the complete apiService registry\n *\n * @returns {Map<String, Function>}\n */\nfunction getRegistry() {\n    return apiServiceRegistry;\n}\n\n/**\n * Register a new apiService\n *\n * @param {String} apiServiceName\n * @param {Function} [apiService=null]\n * @returns {boolean}\n */\nfunction register(apiServiceName, apiService = null) {\n    if (!apiServiceName || !apiServiceName.length) {\n        warn(\n            name,\n            'A apiService always needs a name',\n        );\n        return false;\n    }\n\n    if (has(apiServiceName)) {\n        warn(\n            name,\n            `The apiService \"${apiServiceName}\" is already registered. Please select a unique name for your apiService.`,\n        );\n        return false;\n    }\n\n    apiServiceRegistry.set(apiServiceName, apiService);\n\n    return true;\n}\n\nfunction has(apiServiceName) {\n    return apiServiceRegistry.has(apiServiceName);\n}\n\n/**\n * Get a api service by its name\n *\n * @param {String|any} apiServiceName\n * @returns {any|undefined}\n */\nfunction getByName(apiServiceName) {\n    return apiServiceRegistry.get(apiServiceName);\n}\n\nfunction getServices() {\n    return Array.from(apiServiceRegistry).reduce((accumulator, [key, value]) => {\n        accumulator[key] = value;\n        return accumulator;\n    }, {});\n}\n","const scalarTypes = ['uuid', 'int', 'text', 'password', 'float', 'string', 'blob', 'boolean', 'date'];\nconst jsonTypes = ['json_list', 'json_object'];\n\nexport function getScalarTypes() {\n    return scalarTypes;\n}\n\nexport function getJsonTypes() {\n    return jsonTypes;\n}\n\nexport default class EntityDefinition {\n    constructor({ entity, properties }) {\n        this.entity = entity;\n        this.properties = properties;\n    }\n\n    getEntity() {\n        return this.entity;\n    }\n\n    /**\n     * returns an Object containing all primary key fields of the definition\n     * @returns {Object}\n     */\n    getPrimaryKeyFields() {\n        return this.filterProperties((property) => {\n            return property.flags.primary_key === true;\n        });\n    }\n\n    /**\n     * returns an Object containing all associations fields of this definition\n     * @returns {Object}\n     */\n    getAssociationFields() {\n        return this.filterProperties((property) => {\n            return property.type === 'association';\n        });\n    }\n\n    /**\n     * returns all toMany associationFields\n     * @returns {Object}\n     */\n    getToManyAssociations() {\n        return this.filterProperties((property) => {\n            if (property.type !== 'association') {\n                return false;\n            }\n\n            return ['one_to_many', 'many_to_many'].includes(property.relation);\n        });\n    }\n\n    /**\n     * returns all toMany associationFields\n     * @returns {Object}\n     */\n    getToOneAssociations() {\n        return this.filterProperties((property) => {\n            if (property.type !== 'association') {\n                return false;\n            }\n\n            return ['one_to_one', 'many_to_one'].includes(property.relation);\n        });\n    }\n\n    /**\n     * returns all translatable fields\n     * @returns {Object}\n     */\n    getTranslatableFields() {\n        return this.filterProperties((property) => {\n            return this.isTranslatableField(property);\n        });\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    getRequiredFields() {\n        return this.filterProperties((property) => {\n            return property.flags.required === true;\n        });\n    }\n\n    /**\n     * Filter field definitions by a given predicate\n     * @param {Function} filter\n     */\n    filterProperties(filter) {\n        if (typeof filter !== 'function') {\n            return {};\n        }\n\n        const result = {};\n        Object.keys(this.properties).forEach((propertyName) => {\n            if (filter(this.properties[propertyName]) === true) {\n                result[propertyName] = this.properties[propertyName];\n            }\n        });\n\n        return result;\n    }\n\n    getField(name) {\n        return this.properties[name];\n    }\n\n    forEachField(callback) {\n        if (typeof callback !== 'function') {\n            return;\n        }\n\n        Object.keys(this.properties).forEach((propertyName) => {\n            callback(this.properties[propertyName], propertyName, this.properties);\n        });\n    }\n\n    isScalarField(field) {\n        return scalarTypes.includes(field.type);\n    }\n\n    isJsonField(field) {\n        return jsonTypes.includes(field.type);\n    }\n\n    isJsonObjectField(field) {\n        return field.type === 'json_object';\n    }\n\n    isJsonListField(field) {\n        return field.type === 'json_list';\n    }\n\n    isToManyAssociation(field) {\n        return field.type === 'association' && ['one_to_many', 'many_to_many'].includes(field.relation);\n    }\n\n    isToOneAssociation(field) {\n        return field.type === 'association' && ['many_to_one', 'one_to_one'].includes(field.relation);\n    }\n\n    isTranslatableField(field) {\n        return (field.type === 'string' || field.type === 'text') && field.flags.translatable === true;\n    }\n}\n","import EntityDefinition, { getScalarTypes, getJsonTypes } from 'src/core/data/entity-definition.data';\n\nexport default {\n    getScalarTypes,\n    getJsonTypes,\n    getDefinitionRegistry,\n    has,\n    get,\n    add,\n    remove,\n    getTranslatedFields,\n    getAssociationFields,\n    getRequiredFields,\n};\n\nconst entityDefinitionRegistry = new Map();\n\nfunction getDefinitionRegistry() {\n    return entityDefinitionRegistry;\n}\n\n/**\n * Checks the EntityDefinition object for a given entity\n * @param entityName\n * @returns {Boolean}\n */\nfunction has(entityName) {\n    return entityDefinitionRegistry.has(entityName);\n}\n\n/**\n * returns the EntityDefinition object for a given entity\n * @param entityName\n * @returns {EntityDefinition}\n */\nfunction get(entityName) {\n    const definition = entityDefinitionRegistry.get(entityName);\n\n    if (typeof definition === 'undefined') {\n        throw new Error(`[EntityDefinitionRegistry] No definition found for entity type ${entityName}`);\n    }\n\n    return definition;\n}\n\n/**\n * takes a plain schema object and converts it to a shopware EntityDefinition\n * @param entityName\n * @param schema\n */\nfunction add(entityName, schema) {\n    entityDefinitionRegistry.set(entityName, new EntityDefinition(schema));\n}\n\n/**\n * removes an entity definition from the registry\n * @param entityName\n * @returns {boolean}\n */\nfunction remove(entityName) {\n    return entityDefinitionRegistry.delete(entityName);\n}\n\nfunction getTranslatedFields(entityName) {\n    return get(entityName).getTranslatableFields();\n}\n\nfunction getAssociationFields(entityName) {\n    return get(entityName).getAssociationFields();\n}\n\nfunction getRequiredFields(entityName) {\n    return get(entityName).getRequiredFields();\n}\n","/**\n * @module core/factory/worker-notification\n */\nimport MiddlewareHelper from 'src/core/helper/middleware.helper';\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\nimport types from 'src/core/service/utils/types.utils';\n\nexport default {\n    getRegistry,\n    register,\n    remove,\n    override,\n    initialize,\n    resetHelper,\n};\n\n/**\n * Registry which holds all worker notification middleware functions\n * @type {Map}\n */\nconst registry = new Map();\n\n/**\n * Middleware helper instance\n * @type {MiddlewareHelper}\n */\nlet helper = new MiddlewareHelper();\n\n/**\n * Indicates if the middleware helper is initialized\n * @type {boolean}\n */\nlet initialized = false;\n\n/**\n * Returns the registry\n * @return {Map}\n */\nfunction getRegistry() {\n    return registry;\n}\n\n/**\n * Registers a new worker notification middleware function.\n * @param {String} name\n * @param {Object} opts\n * @return {boolean}\n */\nfunction register(name, opts) {\n    if (!name || !name.length) {\n        return false;\n    }\n\n    if (registry.has(name)) {\n        return false;\n    }\n\n    if (!validateOpts(opts)) {\n        return false;\n    }\n\n    registry.set(name, opts);\n    return true;\n}\n\n/**\n * Removes an existing worker notification middleware function.\n * @param {String} name\n * @return {boolean}\n */\nfunction remove(name) {\n    if (!name || !name.length) {\n        return false;\n    }\n\n    if (!registry.has(name)) {\n        return false;\n    }\n\n    registry.delete(name);\n    return true;\n}\n\n/**\n * Overrides an existing worker notification middleware function.\n * @param {String} name\n * @param {Object} opts\n * @return {boolean}\n */\nfunction override(name, opts) {\n    if (!registry.has(name)) {\n        return false;\n    }\n\n    if (!validateOpts(opts)) {\n        return false;\n    }\n\n    registry.set(name, opts);\n    return true;\n}\n\n/**\n * Initializes the middleware helper. If the helper was initialized before, the instance of the helper will be returned.\n * @return {MiddlewareHelper}\n */\nfunction initialize() {\n    if (initialized) {\n        return helper;\n    }\n\n    initialized = true;\n    getRegistry().forEach(({ fn, name }) => {\n        helper.use(middlewareFunctionWrapper(name, fn));\n    });\n    return helper;\n}\n\n/**\n * Helper method which wraps the middleware function.\n * @param {String} name\n * @param {Function} fn\n * @return {Function}\n */\nfunction middlewareFunctionWrapper(name, fn) {\n    return (next, data) => {\n        const entry = data.queue.find(\n            (q) => q.name === name,\n        ) || null;\n        const mergedData = { ...data, ...{ entry, name } };\n\n        if (entry === null) {\n            next();\n        } else {\n            fn.call(null, next, mergedData);\n        }\n    };\n}\n\n/**\n * Validates the options object\n * @param {Object} opts\n * @return {Boolean|boolean}\n */\nfunction validateOpts(opts) {\n    return (hasOwnProperty(opts, 'name')\n        && opts.name.length > 0\n        && hasOwnProperty(opts, 'fn')\n        && types.isFunction(opts.fn));\n}\n\n/**\n * Helper method for unit tests\n * @return {boolean}\n */\nfunction resetHelper() {\n    helper = new MiddlewareHelper();\n    initialized = false;\n    return true;\n}\n","/**\n * @module core/data/ShopwareError\n */\nimport utils from 'src/core/service/util.service';\n\n/**\n * @class\n * @description Simple data structure to hold information about Api Errors.\n * @memberOf module:core/data/ShopwareError\n */\nexport default class ShopwareError {\n    constructor({\n        code,\n        meta = {},\n        status = '',\n        detail = '',\n    } = {}) {\n        if (typeof code !== 'string' || code === '') {\n            throw new Error('[ShopwareError] can not identify error by code');\n        }\n\n        this._id = utils.createId();\n        this._code = code;\n        this._parameters = meta.parameters;\n        this._status = status;\n        this._detail = detail;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get code() {\n        return this._code;\n    }\n\n    set code(value) {\n        this._code = value;\n    }\n\n    get parameters() {\n        return this._parameters;\n    }\n\n    set parameters(value) {\n        this._parameters = value;\n    }\n\n    get status() {\n        return this._status;\n    }\n\n    set status(value) {\n        this._status = value;\n    }\n\n    get detail() {\n        return this._detail;\n    }\n\n    set detail(value) {\n        this._trace = value;\n    }\n}\n","import { warn } from 'src/core/service/utils/debug.utils';\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\n/**\n * The flat tree converts a collection of flat objects into a data tree hierarchy.\n * @class\n */\nclass FlatTree {\n    /**\n     * Creates a new instance of registered nodes.\n     *\n     * @memberOf FlatTree\n     * @constructor\n     */\n    constructor(sorting = () => 0, defaultPosition = 1) {\n        this._registeredNodes = new Map();\n        this._defaultPosition = defaultPosition;\n        this._sorting = sorting;\n    }\n\n    /**\n     * Converts the flat objects into the data tree hierarchy\n     *\n     * @returns {Array} registered nodes as a data tree\n     */\n    convertToTree() {\n        return this._tree(this._registeredNodes);\n    }\n\n    /**\n     * Internal method which will be called recursively to build up the tree\n     *\n     * @private\n     * @param {String|undefined} parent\n     * @param {Map|Array} elements\n     * @param {Number} [level=1]\n     * @returns {Array}\n     */\n    _tree(elements, level = 1, parent) {\n        const children = [];\n        elements.forEach((element) => {\n            if (element.parent !== parent) {\n                return;\n            }\n            element.level = level;\n\n            const newParent = element.id || element.path;\n            element.children = this._tree(elements, level + 1, newParent);\n            children.push(element);\n        });\n\n        return children.sort(this._sorting);\n    }\n\n    /**\n     * Adds a new flat node to the {@link #_registeredNodes} collection map.\n     *\n     * @chainable\n     * @param {Object} node\n     * @returns {FlatTree}\n     */\n    add(node) {\n        const nodeIdentifier = node.id || node.path;\n\n        if (!nodeIdentifier) {\n            warn(\n                'FlatTree',\n                'The node needs an \"id\" or \"path\" property. Abort registration.',\n                node,\n            );\n            return this;\n        }\n\n        if (hasOwnProperty(node, 'link') && !hasOwnProperty(node, 'target')) {\n            node.target = '_self';\n        }\n\n        if (!node.position) {\n            node.position = this._defaultPosition;\n        }\n\n        if (this._registeredNodes.has(nodeIdentifier)) {\n            warn(\n                'FlatTree',\n                `Tree contains node with unique identifier ${nodeIdentifier} already.`,\n                'Please remove it first before adding a new one.',\n                this._registeredNodes.get(nodeIdentifier),\n            );\n            return this;\n        }\n\n        this._registeredNodes.set(nodeIdentifier, node);\n        return this;\n    }\n\n    /**\n     * Removes a node using the provided nodeIdentifier, if it is registered.\n     *\n     * @chainable\n     * @param {String} nodeIdentifier - router path of the node\n     * @returns {FlatTree}\n     */\n    remove(nodeIdentifier) {\n        this._registeredNodes.delete(nodeIdentifier);\n        return this;\n    }\n\n    /**\n     * Returns the collection of the registered nodes for the data tree\n     *\n     * @deprecated tag:v6.5.0 will be removed as registered nodes should be private\n     *\n     * @returns {Map}\n     */\n    getRegisteredNodes() {\n        return this._registeredNodes;\n    }\n\n    /**\n     * @deprecated tag:v6.5.0 will be removed. treat as private\n     */\n    get defaultPosition() {\n        return this._defaultPosition;\n    }\n\n    /**\n     * @deprecated tag:v6.5.0 set in constructor. treat as private\n     */\n    set defaultPosition(value) {\n        this._defaultPosition = value;\n    }\n}\n\nexport default FlatTree;\n","/**\n * @module core/helper/device\n */\nimport utils from 'src/core/service/util.service';\n\n/**\n * The DeviceHelper provides methods to get device and browser information like the current viewport size.\n * The helper methods can be accessed with \"this.$device\" in every Vue component.\n *\n * @constructor\n */\nfunction DeviceHelper() {\n    this.listeners = [];\n\n    window.addEventListener('resize', this.resize.bind(this));\n}\n\nDeviceHelper.prototype = Object.assign(DeviceHelper.prototype, {\n    /**\n     * Resize method which will be fired when the user resizes the browser.\n     *\n     * @returns {void}\n     */\n    resize: utils.debounce(function debouncedResize(event) {\n        this.listeners.forEach((listenerObject) => {\n            listenerObject.listener.call(listenerObject.scope, event);\n        });\n    }, 100),\n\n    /**\n     * Registers an event register for the browser \"resize\" event.\n     *\n     * @param {Function} callback\n     * @param {Any} scope\n     * @param {Object} component\n     * @returns {number}\n     */\n    onResize({ listener, scope, component }) {\n        if (!scope) {\n            scope = window;\n        }\n        this.listeners.push({ listener, scope, component });\n        return this.listeners.length - 1;\n    },\n\n    removeResizeListener(component) {\n        this.listeners = this.listeners.filter((listenerObject) => {\n            return component !== listenerObject.component;\n        });\n\n        return true;\n    },\n\n    /**\n     * Returns the user agent string.\n     *\n     * @returns {string}\n     */\n    getUserAgent() {\n        return window.navigator.userAgent;\n    },\n\n    /**\n     * Returns the current viewport with in pixels.\n     * @returns {number}\n     */\n    getViewportWidth() {\n        return window.innerWidth;\n    },\n\n    /**\n     * Returns the current viewport height in pixels.\n     *\n     * @returns {number}\n     */\n    getViewportHeight() {\n        return window.innerHeight;\n    },\n\n    /**\n     * Returns the pixel ratio of the device as a number.\n     *\n     * @returns {number}\n     */\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    },\n\n    /**\n     * Returns the device screen width in pixels.\n     *\n     * @returns {number}\n     */\n    getScreenWidth() {\n        return window.screen.width;\n    },\n\n    /**\n     * Returns the device screen height in pixels.\n     *\n     * @returns {number}\n     */\n    getScreenHeight() {\n        return window.screen.height;\n    },\n\n    /**\n     * Returns information about the screen orientation.\n     *\n     * @returns {object}\n     */\n    getScreenOrientation() {\n        return window.screen.orientation;\n    },\n\n    /**\n     * Returns the current browser language as a string.\n     *\n     * @returns {string}\n     */\n    getBrowserLanguage() {\n        return window.navigator.language;\n    },\n\n    /**\n     * Returns the current platform (e.g. \"Win32\") as a string.\n     *\n     * @returns {string}\n     */\n    getPlatform() {\n        return window.navigator.platform;\n    },\n\n    /**\n     * Returns the system-key (e.g. \"CTRL\") as a string depending of the current operating system.\n     *\n     * @returns {string}\n     */\n    getSystemKey() {\n        return this.getPlatform().indexOf('Mac') > -1\n            ? 'CTRL'\n            : 'ALT';\n    },\n});\n\nexport default DeviceHelper;\n","import types from 'src/core/service/utils/types.utils';\n\nfunction castValueToNullIfNecessary(value) {\n    if (value === '' || typeof value === 'undefined') {\n        return null;\n    }\n    return value;\n}\n\nexport default class ChangesetGenerator {\n    /**\n     * returns the primary key data of an entity\n     * @param entity\n     */\n    getPrimaryKeyData(entity) {\n        const definition = Shopware.EntityDefinition.get(entity.getEntityName());\n        const pkFields = definition.getPrimaryKeyFields();\n        const pkData = {};\n\n        Object.keys(pkFields).forEach((fieldName) => {\n            pkData[fieldName] = entity[fieldName];\n        });\n\n        return pkData;\n    }\n\n    /**\n     * Creates the change set for the provided entity.\n     * @param entity\n     * @returns {{changes: *, deletionQueue: Array}}\n     */\n    generate(entity) {\n        const deletionQueue = [];\n        const changes = this.recursion(entity, deletionQueue);\n\n        return { changes, deletionQueue };\n    }\n\n    /**\n     * @private\n     * @param {Entity} entity\n     * @param deletionQueue\n     * @returns {null}\n     */\n    recursion(entity, deletionQueue) {\n        const definition = Shopware.EntityDefinition.get(entity.getEntityName());\n        const changes = {};\n\n        const origin = entity.getOrigin();\n        const draft = entity.getDraft();\n\n        definition.forEachField((field, fieldName) => {\n            if (field.readOnly) {\n                return;\n            }\n\n            if (field.flags.write_protected) {\n                return;\n            }\n\n            let draftValue = castValueToNullIfNecessary(draft[fieldName]);\n            let originValue = castValueToNullIfNecessary(origin[fieldName]);\n\n            if (definition.isScalarField(field)) {\n                if (draftValue !== originValue) {\n                    changes[fieldName] = draftValue;\n                }\n                return;\n            }\n\n            if (field.flags.extension) {\n                draftValue = castValueToNullIfNecessary(draft.extensions[fieldName]);\n                originValue = castValueToNullIfNecessary(origin.extensions[fieldName]);\n            }\n\n            if (definition.isJsonField(field)) {\n                if (!types.isEqual(originValue, draftValue)) {\n                    if (Array.isArray(draftValue) && draftValue.length <= 0) {\n                        changes[fieldName] = [];\n                        return;\n                    }\n\n                    changes[fieldName] = draftValue;\n                }\n\n                return;\n            }\n\n            if (field.type !== 'association') {\n                // if we don't know what kind of field we write send complete draft\n                if (draftValue !== originValue) {\n                    changes[fieldName] = draftValue;\n                }\n                return;\n            }\n\n            switch (field.relation) {\n                case 'one_to_many': {\n                    const associationChanges = this.handleOneToMany(field, draftValue, originValue, deletionQueue);\n                    if (associationChanges.length > 0) {\n                        changes[fieldName] = associationChanges;\n                    }\n                    break;\n                }\n                case 'many_to_many': {\n                    const associationChanges = this.handleManyToMany(draftValue, originValue, deletionQueue, field, entity);\n                    if (associationChanges.length > 0) {\n                        changes[fieldName] = associationChanges;\n                    }\n                    break;\n                }\n                case 'one_to_one': {\n                    if (!draftValue) {\n                        return;\n                    }\n\n                    const change = this.recursion(draftValue, deletionQueue);\n                    if (change !== null) {\n                        // if a change is detected, add id as identifier for updates\n                        change.id = draftValue.id;\n                        changes[fieldName] = change;\n                    }\n                    break;\n                }\n                case 'many_to_one':\n                default: {\n                    break;\n                }\n            }\n        });\n\n        if (Object.keys(changes).length > 0) {\n            return { ...this.getPrimaryKeyData(entity), ...changes };\n        }\n\n        return null;\n    }\n\n    /**\n     * @private\n     * @param {EntityCollection} draft\n     * @param {EntityCollection} origin\n     * @param {Object} field\n     * @param {Entity} entity\n     * @param deletionQueue\n     * @returns {Array}\n     */\n    handleManyToMany(draft, origin, deletionQueue, field, entity) {\n        const changes = [];\n        const originIds = origin.getIds();\n\n        draft.forEach((nested) => {\n            if (!originIds.includes(nested.id)) {\n                changes.push({ id: nested.id });\n            }\n        });\n\n        originIds.forEach((id) => {\n            if (!draft.has(id)) {\n                const primary = {\n                    [field.local]: entity.id,\n                    [field.reference]: id,\n                };\n\n                deletionQueue.push({\n                    route: draft.source,\n                    key: id,\n                    entity: field.mapping,\n                    primary: primary,\n                });\n            }\n        });\n\n        return changes;\n    }\n\n    /**\n     * @private\n     * @param {Object} field\n     * @param {EntityCollection} draft\n     * @param {EntityCollection} origin\n     * @param {Array} deletionQueue\n     * @returns {Array}\n     */\n    handleOneToMany(field, draft, origin, deletionQueue) {\n        const changes = [];\n        const originIds = origin.getIds();\n\n        // check for new and updated items\n        draft.forEach((entity) => {\n            // new record?\n            if (!originIds.includes(entity.id)) {\n                let change = this.recursion(entity, []);\n\n                if (change === null) {\n                    change = { id: entity.id };\n                } else {\n                    change.id = entity.id;\n                }\n\n                changes.push(change);\n\n                return;\n            }\n\n            // check if some properties changed\n            const change = this.recursion(entity, deletionQueue);\n            if (change !== null) {\n                // if a change is detected, add id as identifier for updates\n                change.id = entity.id;\n                changes.push(change);\n            }\n        });\n\n        if (field.flags?.cascade_delete) {\n            originIds.forEach((id) => {\n                if (!draft.has(id)) {\n                    const primary = {\n                        [field.primary]: id,\n                    };\n\n                    // still existing?\n                    deletionQueue.push({\n                        route: draft.source,\n                        key: id,\n                        entity: field.entity,\n                        primary,\n                    });\n                }\n            });\n            return changes;\n        }\n\n        if (!field.referenceField) {\n            return changes;\n        }\n\n        originIds.forEach((id) => {\n            if (!draft.has(id)) {\n                const data = { id };\n                data[field.referenceField] = null;\n                changes.push(data);\n            }\n        });\n\n        return changes;\n    }\n}\n","import Entity, { assignSetterMethod } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport type Vue from 'vue';\n\nassignSetterMethod((draft, property, value) => {\n    // @ts-expect-error\n    Shopware.Application.view.setReactive(draft as Vue, property, value);\n});\n\nexport default Entity;\n","import utils from 'src/core/service/util.service';\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport Entity from './entity.data';\nimport EntityCollection from './entity-collection.data';\nimport Criteria from './criteria.data';\n\nexport default class EntityFactory {\n    /**\n     * Creates a new entity for the provided entity name.\n     * Returns null for unknown entities.\n     *\n     * @param {String} entityName\n     * @param {String|null} id\n     * @param {Object} context\n     * @returns {Entity|null}\n     */\n    create(entityName, id, context) {\n        id = id || utils.createId();\n\n        const definition = Shopware.EntityDefinition.get(entityName);\n\n        if (!definition) {\n            warn('Entity factory', `No schema found for entity ${entityName}`);\n            return null;\n        }\n\n        const data = {\n            extensions: {},\n        };\n\n        const toManyAssociations = definition.getToManyAssociations();\n        Object.keys(toManyAssociations).forEach((property) => {\n            const associatedProperty = toManyAssociations[property].entity;\n\n            if (toManyAssociations[property].flags.extension) {\n                data.extensions[property] = this.createCollection(\n                    entityName,\n                    `${id}/extensions`,\n                    property,\n                    associatedProperty,\n                    context,\n                );\n            } else {\n                data[property] = this.createCollection(entityName, id, property, associatedProperty, context);\n            }\n        });\n\n        const entity = new Entity(id, entityName, data);\n        entity.markAsNew();\n\n        return entity;\n    }\n\n    /**\n     * @private\n     * @param {String} entity\n     * @param {String} id\n     * @param {String} property\n     * @param {String} related\n     * @param {Object} context\n     * @returns {EntityCollection}\n     */\n    createCollection(entity, id, property, related, context) {\n        const subRoute = property.replace(/_/g, '-');\n        const route = entity.replace(/_/g, '-');\n        const source = `/${route}/${id}/${subRoute}`;\n\n        const criteria = new Criteria();\n        criteria.setLimit(10);\n        criteria.setPage(1);\n\n        return new EntityCollection(source, related, context, criteria);\n    }\n}\n","import types from 'src/core/service/utils/types.utils';\nimport type { AxiosResponse } from 'axios';\nimport type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport EntityClass from './entity.data';\nimport Criteria from './criteria.data';\nimport EntityCollection from './entity-collection.data';\n\ntype meta = {\n    totalCountMode: number,\n    total: number,\n}\n\ntype links = {\n    [relation: string]: string,\n}\n\ntype row = {\n    id: string,\n    type: string,\n    attributes: {\n        [key: string|symbol]: unknown\n    },\n    links: links,\n    relationships: {\n        [key: string|symbol]: unknown\n    },\n    meta?: meta,\n}\n\ntype data = {\n    data: [row],\n    included: [row],\n    links: {\n        [relation: string]: string,\n    },\n    meta?: meta,\n    aggregations: [],\n}\n\ntype field = {\n    entity: string,\n}\n\ntype schema = {\n    properties: {\n        [key: string|symbol]: field,\n    },\n    isToManyAssociation: (field: field) => boolean,\n    isToOneAssociation: (field: field) => boolean,\n}\n\ntype toOneData = {\n    data: {\n        type: string,\n        id: string\n    }\n}\n\nexport default class EntityHydrator {\n    cache: { [key: string]: Entity } = {};\n\n    /**\n     * Hydrates the repository response to a SearchResult class with all entities and aggregations\n     */\n    hydrateSearchResult(\n        route: string,\n        entityName: string,\n        response: AxiosResponse<data>,\n        context: apiContext,\n        criteria: Criteria,\n    ): EntityCollection {\n        this.cache = {};\n        const entities = [] as Entity[];\n\n        response.data.data.forEach((item) => {\n            const entity = this.hydrateEntity(entityName, item, response.data, context, criteria);\n\n            if (entity !== null) {\n                entities.push(entity);\n            }\n        });\n\n        return new EntityCollection(\n            route,\n            entityName,\n            context,\n            criteria,\n            entities,\n            response.data.meta?.total,\n            response.data.aggregations,\n        );\n    }\n\n    /**\n     * Hydrates a collection of entities. Nested association will be hydrated into collections or entity classes.\n     */\n    hydrate(\n        route: string,\n        entityName: string,\n        data: data,\n        context: apiContext,\n        criteria: Criteria,\n    ): EntityCollection {\n        this.cache = {};\n\n        const collection = new EntityCollection(route, entityName, context, criteria);\n\n        data.data.forEach((row) => {\n            const entity = this.hydrateEntity(entityName, row, data, context, criteria);\n\n            if (entity !== null) {\n                collection.add(entity);\n            }\n        });\n\n        return collection;\n    }\n\n    /**\n     * @private\n     */\n    hydrateEntity(\n        entityName: string,\n        row: row,\n        response: data,\n        context: apiContext,\n        criteria: Criteria,\n    ): Entity|null {\n        if (!row) {\n            return null;\n        }\n\n        const id = row.id;\n        const cacheKey = `${entityName}-${id}`;\n\n        if (this.cache[cacheKey]) {\n            return this.cache[cacheKey];\n        }\n\n        const schema = Shopware.EntityDefinition.get(entityName);\n        // currently translation can not be hydrated\n        if (!schema) {\n            return null;\n        }\n\n        const data = row.attributes;\n        data.id = id;\n\n        // hydrate empty json fields\n        Object.entries(data).forEach(([attributeKey, attributeValue]) => {\n            const field = schema.getField(attributeKey) as string;\n\n            if (!field) {\n                return;\n            }\n\n            if (!schema.isJsonField(field)) {\n                return;\n            }\n\n            if (Array.isArray(attributeValue) && attributeValue.length <= 0 && schema.isJsonObjectField(field)) {\n                data[attributeKey] = {};\n                return;\n            }\n\n            const isEmptyObject = !Array.isArray(attributeValue)\n                    && typeof attributeValue === 'object'\n                    && attributeValue !== null\n                    && Object.keys(attributeValue).length <= 0;\n\n            if (schema.isJsonListField(field) && (isEmptyObject || attributeValue === null)) {\n                data[attributeKey] = [];\n            }\n        });\n\n        Object.keys(row.relationships).forEach((property) => {\n            const value = row.relationships[property] as data;\n\n            if (property === 'extensions') {\n                data[property] = this.hydrateExtensions(id, value, schema, response, context, criteria);\n            }\n\n            const field = (schema.properties as {[key: string]: unknown})[property] as { entity: string};\n\n            if (!field) {\n                return true;\n            }\n\n            if (schema.isToManyAssociation(field)) {\n                data[property] = this.hydrateToMany(criteria, property, value, field.entity, context, response);\n\n                return true;\n            }\n\n            if (schema.isToOneAssociation(field) && types.isObject(value.data)) {\n                const nestedEntity = this.hydrateToOne(criteria, property, value, response, context);\n\n                // currently translation can not be hydrated\n                if (nestedEntity) {\n                    data[property] = nestedEntity;\n                }\n            }\n\n            return true;\n        });\n\n        const e = new EntityClass(id, entityName, data);\n\n        this.cache[cacheKey] = e;\n\n        return e;\n    }\n\n    /**\n     * Hydrates a to one association entity. The entity data is stored in the response included\n     */\n    hydrateToOne(\n        criteria: Criteria,\n        property: string,\n        value: unknown,\n        response: data,\n        context: apiContext,\n    ): Entity|null {\n        const associationCriteria = this.getAssociationCriteria(criteria, property);\n\n        const nestedRaw = this.getIncluded((value as toOneData).data.type, (value as toOneData).data.id, response);\n\n        return this.hydrateEntity((value as toOneData).data.type, nestedRaw, response, context, associationCriteria);\n    }\n\n    getAssociationCriteria(criteria: Criteria, property: string): Criteria {\n        if (criteria.hasAssociation(property)) {\n            return criteria.getAssociation(property);\n        }\n        return new Criteria();\n    }\n\n    /**\n     * Hydrates a many association (one to many and many to many) collection and hydrates the related entities\n     * @private\n     */\n    hydrateToMany(\n        criteria: Criteria,\n        property: string,\n        value: data,\n        entityName: string,\n        context: apiContext,\n        response: data,\n    ): EntityCollection {\n        const associationCriteria = this.getAssociationCriteria(criteria, property);\n        const apiResourcePath = context?.apiResourcePath as string ?? '';\n\n        const url = value.links.related.substr(\n            value.links.related.indexOf(apiResourcePath)\n            +\n            apiResourcePath.length,\n        );\n\n        const collection = new EntityCollection(url, entityName, context, associationCriteria);\n\n        if (value.data === null) {\n            return collection;\n        }\n\n        value.data.forEach((link) => {\n            const nestedRaw = this.getIncluded(link.type, link.id, response);\n            const nestedEntity = this.hydrateEntity(\n                link.type,\n                nestedRaw,\n                response,\n                context,\n                associationCriteria,\n            );\n\n            if (nestedEntity) {\n                collection.add(nestedEntity);\n            }\n        });\n        return collection;\n    }\n\n    /**\n     * Finds an included entity\n     * @private\n     */\n    getIncluded(entityName: string, id: string, response: data): row {\n        // @ts-expect-error\n        return response.included.find((included) => {\n            return (included.id === id && included.type === entityName);\n        });\n    }\n\n    /**\n     * @private\n     */\n    hydrateExtensions(\n        id: string,\n        relationship: data,\n        schema: schema,\n        response: data,\n        context: apiContext,\n        criteria: Criteria,\n    ): {[key: string]: unknown} {\n        const extension = this.getIncluded('extension', id, response);\n\n        const data = Object.assign({}, extension.attributes);\n\n        Object.keys(extension.relationships).forEach((property) => {\n            const value = extension.relationships[property] as data;\n\n            const field = schema.properties[property];\n\n            if (!field) {\n                return true;\n            }\n\n            if (schema.isToManyAssociation(field)) {\n                data[property] = this.hydrateToMany(criteria, property, value, field.entity, context, response);\n\n                return true;\n            }\n\n            if (schema.isToOneAssociation(field) && types.isObject(value.data)) {\n                const nestedEntity = this.hydrateToOne(criteria, property, value, response, context);\n\n                if (nestedEntity) {\n                    data[property] = nestedEntity;\n                }\n            }\n\n            return true;\n        });\n\n        return data;\n    }\n}\n","import type { AxiosInstance, AxiosResponse } from 'axios';\nimport type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport Criteria from './criteria.data';\nimport type EntityHydrator from './entity-hydrator.data';\nimport type ChangesetGenerator from './changeset-generator.data';\nimport type ErrorResolver from './error-resolver.data';\nimport type EntityFactory from './entity-factory.data';\nimport type EntityDefinition from './entity-definition.data';\nimport type EntityCollection from './entity-collection.data';\n\ntype options = {\n    [key: string]: unknown\n};\n\ntype IdSearchResult = {\n    total: number,\n    data: string[],\n};\n\ntype DeletionQueue = {\n    route: string,\n    key: string,\n    entity: string,\n    primary: unknown,\n}[]\n\ntype Changeset = {\n    changes: Changeset,\n    deletionQueue: DeletionQueue\n};\n\ntype Operation = {\n    action: string,\n    payload: unknown[],\n    entity: string,\n};\n\ntype Error = {\n    source: {\n        pointer: string,\n    }\n};\n\ntype ErrorResponse = {\n    response?: {\n        data?: {\n            errors?: Error[],\n            data: {\n                [key: string]: {\n                    result: {\n                        errors: Error[],\n                    }[],\n                }\n            },\n        }\n    }\n};\n\nexport default class Repository {\n    route: string;\n\n    entityName: string;\n\n    httpClient: AxiosInstance;\n\n    hydrator: EntityHydrator;\n\n    changesetGenerator: ChangesetGenerator;\n\n    entityFactory: EntityFactory;\n\n    errorResolver: ErrorResolver;\n\n    options: options;\n\n    constructor(\n        route: string,\n        entityName: string,\n        httpClient: AxiosInstance,\n        hydrator: EntityHydrator,\n        changesetGenerator: ChangesetGenerator,\n        entityFactory: EntityFactory,\n        errorResolver: ErrorResolver,\n        options: options,\n    ) {\n        this.route = route;\n        this.entityName = entityName;\n        this.httpClient = httpClient;\n        this.hydrator = hydrator;\n        this.changesetGenerator = changesetGenerator;\n        this.entityFactory = entityFactory;\n        this.errorResolver = errorResolver;\n        this.options = options;\n    }\n\n    get schema(): EntityDefinition {\n        return Shopware.EntityDefinition.get(this.entityName);\n    }\n\n    /**\n     * Sends a search request to the server to find entity ids for the provided criteria.\n     */\n    searchIds(criteria: Criteria, context = Shopware.Context.api): Promise<IdSearchResult> {\n        const headers = this.buildHeaders(context);\n\n        const url = `/search-ids${this.route}`;\n\n        return this.httpClient\n            .post(url, criteria.parse(), { headers })\n            .then((response) => {\n                return response.data as IdSearchResult;\n            });\n    }\n\n    /**\n     * Sends a search request for the repository entity.\n     */\n    search(criteria: Criteria, context = Shopware.Context.api): Promise<EntityCollection> {\n        const headers = this.buildHeaders(context);\n\n        const url = `/search${this.route}`;\n\n        return this.httpClient\n            .post(url, criteria.parse(), { headers })\n            .then((response) => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                return this.hydrator.hydrateSearchResult(this.route, this.entityName, response, context, criteria);\n            });\n    }\n\n    /**\n     * Short hand to fetch a single entity from the server\n     */\n    get(id: string, context = Shopware.Context.api, criteria: Criteria | null = null): Promise<Entity | null> {\n        criteria = criteria || new Criteria();\n        criteria.setIds([id]);\n\n        return this.search(criteria, context).then((result) => {\n            return result.get(id);\n        });\n    }\n\n    /**\n     * Detects all entity changes and send the changes to the server.\n     * If the entity is marked as new, the repository will send a POST create. Updates will be send as PATCH request.\n     * Deleted associations will be send as additional request\n     */\n    save(entity: Entity, context = Shopware.Context.api): Promise<void | AxiosResponse> {\n        if (this.options.useSync === true) {\n            return this.saveWithSync(entity, context);\n        }\n\n        return this.saveWithRest(entity, context);\n    }\n\n    /**\n     * @private\n     */\n    async saveWithRest(entity: Entity, context: apiContext): Promise<void | AxiosResponse> {\n        const { changes, deletionQueue } = this.changesetGenerator.generate(entity) as Changeset;\n\n        if (!this.options.keepApiErrors) {\n            await this.errorResolver.resetApiErrors();\n        }\n\n        await this.sendDeletions(deletionQueue, context);\n        return this.sendChanges(entity, changes, context);\n    }\n\n    /**\n     * @private\n     */\n    async saveWithSync(entity: Entity, context: apiContext): Promise<void | AxiosResponse> {\n        const { changes, deletionQueue } = this.changesetGenerator.generate(entity) as Changeset;\n\n        if (entity.isNew()) {\n            Object.assign(changes || {}, { id: entity.id });\n        }\n\n        const operations = [];\n\n        if (deletionQueue.length > 0) {\n            operations.push(...this.buildDeleteOperations(deletionQueue));\n        }\n\n        if (changes !== null) {\n            operations.push({\n                key: 'write',\n                action: 'upsert',\n                entity: entity.getEntityName(),\n                payload: [changes],\n            });\n        }\n\n        const headers = this.buildHeaders(context);\n        headers['single-operation'] = true;\n\n        if (operations.length <= 0) {\n            return Promise.resolve();\n        }\n\n        if (!this.options.keepApiErrors) {\n            await this.errorResolver.resetApiErrors();\n        }\n\n\n        return this.httpClient\n            .post('_action/sync', operations, { headers })\n            .catch((errorResponse: ErrorResponse) => {\n                const errors: Error[] = [];\n                const result = errorResponse?.response?.data?.errors ?? [];\n\n                result.forEach((error) => {\n                    if (error.source.pointer.startsWith('/write/')) {\n                        error.source.pointer = error.source.pointer.substring(6);\n                        errors.push(error);\n                    }\n                });\n\n                this.errorResolver.handleWriteErrors({ errors }, [{ entity, changes }]);\n                throw errorResponse;\n            });\n    }\n\n    /**\n     * Clones an existing entity\n     */\n    clone(entityId: string, context = Shopware.Context.api, behavior: $TSDangerUnknownObject): Promise<unknown> {\n        if (!entityId) {\n            return Promise.reject(new Error('Missing required argument: id'));\n        }\n\n        return this.httpClient\n            .post(`/_action/clone${this.route}/${entityId}`, behavior, {\n                headers: this.buildHeaders(context),\n            })\n            .then((response) => {\n                return response.data as unknown;\n            });\n    }\n\n    /**\n     * Detects if the entity or the relations has remaining changes which are not synchronized with the server\n     */\n    hasChanges(entity: Entity): boolean {\n        const { changes, deletionQueue } = this.changesetGenerator.generate(entity) as Changeset;\n\n        return changes !== null || deletionQueue.length > 0;\n    }\n\n    /**\n     * Detects changes of all provided entities and send the changes to the server\n     */\n    saveAll(entities: EntityCollection, context = Shopware.Context.api): Promise<unknown> {\n        const promises: Promise<unknown>[] = [];\n\n        entities.forEach((entity) => {\n            promises.push(this.save(entity, context));\n        });\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Detects changes of all provided entities and send the changes to the server\n     */\n    async sync(entities: EntityCollection, context = Shopware.Context.api, failOnError = true): Promise<unknown> {\n        const { changeset, deletions } = this.getSyncChangeset(entities);\n\n        if (!this.options.keepApiErrors) {\n            await this.errorResolver.resetApiErrors();\n        }\n\n        await this.sendDeletions(deletions, context);\n        return this.sendUpserts(changeset, failOnError, context);\n    }\n\n    /**\n     * Detects changes of the provided entity and resets its first-level attributes to its origin state\n     */\n    discard(entity: Entity): void {\n        if (!entity) {\n            return;\n        }\n\n        const { changes } = this.changesetGenerator.generate(entity) as Changeset;\n\n        if (!changes) {\n            return;\n        }\n\n        const origin = entity.getOrigin();\n\n        Object.keys(changes).forEach((changedField) => {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            entity[changedField] = origin[changedField];\n        });\n    }\n\n    /**\n     * @private\n     */\n    sendUpserts(changeset: $TSDangerUnknownObject[], failOnError: boolean, context = Shopware.Context.api): Promise<void> {\n        if (changeset.length <= 0) {\n            return Promise.resolve();\n        }\n\n        const payload = changeset.map(({ changes }) => changes);\n        const headers = this.buildHeaders(context);\n        headers['fail-on-error'] = failOnError;\n\n        return this.httpClient.post(\n            '_action/sync',\n            {\n                [this.entityName]: {\n                    entity: this.entityName,\n                    action: 'upsert',\n                    payload,\n                },\n            },\n            { headers },\n        ).then(({ data }) => {\n            if ((data as { success: boolean}).success === false) {\n                throw data;\n            }\n            return Promise.resolve();\n        }).catch((errorResponse: ErrorResponse) => {\n            const errors = this.getSyncErrors(errorResponse);\n            this.errorResolver.handleWriteErrors(\n                { errors },\n                changeset,\n            );\n            throw errorResponse;\n        });\n    }\n\n    /**\n     * @private\n     */\n    getSyncErrors(errorResponse: ErrorResponse): Error[] {\n        if (Shopware.Feature.isActive('FEATURE_NEXT_15815')) {\n            const errors: Error[] = errorResponse?.response?.data?.errors ?? [];\n\n            errors.forEach((current) => {\n                if (!current.source || !current.source.pointer) {\n                    return;\n                }\n\n                const segments = current.source.pointer.split('/');\n\n                // remove first empty element in list\n                if (segments[0] === '') {\n                    segments.shift();\n                }\n                segments.shift();\n\n                current.source.pointer = segments.join('/');\n            });\n\n            return errors;\n        }\n\n        const operation = errorResponse?.response?.data?.data[this.entityName];\n        if (!operation) {\n            return [];\n        }\n\n        return operation.result.reduce((acc, result) => {\n            acc.push(...result.errors);\n            return acc;\n        }, [] as Error[]);\n    }\n\n    /**\n     * @private\n     */\n    getSyncChangeset(entities: EntityCollection): { changeset: $TSDangerUnknownObject[], deletions: DeletionQueue } {\n        return entities.reduce((acc, entity) => {\n            const { changes, deletionQueue } = this.changesetGenerator.generate(entity) as Changeset;\n\n            // @ts-expect-error\n            acc.deletions.push(...deletionQueue);\n\n            if (changes === null) {\n                return acc;\n            }\n\n            const pkData = this.changesetGenerator.getPrimaryKeyData(entity);\n            Object.assign(changes, pkData);\n\n            // @ts-expect-error\n            acc.changeset.push({ entity, changes });\n\n            return acc;\n        }, { changeset: [], deletions: [] });\n    }\n\n    /**\n     * Sends a create request for a many to many relation. This can only be used for many to many repository\n     * where the base route contains already the owner key, e.g. /product/{id}/categories\n     * The provided id contains the associated entity id.\n     */\n    assign(id: string, context = Shopware.Context.api): Promise<AxiosResponse> {\n        const headers = this.buildHeaders(context);\n\n        return this.httpClient.post(`${this.route}`, { id }, { headers });\n    }\n\n    /**\n     * Sends a delete request for the provided id.\n     */\n    delete(id: string, context = Shopware.Context.api): Promise<AxiosResponse> {\n        const headers = this.buildHeaders(context);\n\n        const url = `${this.route}/${id}`;\n        return this.httpClient.delete(url, { headers })\n            .catch((errorResponse: ErrorResponse) => {\n                const errors = errorResponse?.response?.data?.errors?.map((error) => {\n                    return { error, id, entityName: this.entityName };\n                });\n\n                this.errorResolver.handleDeleteError(errors);\n\n                throw errorResponse;\n            });\n    }\n\n    /**\n     * Allows to iterate all ids of the provided criteria.\n     */\n    iterateIds(\n        criteria: Criteria,\n        callback: (ids: string[]) => Promise<void>,\n        context = Shopware.Context.api,\n    ): Promise<unknown> {\n        if (criteria.getLimit() === null) {\n            criteria.setLimit(50);\n        }\n        criteria.setTotalCountMode(1);\n\n        return this.searchIds(criteria, context).then((response) => {\n            const ids = response.data;\n\n            if (ids.length <= 0) {\n                return Promise.resolve();\n            }\n\n            return callback(ids).then(() => {\n                if (ids.length < criteria.getLimit()) {\n                    return Promise.resolve();\n                }\n\n                criteria.setPage(criteria.getPage() + 1);\n\n                return this.iterateIds(criteria, callback);\n            });\n        });\n    }\n\n    /**\n     * Sends a delete request for a set of ids\n     */\n    syncDeleted(ids: string[], context = Shopware.Context.api): Promise<void> {\n        const headers = this.buildHeaders(context);\n\n        headers['fail-on-error'] = true;\n        const payload = ids.map((id) => {\n            return { id };\n        });\n\n        return this.httpClient.post(\n            '_action/sync',\n            {\n                [this.entityName]: {\n                    entity: this.entityName,\n                    action: 'delete',\n                    payload,\n                },\n            },\n            { headers },\n        ).then(({ data }) => {\n            if ((data as {success: boolean}).success === false) {\n                throw data;\n            }\n            return Promise.resolve();\n        }).catch((errorResponse: ErrorResponse) => {\n            const syncResult = errorResponse?.response?.data?.data[this.entityName].result;\n            if (!syncResult) {\n                return;\n            }\n\n            const errors = syncResult.reduce((acc, currentResult, index) => {\n                if (currentResult.errors) {\n                    currentResult.errors.forEach((error) => {\n                        acc.push({ error, entityName: this.entityName, id: ids[index] });\n                    });\n                }\n                return acc;\n            }, [] as { error: Error, entityName: string, id: string }[]);\n            this.errorResolver.handleDeleteError(errors);\n            throw errorResponse;\n        });\n    }\n\n    /**\n     * Creates a new entity for the local schema.\n     * To Many association are initialed with a collection with the corresponding remote api route\n     */\n    create(context = Shopware.Context.api, id: string | null = null): Entity | null {\n        return this.entityFactory.create(this.entityName, id, context) as unknown as Entity;\n    }\n\n    /**\n     * Creates a new version for the provided entity id. If no version id provided, the server\n     * will generate a new version id.\n     * If no version name provided, the server names the new version with `draft %date%`.\n     */\n    createVersion(\n        entityId: string,\n        context = Shopware.Context.api,\n        versionId: string | null = null,\n        versionName: string | null = null,\n    ): Promise<apiContext> {\n        const headers = this.buildHeaders(context);\n        const params: {\n            versionId?: string,\n            versionName?: string,\n        } = {};\n\n        if (versionId) {\n            params.versionId = versionId;\n        }\n        if (versionName) {\n            params.versionName = versionName;\n        }\n\n        const url = `_action/version/${this.entityName.replace(/_/g, '-')}/${entityId}`;\n\n        return this.httpClient.post(url, params, { headers })\n            .then((response: AxiosResponse<{versionId: string}>) => {\n                return { ...context, ...{ versionId: response.data.versionId } };\n            });\n    }\n\n    /**\n     * Sends a request to the server to merge all changes of the provided version id.\n     * The changes are squashed into a single change and the remaining version will be removed.\n     */\n    mergeVersion(versionId: string, context = Shopware.Context.api): Promise<AxiosResponse> {\n        const headers = this.buildHeaders(context);\n\n        const url = `_action/version/merge/${this.entityName.replace(/_/g, '-')}/${versionId}`;\n\n        return this.httpClient.post(url, {}, { headers });\n    }\n\n    /**\n     * Deletes the provided version from the server. All changes to this version are reverted\n     */\n    deleteVersion(entityId: string, versionId: string, context = Shopware.Context.api): Promise<AxiosResponse> {\n        const headers = this.buildHeaders(context);\n\n        const url = `/_action/version/${versionId}/${this.entityName.replace(/_/g, '-')}/${entityId}`;\n\n        return this.httpClient.post(url, {}, { headers });\n    }\n\n    /**\n     * @private\n     */\n    sendChanges(entity: Entity, changes: Changeset, context = Shopware.Context.api): Promise<AxiosResponse | void> {\n        const headers = this.buildHeaders(context);\n\n        if (entity.isNew()) {\n            changes = changes || {};\n            Object.assign(changes, { id: entity.id });\n\n            return this.httpClient.post(`${this.route}`, changes, { headers })\n                .catch((errorResponse: ErrorResponse) => {\n                    const errors = errorResponse?.response?.data?.errors;\n                    if (!errors) {\n                        return;\n                    }\n\n                    this.errorResolver.handleWriteErrors({ errors }, [{ entity, changes }]);\n                    throw errorResponse;\n                });\n        }\n\n        if (typeof changes === 'undefined' || changes === null) {\n            return Promise.resolve();\n        }\n\n        return this.httpClient.patch(`${this.route}/${entity.id}`, changes, { headers })\n            .catch((errorResponse: ErrorResponse) => {\n                const errors = errorResponse?.response?.data?.errors;\n                if (!errors) {\n                    return;\n                }\n\n                this.errorResolver.handleWriteErrors({ errors }, [{ entity, changes }]);\n                throw errorResponse;\n            });\n    }\n\n    /**\n     * Process the deletion queue\n     */\n    sendDeletions(\n        queue: DeletionQueue,\n        context = Shopware.Context.api,\n    ): Promise<AxiosResponse[]> {\n        const headers = this.buildHeaders(context);\n        const requests = queue.map((deletion) => {\n            return this.httpClient.delete(`${deletion.route}/${deletion.key}`, { headers })\n                .catch((errorResponse) => {\n                    this.errorResolver.handleDeleteError(errorResponse);\n                    throw errorResponse;\n                });\n        });\n\n        return Promise.all(requests);\n    }\n\n    /**\n     * Builds the request header for read and write operations\n     */\n    buildHeaders(context = Shopware.Context.api): {\n        Accept: string,\n        Authorization: string,\n        'Content-Type': string,\n        'sw-api-compatibility': boolean,\n        'sw-language-id'?: string,\n        'sw-currency-id'?: string,\n        'sw-version-id'?: string,\n        'sw-inheritance'?: boolean,\n        [key: string]: unknown,\n    } {\n        const { hasOwnProperty } = Shopware.Utils.object;\n        const compatibility = hasOwnProperty(this.options, 'compatibility') ? this.options.compatibility : true;\n        const appId = hasOwnProperty(this.options, 'sw-app-integration-id') ? this.options['sw-app-integration-id'] : false;\n\n        let headers = {\n            Accept: 'application/vnd.api+json',\n            // @ts-expect-error\n            Authorization: `Bearer ${context.authToken.access}`,\n            'Content-Type': 'application/json',\n            'sw-api-compatibility': compatibility as boolean,\n        };\n\n        if (context.languageId) {\n            headers = Object.assign(\n                { 'sw-language-id': context.languageId },\n                headers,\n            );\n        }\n\n        if (context.currencyId) {\n            headers = Object.assign(\n                { 'sw-currency-id': context.currencyId },\n                headers,\n            );\n        }\n\n        if (context.versionId) {\n            headers = Object.assign(\n                { 'sw-version-id': context.versionId },\n                headers,\n            );\n        }\n\n        if (context.inheritance) {\n            headers = Object.assign(\n                { 'sw-inheritance': context.inheritance },\n                headers,\n            );\n        }\n\n        if (appId) {\n            headers = Object.assign(\n                { 'sw-app-integration-id': appId },\n                headers,\n            );\n        }\n\n        return headers;\n    }\n\n    /**\n     * @private\n     */\n    buildDeleteOperations(deletionQueue: DeletionQueue): Operation[] {\n        const grouped: {[key: string]: unknown[]} = {};\n\n        deletionQueue.forEach((deletion) => {\n            const entityName = deletion.entity;\n\n            if (!entityName) {\n                return;\n            }\n\n            if (!grouped.hasOwnProperty(entityName)) {\n                grouped[entityName] = [];\n            }\n\n            grouped[entityName].push(deletion.primary);\n        });\n\n        const operations: Operation[] = [];\n\n        Object.keys(grouped).forEach((entity) => {\n            const deletions = grouped[entity];\n\n            operations.push({\n                action: 'delete',\n                payload: deletions,\n                entity: entity,\n            });\n        });\n\n        return operations;\n    }\n}\n","export default class ErrorResolver {\n    constructor() {\n        this.EntityDefinition = Shopware.EntityDefinition;\n        this.ShopwareError = Shopware.Classes.ShopwareError;\n        this.merge = Shopware.Utils.object.merge;\n    }\n\n    resetApiErrors() {\n        return Shopware.State.dispatch('error/resetApiErrors');\n    }\n\n    /**\n     * @param errors\n     * @param changeset\n     */\n    handleWriteErrors({ errors } = {}, changeset) {\n        if (!errors) {\n            throw new Error('[error-resolver] handleWriteError was called without errors');\n        }\n\n        const writeErrors = this.reduceErrorsByWriteIndex(errors);\n\n        this.handleErrors(writeErrors, changeset);\n\n        this.addSystemErrors(writeErrors.system);\n    }\n\n    handleDeleteError(errors) {\n        errors.forEach(({ error, entityName, id }) => {\n            const shopwareError = new this.ShopwareError(error);\n            Shopware.State.dispatch('error/addSystemError', { error: shopwareError });\n\n            Shopware.State.dispatch('error/addApiError', {\n                expression: `${entityName}.${id}`,\n                error: shopwareError,\n            });\n        });\n    }\n\n    reduceErrorsByWriteIndex(errors) {\n        let writeErrors = {\n            system: [],\n        };\n\n        errors.forEach((current) => {\n            if (!current.source || !current.source.pointer) {\n                writeErrors.system.push(new this.ShopwareError(current));\n                return;\n            }\n\n            const segments = current.source.pointer.split('/');\n\n            // remove first empty element in list\n            if (segments[0] === '') {\n                segments.shift();\n            }\n\n            const denormalized = {};\n            const lastIndex = segments.length - 1;\n\n            segments.reduce((pointer, segment, index) => {\n                // skip translations\n                if (segment === 'translations' || segments[index - 1] === 'translations') {\n                    return pointer;\n                }\n\n                if (index === lastIndex) {\n                    pointer[segment] = new this.ShopwareError(current);\n                } else {\n                    pointer[segment] = {};\n                }\n\n                return pointer[segment];\n            }, denormalized);\n\n            writeErrors = this.merge(writeErrors, denormalized);\n        });\n\n        return writeErrors;\n    }\n\n    /**\n     * @private\n     * @param {Object[]} systemErrors\n     */\n    addSystemErrors(systemErrors) {\n        systemErrors.forEach((error) => {\n            Shopware.State.dispatch('error/addSystemError', error);\n        });\n    }\n\n    /**\n     * @private\n     * @param writeErrors\n     * @param changeset\n     */\n    handleErrors(writeErrors, changeset) {\n        changeset.forEach(({ entity, changes }, writeIndex) => {\n            const errors = writeErrors[writeIndex];\n\n            // entity has no errors\n            if (!errors) {\n                return;\n            }\n\n            const definition = this.EntityDefinition.get(entity.getEntityName());\n            Object.keys(errors).forEach((fieldName) => {\n                this.resolveError(fieldName, errors[fieldName], definition, entity, changes);\n            });\n        });\n    }\n\n    /**\n     * @private\n     * @param fieldName\n     * @param error\n     * @param definition\n     * @param entity\n     * @param changeset\n     */\n    resolveError(fieldName, error, definition, entity, changeset) {\n        const field = definition.getField(fieldName);\n\n        if (!field) {\n            this.errorStore.addSystemError(error);\n            return;\n        }\n\n        if (definition.isToManyAssociation(field)) {\n            const associationChanges = this.buildAssociationChangeset(entity, changeset, error, fieldName);\n            this.handleErrors(error, associationChanges);\n            return;\n        }\n\n        if (definition.isToOneAssociation(field)) {\n            this.resolveOneToOneFieldError(\n                `${entity.getEntityName()}.${entity.id}.${fieldName}`,\n                error,\n            );\n            return;\n        }\n\n        if (definition.isJsonField(field)) {\n            this.resolveJsonFieldError(\n                `${entity.getEntityName()}.${entity.id}.${fieldName}`,\n                error,\n            );\n            return;\n        }\n\n        Shopware.State.dispatch('error/addApiError', {\n            expression: this.getErrorPath(entity, fieldName),\n            error: new this.ShopwareError(error),\n        });\n    }\n\n    buildAssociationChangeset(entity, changeset, error, associationName) {\n        if (!Shopware.Utils.object.hasOwnProperty(changeset, associationName)) {\n            Shopware.State.dispatch('error/addApiError', {\n                expression: this.getErrorPath(entity, associationName),\n                error: new this.ShopwareError(error),\n            });\n        }\n\n        return changeset[associationName].map((associationChange) => {\n            const association = entity[associationName].find((a) => {\n                return a.id === associationChange.id;\n            });\n\n            return { entity: association, changes: associationChange };\n        });\n    }\n\n    resolveJsonFieldError(basePath, error) {\n        Object.keys(error).forEach((fieldName) => {\n            const path = `${basePath}.${fieldName}`;\n\n            if (error[fieldName] instanceof this.ShopwareError) {\n                Shopware.State.dispatch('error/addApiError', {\n                    expression: path,\n                    error: error[fieldName],\n                });\n                return;\n            }\n\n            this.resolveJsonFieldError(path, error[fieldName]);\n        });\n    }\n\n    resolveOneToOneFieldError(basePath, error) {\n        Object.keys(error).forEach((fieldName) => {\n            const path = `${basePath}.${fieldName}`;\n\n            if (error[fieldName] instanceof this.ShopwareError) {\n                Shopware.State.dispatch('error/addApiError', {\n                    expression: path,\n                    error: error[fieldName],\n                });\n            }\n        });\n    }\n\n    /**\n     * @private\n     */\n    getErrorPath(entity, currentField) {\n        return `${entity.getEntityName()}.${entity.id}.${currentField}`;\n    }\n}\n","import { types } from '../service/util.service';\n\n/**\n * @module core/data/ErrorStore\n */\n\n/**\n * Stores an Error from the api\n * @param {String} expression\n * @param {ShopwareError} error\n * @param {Object} state\n * @param {function} setReactive\n */\nfunction addApiError(expression, error, state, setReactive = Object.defineProperty) {\n    if (typeof setReactive !== 'function') {\n        throw new Error('[ErrorStore] createApiError: setReactive is not a function');\n    }\n\n    const { store, field } = createPathToError(expression, state.api, setReactive);\n    setReactive(store, field, error);\n}\n\n/**\n * @private\n * @param {String} expression\n * @param {Object} state\n * @param {function} setReactive\n * @returns {{store: Object, field: String}}\n */\nfunction createPathToError(expression, state, setReactive) {\n    const path = expression.split('.');\n    const field = path.pop();\n\n    const store = path.reduce((currentStore, next) => {\n        if (!currentStore.hasOwnProperty(next)) {\n            setReactive(currentStore, next, {});\n        }\n        return currentStore[next];\n    }, state);\n\n    return { store, field };\n}\n\n/**\n * Removes the error for a given\n * @param {String} expression\n * @param {Object} state\n * @param {function} deleteReactive\n */\nfunction removeApiError(expression, state, deleteReactive = null) {\n    const path = expression.split('.');\n    const field = path.pop();\n\n    const store = path.reduce((currentStore, next) => {\n        if (currentStore?.[next]) {\n            return currentStore[next];\n        }\n\n        return null;\n    }, state.api);\n\n    if (store === null) {\n        return;\n    }\n\n    if (typeof deleteReactive === 'function') {\n        deleteReactive(store, field);\n    } else {\n        delete store.field;\n    }\n\n    if (path.length <= 0) {\n        return;\n    }\n\n    if (types.isEmpty(store)) {\n        removeApiError(path.join('.'), state, deleteReactive);\n    }\n}\n\n/**\n * removes all api errors\n * @param state\n */\nfunction resetApiErrors(state) {\n    state.api = {};\n}\n\n/**\n * stores an system error\n * @param {ShopwareError} error\n * @param id\n * @param state\n * @param setReactive\n */\nfunction addSystemError(error, id, state, setReactive = Object.defineProperty) {\n    if (typeof setReactive !== 'function') {\n        throw new Error('[ErrorStore] createApiError: setReactive is not a function');\n    }\n\n    setReactive(state.system, id, error);\n}\n\n/**\n * removes a system error by a given id\n * @param id\n * @param state\n * @param deleteReactive\n */\nfunction removeSystemError(id, state, deleteReactive = null) {\n    if (typeof deleteReactive === 'function') {\n        deleteReactive(state.system, id);\n    } else {\n        delete state.system[id];\n    }\n}\n\nexport default {\n    addApiError,\n    removeApiError,\n    resetApiErrors,\n    addSystemError,\n    removeSystemError,\n};\n","export default class FilterFactory {\n    constructor() {\n        this.STRING_FILTER_INPUT = 'string-filter';\n        this.NUMBER_FILTER_INPUT = 'number-filter';\n        this.DATE_FILTER_INPUT = 'date-filter';\n        this.ASSOCIATION_FILTER_INPUT = 'multi-select-filter';\n        this.BOOLEAN_FILTER_INPUT = 'boolean-filter';\n        this.PRICE_FILTER_INPUT = 'price-filter';\n        this.EXISTENCE_FILTER_INPUT = 'existence-filter';\n    }\n\n    /**\n     * Creates a filter objects for each module.\n     *\n     * @param {String} entityName\n     * @param {Object|null} filters\n     * @returns {Array} filters\n     */\n    create(entityName, filters) {\n        return Object.entries(filters).map(([key, filter]) => {\n            filter.name = key;\n\n            const property = this.getFilterProperties(entityName, filter.property);\n\n            if (filter.type || !property) {\n                return filter;\n            }\n\n            filter.schema = property;\n\n            switch (property.type) {\n                case 'string':\n                    filter.type = this.STRING_FILTER_INPUT;\n                    break;\n                case 'int':\n                    filter.type = this.NUMBER_FILTER_INPUT;\n                    break;\n                case 'date':\n                    filter.type = this.DATE_FILTER_INPUT;\n                    break;\n                case 'association':\n                    filter.type = (property.relation === 'many_to_many' || property.relation === 'many_to_one')\n                        ? this.ASSOCIATION_FILTER_INPUT\n                        : this.EXISTENCE_FILTER_INPUT;\n                    break;\n                case 'boolean':\n                    filter.type = this.BOOLEAN_FILTER_INPUT;\n                    break;\n                default:\n                    filter.type = this.STRING_FILTER_INPUT;\n            }\n\n            if (filter.property === 'price') {\n                filter.type = this.NUMBER_FILTER_INPUT;\n            }\n\n            return filter;\n        });\n    }\n\n    /**\n     * Get filter entity properties\n     *\n     * @param {String} entityName\n     * @param {string} accessor\n     * @returns {Object}\n     */\n    getFilterProperties(entityName, accessor) {\n        const { properties } = Shopware.EntityDefinition.get(entityName);\n\n        const parts = accessor.split('.');\n\n        // Get the first accessor element\n        const first = parts.shift();\n\n        const property = properties[first];\n\n        if (!property) {\n            throw new Error(`No definition found for property ${first}`);\n        }\n\n        // If there are more parts remaining\n        if (parts.length > 0 && property.entity) {\n            // recursion call for nested associations\n            return this.getFilterProperties(property.entity, parts.join('.'));\n        }\n\n        let returnProperty = { ...property };\n\n        // Check for foreign key association\n        if (property.type === 'uuid') {\n            Object.keys(properties).forEach(key => {\n                if (properties[key].type === 'association' && properties[key].localField === first) {\n                    returnProperty = properties[key];\n                }\n            });\n        }\n\n        return returnProperty;\n    }\n}\n","import ChangesetGenerator from './changeset-generator.data';\nimport Criteria from './criteria.data';\nimport Entity from './entity.data';\nimport EntityCollection from './entity-collection.data';\nimport EntityDefinition from './entity-definition.data';\nimport EntityFactory from './entity-factory.data';\nimport EntityHydrator from './entity-hydrator.data';\nimport Repository from './repository.data';\nimport ErrorResolver from './error-resolver.data';\nimport ErrorStore from './error-store.data';\nimport FilterFactory from './filter-factory.data';\n\nexport default {\n    ChangesetGenerator,\n    Criteria,\n    Entity,\n    EntityCollection,\n    EntityDefinition,\n    EntityFactory,\n    EntityHydrator,\n    Repository,\n    ErrorResolver,\n    ErrorStore,\n    FilterFactory,\n};\n","import type Bottle from 'bottlejs';\nimport Vue from 'vue';\nimport type ViewAdapter from './adapter/view.adapter';\nimport type { ContextState } from '../app/state/context.store';\n/**\n * @module core/application\n */\n\ninterface bundlesSinglePluginResponse {\n    css?: string | string[],\n    js?: string | string[],\n    html?: string,\n    baseUrl?: null | string,\n    type?: 'app'|'plugin',\n    version?: string,\n    // Properties below this line are only available for apps\n    integrationId?: string,\n    active?: boolean,\n}\n\ninterface bundlesPluginResponse {\n    [key: string]: bundlesSinglePluginResponse\n}\n\n/**\n * The application bootstrapper bootstraps the application and registers the necessary\n * and optional parts of the application in a shared DI container which provides you\n * with an easy-to-use way to add new services as well as decoration these services.\n *\n * The bootstrapper provides you with the ability to register middleware for all or specific\n * services too.\n */\nclass ApplicationBootstrapper {\n    public $container: Bottle;\n\n    public view: null | ViewAdapter;\n\n    /**\n     * Provides the necessary class properties for the class to work probably\n     */\n    constructor(container: Bottle) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        const noop = (): void => {};\n        this.$container = container;\n\n        this.view = null;\n\n        // Create an empty DI container for the core initializers & services, so we can separate the core initializers\n        // and the providers\n        this.$container.service('service', noop);\n        this.$container.service('init', noop);\n        this.$container.service('factory', noop);\n    }\n\n    /**\n     * Returns all containers. Use this method if you're want to get initializers in your services.\n     */\n    getContainer<T extends Bottle.IContainerChildren>(containerName: T): Bottle.IContainer[T] {\n        if (typeof containerName === 'string' && this.$container.container[containerName]) {\n            return this.$container.container[containerName];\n        }\n\n        // @ts-expect-error\n        return this.$container.container;\n    }\n\n    /**\n     * Adds a factory to the application. A factory creates objects for the domain.\n     *\n     * The factory will be registered in a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addFactory('module', (container) => {\n     *    return ModuleFactory();\n     * });\n     */\n    addFactory<T extends keyof FactoryContainer>(\n        name: T,\n        factory: (container: Bottle.IContainer) => FactoryContainer[T],\n    ): ApplicationBootstrapper {\n        this.$container.factory(`factory.${name}`, factory.bind(this));\n\n        return this;\n    }\n\n    /**\n     * Registers a factory middleware for either every factory in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addFactoryMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addFactoryMiddleware('module', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     */\n    addFactoryMiddleware<SERVICE extends keyof Bottle.IContainer['factory']>(\n        nameOrMiddleware: SERVICE|Bottle.Middleware,\n        middleware? : Bottle.Middleware,\n    ): ApplicationBootstrapper {\n        return this._addMiddleware('factory', nameOrMiddleware, middleware);\n    }\n\n    /**\n     * Registers a decorator for either every factory in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addFactoryDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addFactoryDecorator('module', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     */\n    addFactoryDecorator(\n        nameOrDecorator: keyof FactoryContainer|Bottle.Decorator,\n        decorator? : Bottle.Decorator,\n    ): ApplicationBootstrapper {\n        return this._addDecorator('factory', nameOrDecorator, decorator);\n    }\n\n    /**\n     * Adds an initializer to the application. An initializer is a necessary part of the application which needs to be\n     * initialized before we can boot up the application.\n     *\n     * The initializer will be registered in a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addInitializer('httpClient', (container) => {\n     *    return HttpFactory(container.apiContext);\n     * });\n     */\n    addInitializer<I extends keyof InitContainer>(name: I, initializer: () => InitContainer[I]): ApplicationBootstrapper {\n        this.$container.factory(`init.${name}`, initializer.bind(this));\n        return this;\n    }\n\n    /**\n     * Registers optional services & provider for the application. Services are usually\n     * API gateways but can be a simple service.\n     *\n     * The service will be added to a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addServiceProvider('productService', (container) => {\n     *    return new ProductApiService(container.mediaService);\n     * });\n     */\n    addServiceProvider<S extends keyof ServiceContainer>(\n        name: S,\n        provider: (serviceContainer: ServiceContainer) => ServiceContainer[S],\n    ): ApplicationBootstrapper {\n        // @ts-expect-error\n        this.$container.factory(`service.${name}`, provider.bind(this));\n        return this;\n    }\n\n    registerConfig(config: { apiContext?: ContextState['api'], appContext?: ContextState['app'] }): ApplicationBootstrapper {\n        if (config.apiContext) {\n            this.registerApiContext(config.apiContext);\n        }\n        if (config.appContext) {\n            this.registerAppContext(config.appContext);\n        }\n\n        return this;\n    }\n\n    /**\n     * Registers the api context (api path, path to resources etc.)\n     */\n    registerApiContext(context: ContextState['api']): ApplicationBootstrapper {\n        Shopware.Context.api = Shopware.Classes._private.ApiContextFactory(context);\n\n        return this;\n    }\n\n    /**\n     * Registers the app context (firstRunWizard, etc.)\n     */\n    registerAppContext(context: ContextState['app']): ApplicationBootstrapper {\n        Shopware.Context.app = Shopware.Classes._private.AppContextFactory(context);\n\n        return this;\n    }\n\n    /**\n     * Registers a service provider middleware for either every service provider in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addServiceProviderMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addServiceProviderMiddleware('productService', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     */\n    addServiceProviderMiddleware<SERVICE extends keyof ServiceContainer>(\n        nameOrMiddleware: SERVICE|Bottle.Middleware,\n        middleware? : Bottle.Middleware,\n    ): ApplicationBootstrapper {\n        return this._addMiddleware('service', nameOrMiddleware, middleware);\n    }\n\n    /**\n     * Helper method which registers a middleware\n     */\n    private _addMiddleware<CONTAINER extends Bottle.IContainerChildren>(\n        containerName: CONTAINER,\n        nameOrMiddleware: keyof Bottle.IContainer[CONTAINER]|Bottle.Middleware,\n        middleware? : Bottle.Middleware,\n    ): ApplicationBootstrapper {\n        if (typeof nameOrMiddleware === 'string' && !!middleware) {\n            this.$container.middleware(`${containerName}.${nameOrMiddleware}`, middleware);\n        }\n\n        if (typeof nameOrMiddleware === 'function' && !!nameOrMiddleware) {\n            this.$container.middleware(containerName, nameOrMiddleware);\n        }\n\n        return this;\n    }\n\n    /**\n     * Initializes the feature flags from context settings\n     */\n    initializeFeatureFlags(): ApplicationBootstrapper {\n        const features = Shopware.Context.app.features;\n\n        if (!features) {\n            throw new Error(`\n                Feature initialization does not work\n                because the context does not contain any features.\n            `);\n        }\n\n        Shopware.Feature.init(features);\n\n        return this;\n    }\n\n    /**\n     * Registers a service provider decorator for either every service provider in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addServiceProviderDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addServiceProviderDecorator('productService', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     */\n    addServiceProviderDecorator(\n        nameOrDecorator: keyof ServiceContainer|Bottle.Decorator,\n        decorator? : Bottle.Decorator,\n    ): ApplicationBootstrapper {\n        return this._addDecorator('service', nameOrDecorator, decorator);\n    }\n\n    /**\n     * Helper method which registers a decorator\n     */\n    _addDecorator<CONTAINER extends Bottle.IContainerChildren>(\n        containerName: CONTAINER,\n        nameOrDecorator: keyof Bottle.IContainer[CONTAINER]|Bottle.Decorator,\n        decorator? : Bottle.Decorator,\n    ): ApplicationBootstrapper {\n        if (typeof nameOrDecorator === 'string' && !!decorator) {\n            this.$container.decorator(`${containerName}.${nameOrDecorator}`, decorator);\n        }\n\n        if (typeof nameOrDecorator === 'function' && !!nameOrDecorator) {\n            this.$container.decorator(containerName, nameOrDecorator);\n        }\n\n        return this;\n    }\n\n    /**\n     * Starts the bootstrapping process of the application.\n     */\n    start(config = {}): Promise<void|ApplicationBootstrapper> {\n        return this.initState()\n            .registerConfig(config)\n            .initializeFeatureFlags()\n            .startBootProcess();\n    }\n\n    /**\n     * Get the global state\n     */\n    initState(): ApplicationBootstrapper {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const initaliziation = this.getContainer('init').state;\n\n        if (initaliziation) {\n            return this;\n        }\n\n        throw new Error('State could not be initialized');\n    }\n\n    /**\n     * Returns the root of the application e.g. a new Vue instance\n     */\n    getApplicationRoot(): Vue | boolean {\n        if (!this.view?.root) {\n            return false;\n        }\n\n        return this.view.root;\n    }\n\n    setViewAdapter(viewAdapterInstance: ViewAdapter): void {\n        this.view = viewAdapterInstance;\n    }\n\n    /**\n     * Boot the application depending on login status\n     */\n    startBootProcess(): Promise<void|ApplicationBootstrapper> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const loginService = this.getContainer('service').loginService;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n        const isUserLoggedIn = loginService.isLoggedIn();\n\n        // if user is not logged in\n        if (!isUserLoggedIn) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            loginService.logout();\n            return this.bootLogin();\n        }\n\n        return this.bootFullApplication();\n    }\n\n    /**\n     * Boot the login.\n     */\n    bootLogin(): Promise<void|ApplicationBootstrapper> {\n        // set force reload after successful login\n        sessionStorage.setItem('sw-login-should-reload', 'true');\n\n        /**\n         * Login Application Booting:\n         *\n         * 1. Initialize all login initializer\n         * 2. Initialize the conversion of dependencies in view adapter\n         * 3. Create the application root\n         */\n\n        return this.initializeLoginInitializer()\n            .then(() => {\n                if (!this.view) {\n                    return Promise.reject();\n                }\n\n                return this.view.initDependencies();\n            })\n            .then(() => this.createApplicationRoot())\n            .catch((error) => this.createApplicationRootError(error));\n    }\n\n    /**\n     * Boot the whole application.\n     */\n    bootFullApplication(): Promise<void | ApplicationBootstrapper> {\n        const initContainer = this.getContainer('init');\n\n        /**\n         * Normal Application Booting:\n         *\n         * 1. Initialize all initializer\n         * 2. Load plugins\n         * 3. Wait until plugin promises are resolved\n         * 4. Initialize the conversion of dependencies in view adapter\n         * 5. Create the application root\n         */\n\n        return this.initializeInitializers(initContainer)\n            .then(() => this.loadPlugins())\n            .then(() => Promise.all(Shopware.Plugin.getBootPromises()))\n            .then(() => {\n                if (!this.view) { return Promise.reject(); }\n\n                return this.view.initDependencies();\n            })\n            .then(() => this.createApplicationRoot())\n            .catch((error) => this.createApplicationRootError(error));\n    }\n\n    /**\n     * Creates the application root and injects the provider container into the\n     * view instance to keep the dependency injection of Vue.js in place.\n     */\n    createApplicationRoot(): Promise<ApplicationBootstrapper> {\n        const initContainer = this.getContainer('init');\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        const router = initContainer.router.getRouterInstance();\n\n        // We're in a test environment, we're not needing an application root\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (Shopware.Context.app.environment === 'testing') {\n            return Promise.resolve(this);\n        }\n\n        if (!this.view) {\n            return Promise.reject(new Error('The ViewAdapter was not defined in the application.'));\n        }\n\n        this.view.init(\n            '#app',\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            router,\n            // @ts-expect-error\n            this.getContainer('service'),\n        );\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n        const firstRunWizard = Shopware.Context.app.firstRunWizard;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        if (firstRunWizard && !router.history.current.name.startsWith('sw.first.run.wizard.')) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            router.push({\n                name: 'sw.first.run.wizard.index',\n            });\n        }\n\n        if (typeof this._resolveViewInitialized === 'function') {\n            this._resolveViewInitialized();\n        }\n\n        return Promise.resolve(this);\n    }\n\n    _resolveViewInitialized: undefined | ((arg0?: unknown) => void);\n\n    /**\n     * You can use this Promise to do things after the view\n     * was initialized.\n     */\n    viewInitialized = new Promise((resolve) => {\n        this._resolveViewInitialized = resolve;\n    })\n\n    /**\n     * Creates the application root and show the error message.\n     */\n    createApplicationRootError(error: unknown): void {\n        console.error(error);\n        const container = this.getContainer('init');\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        const router = container.router.getRouterInstance();\n\n        this.view?.init(\n            '#app',\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            router,\n            // @ts-expect-error\n            this.getContainer('service'),\n        );\n\n        // @ts-expect-error\n        if (this.view?.root?.initError) {\n            // @ts-expect-error\n            this.view.root.initError = error;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        router.push({\n            name: 'error',\n        });\n    }\n\n    /**\n     * Initialize the initializers right away cause these are the mandatory services for the application\n     * to boot successfully.\n     */\n    private initializeInitializers(container: InitContainer, prefix = 'init'): Promise<unknown[]> {\n        const services = container.$list().map((serviceName) => {\n            return `${prefix}.${serviceName}`;\n        });\n        this.$container.digest(services);\n\n        const asyncInitializers = this.getAsyncInitializers(container);\n        return Promise.all(asyncInitializers);\n    }\n\n    /**\n     * Initialize the initializers right away cause these are the mandatory services for the application\n     * to boot successfully.\n     */\n    private initializeLoginInitializer(): Promise<unknown[]> {\n        const loginInitializer = [\n            'login',\n            'baseComponents',\n            'locale',\n            'apiServices',\n            'svgIcons',\n        ];\n\n        const initContainer = this.getContainer('init');\n        loginInitializer.forEach((key) => {\n            const exists = initContainer.hasOwnProperty(key);\n\n            if (!exists) {\n                console.error(`The initializer \"${key}\" does not exists`);\n            }\n        });\n\n        this.$container.digest(loginInitializer.map(key => `init.${key}`));\n\n        const asyncInitializers = this.getAsyncInitializers(loginInitializer);\n        return Promise.all(asyncInitializers);\n    }\n\n    getAsyncInitializers(initializer: InitContainer | string[]): unknown[] {\n        const initContainer = this.getContainer('init');\n        const asyncInitializers: unknown[] = [];\n\n        Object.keys(initializer).forEach((serviceKey) => {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const service = initContainer[serviceKey];\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (service?.constructor?.name === 'Promise') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                asyncInitializers.push(service);\n            }\n        });\n\n        return asyncInitializers;\n    }\n\n    /**\n     * Load all plugins from the server and inject them into the Site.\n     */\n    private async loadPlugins():Promise<(unknown[] | null)[]> {\n        const isDevelopmentMode = process.env.NODE_ENV;\n\n        let plugins: bundlesPluginResponse;\n        // only in webpack dev mode\n        if (isDevelopmentMode === 'development') {\n            const response = await fetch('./sw-plugin-dev.json');\n            plugins = await response.json() as bundlesPluginResponse;\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            plugins = Shopware.Context.app.config.bundles as bundlesPluginResponse;\n        }\n\n        const injectAllPlugins = Object.values(plugins).map((plugin) => this.injectPlugin(plugin));\n\n        // inject iFrames of plugins\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const bundles = Shopware.Context.app.config.bundles as bundlesPluginResponse;\n        Object.entries(bundles).forEach(([bundleName, bundle]) => {\n            if (!bundle.baseUrl) {\n                return;\n            }\n\n            if (isDevelopmentMode === 'development') {\n                // replace the baseUrl with the webpack url of the html file\n                Object.entries(plugins).forEach(([pluginName, entryFiles]) => {\n                    const stringUtils = Shopware.Utils.string;\n                    const camelCasePluginName = stringUtils.upperFirst(stringUtils.camelCase(pluginName));\n\n                    if (bundleName === camelCasePluginName && !!entryFiles.html) {\n                        bundle.baseUrl = entryFiles.html;\n                    }\n\n                    // add origin if not set yet\n                    if (bundle.baseUrl) {\n                        bundle.baseUrl = (new URL(bundle.baseUrl, window.origin)).toString();\n                    }\n                });\n            }\n\n            this.injectIframe({\n                active: bundle.active,\n                integrationId: bundle.integrationId,\n                bundleName,\n                bundleVersion: bundle.version,\n                iframeSrc: bundle.baseUrl,\n                bundleType: bundle.type,\n            });\n        });\n\n        if (isDevelopmentMode === 'development') {\n            // inject iFrames of plugins which aren't detected yet from the config (no files in public folder)\n            Object.entries(plugins).forEach(([pluginName, entryFiles]) => {\n                const stringUtils = Shopware.Utils.string;\n                const camelCasePluginName = stringUtils.upperFirst(stringUtils.camelCase(pluginName));\n\n                if (Object.keys(bundles).includes(camelCasePluginName) || !entryFiles.html) {\n                    return;\n                }\n\n                this.injectIframe({\n                    bundleVersion: undefined,\n                    bundleName: camelCasePluginName,\n                    iframeSrc: entryFiles.html,\n                });\n            });\n        }\n\n        return Promise.all(injectAllPlugins);\n    }\n\n    /**\n     * Inject plugin scripts and styles\n     */\n    private async injectPlugin(plugin: bundlesSinglePluginResponse): Promise<unknown[] | null> {\n        let allScripts = [];\n        let allStyles = [];\n\n        // load multiple js scripts\n        if (plugin.js && Array.isArray(plugin.js)) {\n            allScripts = plugin.js.map(src => this.injectJs(src));\n        } else if (plugin.js) {\n            allScripts.push(this.injectJs(plugin.js));\n        }\n\n        // load multiple css styling\n        if (plugin.css && Array.isArray(plugin.css)) {\n            allStyles = plugin.css.map(src => this.injectCss(src));\n        } else if (plugin.css) {\n            allStyles.push(this.injectCss(plugin.css));\n        }\n\n        try {\n            return await Promise.all([...allScripts, ...allStyles]);\n        } catch (_) {\n            console.warn('Error while loading plugin', plugin);\n\n            return null;\n        }\n    }\n\n    /**\n     * Inject js to end of body\n     */\n    private injectJs(scriptSrc: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            // create script tag with src\n            const script = document.createElement('script');\n            script.src = scriptSrc;\n            script.async = true;\n\n            // resolve when script was loaded succcessfully\n            script.onload = ():void => {\n                resolve();\n            };\n\n            // when script get not loaded successfully\n            script.onerror = ():void => {\n                reject();\n            };\n\n            // Append the script to the end of body\n            document.body.appendChild(script);\n        });\n    }\n\n    /**\n     * Inject js to end of head\n     */\n    private injectCss(styleSrc: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            // create style link with src\n            const link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.href = styleSrc;\n\n            // resolve when script was loaded succcessfully\n            link.onload = ():void => {\n                resolve();\n            };\n\n            // when style get not loaded successfully\n            link.onerror = ():void => {\n                reject();\n            };\n\n            // Append the style to the end of head\n            document.head.appendChild(link);\n        });\n    }\n\n    /**\n     * Inject hidden iframes\n     */\n    private injectIframe({\n        active,\n        integrationId,\n        bundleName,\n        iframeSrc,\n        bundleVersion,\n        bundleType,\n    }: {\n        active?: boolean,\n        integrationId?: string,\n        bundleName: string,\n        iframeSrc: string,\n        bundleVersion?: string,\n        bundleType?: 'app'|'plugin',\n    }): void {\n        const bundles = Shopware.Context.app.config.bundles;\n        let permissions = null;\n\n        if (bundles && bundles.hasOwnProperty(bundleName)) {\n            permissions = bundles[bundleName].permissions;\n        }\n\n        const extension = {\n            active,\n            integrationId,\n            name: bundleName,\n            baseUrl: iframeSrc,\n            version: bundleVersion,\n            type: bundleType,\n        };\n\n        // To keep permissions reactive no matter if empty or not\n        Vue.set(extension, 'permissions', permissions ?? Vue.observable({}));\n\n        Shopware.State.commit('extensions/addExtension', extension);\n    }\n}\n\nexport default ApplicationBootstrapper;\n","import type { AxiosInstance } from 'axios';\nimport Repository from './repository.data';\nimport type EntityHydrator from './entity-hydrator.data';\nimport type ChangesetGenerator from './changeset-generator.data';\nimport type EntityFactory from './entity-factory.data';\nimport type ErrorResolver from './error-resolver.data';\n\nexport default class RepositoryFactory {\n    private hydrator: EntityHydrator;\n\n    private changesetGenerator: ChangesetGenerator;\n\n    private entityFactory: EntityFactory;\n\n    private httpClient: AxiosInstance;\n\n    private errorResolver: ErrorResolver;\n\n    constructor(\n        hydrator: EntityHydrator,\n        changesetGenerator: ChangesetGenerator,\n        entityFactory: EntityFactory,\n        httpClient: AxiosInstance,\n        errorResolver: ErrorResolver,\n    ) {\n        this.hydrator = hydrator;\n        this.changesetGenerator = changesetGenerator;\n        this.entityFactory = entityFactory;\n        this.httpClient = httpClient;\n        this.errorResolver = errorResolver;\n    }\n\n    /**\n     * Creates a repository for the provided entity.\n     * The route parameter allows to configure a custom route for the entity - used for association loading.\n     */\n    create(entityName: string, route = '', options = {}): Repository {\n        if (!route) {\n            route = `/${entityName.replace(/_/g, '-')}`;\n        }\n\n        const definition = Shopware.EntityDefinition.get(entityName);\n\n        return new Repository(\n            route,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            definition.entity,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.httpClient,\n            this.hydrator,\n            this.changesetGenerator,\n            this.entityFactory,\n            this.errorResolver,\n            options,\n        );\n    }\n}\n","/**\n * @module core/factory/context\n * @param {Object} context\n * @type factory\n */\nexport default function createContext(context = {}) {\n    const Defaults = Shopware.Defaults;\n    const isDevMode = (process.env.NODE_ENV !== 'production');\n    const installationPath = getInstallationPath(context, isDevMode);\n    const apiPath = `${installationPath}/api`;\n\n    const languageId = localStorage.getItem('sw-admin-current-language') || Defaults.systemLanguageId;\n\n    // set initial context\n    Shopware.State.commit('context/setApiInstallationPath', installationPath);\n    Shopware.State.commit('context/setApiApiPath', apiPath);\n    Shopware.State.commit('context/setApiApiResourcePath', `${apiPath}`);\n    Shopware.State.commit('context/setApiAssetsPath', getAssetsPath(context.assetPath, isDevMode));\n    Shopware.State.commit('context/setApiLanguageId', languageId);\n    Shopware.State.commit('context/setApiInheritance', false);\n\n    if (isDevMode) {\n        Shopware.State.commit('context/setApiSystemLanguageId', Defaults.systemLanguageId);\n        Shopware.State.commit('context/setApiLiveVersionId', Defaults.versionId);\n    }\n\n    // assign unknown context information\n    Object.entries(context).forEach(([key, value]) => {\n        Shopware.State.commit('context/addApiValue', { key, value });\n    });\n\n    return Shopware.Context.api;\n}\n\n/**\n * Provides the installation path of the application. The path provides the scheme, host and sub directory.\n *\n * @param {Object} context\n * @param {Boolean} isDevMode\n * @returns {string}\n */\nfunction getInstallationPath(context, isDevMode) {\n    if (isDevMode) {\n        return '';\n    }\n\n    let fullPath = '';\n    if (context.schemeAndHttpHost?.length) {\n        fullPath = `${context.schemeAndHttpHost}${context.basePath}`;\n    }\n\n    return fullPath;\n}\n\n/**\n * Provides the path to the assets directory.\n *\n * @param {String} installationPath\n * @param {Boolean} isDevMode\n * @returns {string}\n */\nfunction getAssetsPath(installationPath, isDevMode) {\n    if (isDevMode) {\n        return '/bundles/';\n    }\n\n    return `${installationPath}/bundles/`;\n}\n","/**\n * @module core/factory/context\n * @param {Object} context\n * @type factory\n */\nexport default function createContext(context = {}) {\n    // set initial context\n    Shopware.State.commit('context/setAppEnvironment', process.env.NODE_ENV);\n    Shopware.State.commit('context/setAppFallbackLocale', 'en-GB');\n\n    // assign unknown context information\n    Object.entries(context).forEach(([key, value]) => {\n        Shopware.State.commit('context/addAppValue', { key, value });\n    });\n\n    return Shopware.Context.app;\n}\n","/**\n * @module core/factory/router\n */\n\n/**\n * Initializes the router for the application.\n *\n * @constructor\n * @param {VueRouter} Router\n * @param {ViewFactory} View\n * @param {ModuleFactory} moduleFactory\n * @param {LoginService} LoginService\n * @returns {{}}\n */\nexport default function createRouter(Router, View, moduleFactory, LoginService) {\n    const allRoutes = [];\n    const moduleRoutes = [];\n    let instance = null;\n\n    return {\n        addRoutes,\n        addModuleRoutes,\n        createRouterInstance,\n        getViewComponent,\n        getRouterInstance,\n        _setModuleFavicon: setModuleFavicon,\n    };\n\n    /**\n     * Creates the router instance for the application.\n     *\n     * @memberof module:core/factory/router\n     * @param {Object} [opts={}]\n     * @returns {VueRouter} router\n     */\n    function createRouterInstance(opts = {}) {\n        // convert moduleRoutes to view Route\n        const viewModuleRoutes = moduleRoutes.map((route) => {\n            return convertRouteComponentToViewComponent(route);\n        });\n\n        // convert allRoutes to view Route\n        const viewAllRoutes = allRoutes.map((route) => {\n            return convertRouteComponentToViewComponent(route);\n        });\n\n        // merge all routes together\n        const mergedRoutes = registerModuleRoutesAsChildren(viewAllRoutes, viewModuleRoutes);\n\n        // assign to view router options\n        const options = Object.assign({}, opts, {\n            routes: mergedRoutes,\n        });\n\n        // create router\n        const router = new Router(options);\n\n        beforeRouterInterceptor(router);\n        instance = router;\n\n        return router;\n    }\n\n    /**\n     * Returns the current router instance\n     *\n     * @returns {VueRouter}\n     */\n    function getRouterInstance() {\n        return instance;\n    }\n\n    /**\n     * Installs the navigation guard interceptor which provides every route, if possible, with the module definition.\n     * This is useful to generalize the route managing.\n     *\n     * @memberof module:core/factory/router\n     * @param {VueRouter} router\n     * @returns {VueRouter} router\n     */\n    function beforeRouterInterceptor(router) {\n        const assetPath = getAssetPath();\n\n        router.beforeEach((to, from, next) => {\n            setModuleFavicon(to, assetPath);\n            const loggedIn = LoginService.isLoggedIn();\n            const tokenHandler = new Shopware.Helper.RefreshTokenHelper();\n            const loginAllowlist = [\n                '/login', '/login/info', '/login/recovery',\n            ];\n\n            if (to.meta && to.meta.forceRoute === true) {\n                return next();\n            }\n\n            // The login route will be called and the user is not logged in, let him see the login.\n            if ((to.name === 'login' ||\n                loginAllowlist.includes(to.path) ||\n                to.path.startsWith('/login/user-recovery/'))\n                && !loggedIn\n            ) {\n                return next();\n            }\n\n            // The login route will be called and the user is logged in, redirect to the dashboard.\n            if ((to.name === 'login' ||\n                loginAllowlist.includes(to.path) ||\n                to.path.startsWith('/login/user-recovery/'))\n                && loggedIn\n            ) {\n                return next({ name: 'core' });\n            }\n\n            // User tries to access a protected route, therefore redirect him to the login.\n            if (!loggedIn) {\n                // Save the last route in case the user gets logged out in the mean time.\n                sessionStorage.setItem('sw-admin-previous-route', JSON.stringify({\n                    fullPath: to.fullPath,\n                    name: to.name,\n                }));\n\n                if (!tokenHandler.isRefreshing) {\n                    return tokenHandler.fireRefreshTokenRequest().then(() => {\n                        return resolveRoute(to, from, next);\n                    }).catch(() => {\n                        return next({\n                            name: 'sw.login.index',\n                        });\n                    });\n                }\n            }\n\n            // User tries to access a route which needs a special privilege\n            if (to.meta.privilege && !Shopware.Service('acl').can(to.meta.privilege)) {\n                return next({ name: 'sw.privilege.error.index' });\n            }\n\n            // User tries to access store page when store is not installed. Then redirect to landing page.\n            if (to.name && to.name.includes('sw.extension.store') && to.matched.length <= 0) {\n                return next({ name: 'sw.extension.store.landing-page' });\n            }\n\n            return resolveRoute(to, from, next);\n        });\n\n        return router;\n    }\n\n    /**\n     * Resolves the route and provides module additional information.\n     *\n     * @param {Route} to\n     * @param {Route} from\n     * @param {Function} next\n     * @return {*}\n     */\n    function resolveRoute(to, from, next) {\n        const moduleInfo = getModuleInfo(to);\n\n        if (moduleInfo !== null) {\n            to.meta.$module = moduleInfo.manifest;\n        }\n\n        const navigationInfo = getNavigationInfo(to, moduleInfo);\n        if (navigationInfo !== null) {\n            to.meta.$current = navigationInfo;\n        }\n\n        return next();\n    }\n\n    /**\n     * Fetches module information based on the route the user wants to enter.\n     * After the module information got fetched the router navigation guard hook will be resolved.\n     *\n     * @param {Route} to\n     * @returns {Route} to\n     */\n    function getModuleInfo(to) {\n        // Provide information about the module\n        const moduleRegistry = moduleFactory.getModuleRegistry();\n\n        let foundModule = null;\n        let parentModule = null;\n\n        moduleRegistry.forEach((module) => {\n            if (foundModule) {\n                return;\n            }\n\n            if (module.routes.has(to.name)) {\n                foundModule = module;\n                return;\n            }\n\n            const parentPath = to.meta?.parentPath ? to.meta.parentPath : undefined;\n\n            if (parentPath && module.routes.has(to.meta.parentPath)) {\n                parentModule = module;\n            }\n        });\n\n        return foundModule || parentModule;\n    }\n\n    /**\n     * Add the current navigation definition to the meta data.\n     *\n     * @param {Route} to\n     * @param {Object} module\n     * @return {Object|null}\n     */\n    function getNavigationInfo(to, module) {\n        if (!module || !module.navigation) {\n            return null;\n        }\n\n        const navigation = module.navigation;\n        let currentNavigationEntry = null;\n\n        navigation.forEach((item) => {\n            if (item.path === to.name) {\n                currentNavigationEntry = item;\n            }\n        });\n\n        return currentNavigationEntry;\n    }\n\n    /**\n     * Registers the module routes as child routes of the root core route to automatically\n     * providing the administration base structure to every module.\n     *\n     * @memberof module:core/factory/router\n     * @param {Array} core - Core routes\n     * @param {Array} module - Module routes\n     * @returns {Array} core - new core routes definition\n     */\n    function registerModuleRoutesAsChildren(core, module) {\n        const moduleRootRoutes = [];\n        const moduleNormalRoutes = [];\n\n        // Separate core routes from the normal routes\n        module.forEach((moduleRoute) => {\n            if (moduleRoute.coreRoute === true) {\n                moduleRootRoutes.push(moduleRoute);\n                return;\n            }\n\n            moduleNormalRoutes.push(moduleRoute);\n        });\n\n        core.map((route) => {\n            if (route.root === true) {\n                route.children = moduleNormalRoutes;\n            }\n\n            return route;\n        });\n\n        // Merge the module core routes with the routes from the routes file\n        core = [...core, ...moduleRootRoutes];\n        return core;\n    }\n\n    /**\n     * Registers the core module routes. The provided component name will be remapped to the corresponding\n     * view component.\n     *\n     * @memberof module:core/factory/router\n     * @param {Array} routes\n     * @returns {Array} moduleRoutes - converted routes array\n     */\n    function addModuleRoutes(routes) {\n        moduleRoutes.push(...routes);\n\n        return moduleRoutes;\n    }\n\n    /**\n     * Registers module routes to the router. The method will loop through the provided routes\n     * and remaps the component names (e.g. either `route.component` or `route.components`) to\n     * the corresponding view component which should be registered under the same name.\n     *\n     * @memberof module:core/factory/router\n     * @param {Array} routes\n     * @returns {Array} allRoutes - converted routes array\n     */\n    function addRoutes(routes) {\n        allRoutes.push(...routes);\n\n        return allRoutes;\n    }\n\n    /**\n     * Converts the `route.component` / `route.components` property which is usually a component name\n     * to a view component, so the router works with component instead of looking up component names\n     * in the internal registry of the view framework.\n     *\n     * @memberof module:core/factory/router\n     * @param {Object} route - Route definition\n     * @returns {Object} route - Converted route definition\n     */\n    function convertRouteComponentToViewComponent(route) {\n        const hasOwnProperty = Shopware.Utils.object.hasOwnProperty;\n\n        if (hasOwnProperty(route, 'components') && Object.keys(route.components).length) {\n            const componentList = {};\n\n            Object.keys(route.components).forEach((componentKey) => {\n                let component = route.components[componentKey];\n\n                // Just convert component names\n                if (typeof component === 'string') {\n                    component = getViewComponent(component);\n                }\n                componentList[componentKey] = component;\n            });\n\n            route = iterateChildRoutes(route);\n\n            route.components = componentList;\n        }\n\n        if (typeof route.component === 'string') {\n            route.component = getViewComponent(route.component);\n        }\n\n        return route;\n    }\n\n    /**\n     * Transforms the child routes component list into View components to work with the application.\n     *\n     * @param {Object} route\n     * @returns {Object}\n     */\n    function iterateChildRoutes(route) {\n        if (route.children?.length) {\n            route.children = route.children.map((child) => {\n                let component = child.component;\n\n                // Just convert component names\n                if (typeof component === 'string') {\n                    component = getViewComponent(component);\n                }\n                child.component = component;\n\n                if (child.children) {\n                    child = iterateChildRoutes(child);\n                }\n\n                return child;\n            });\n        }\n\n        return route;\n    }\n\n    /**\n     * Get a component using the argument `componentName` from the view layer.\n     *\n     * @memberof module:core/factory/router\n     * @param {String} componentName\n     * @returns {Vue|null} - View component or null\n     */\n    function getViewComponent(componentName) {\n        return Shopware.Application.view.getComponent(componentName);\n    }\n\n    function getAssetPath() {\n        return Shopware.Context.api.assetsPath;\n    }\n\n    function setModuleFavicon(routeDestination, assetsPath) {\n        const moduleInfo = getModuleInfo(routeDestination);\n        if (!moduleInfo) {\n            return false;\n        }\n        const favicon = moduleInfo.manifest.favicon || null;\n        const favRef = document.getElementById('dynamic-favicon');\n\n        favRef.rel = 'shortcut icon';\n\n        const faviconSrc = moduleInfo.manifest.faviconSrc || 'administration';\n        if (assetsPath.length !== 0) {\n            assetsPath = `${assetsPath}${faviconSrc}/`;\n        }\n\n        favRef.href = favicon\n            ? `${assetsPath}static/img/favicon/modules/${favicon}`\n            : `${assetsPath}static/img/favicon/favicon-32x32.png`;\n\n        return true;\n    }\n}\n","export default () => {\n    const context = require.context('./', false, /(?<!index)\\.js|\\.ts$/);\n    return context.keys().reduce((accumulator, item) => {\n        const service = context(item).default;\n\n        accumulator.push(service);\n        return accumulator;\n    }, []);\n};\n","import type Vue from 'vue';\nimport { updateSubscriber, register } from '@shopware-ag/admin-extension-sdk/es/data';\nimport { get } from 'lodash';\n\ntype publishOptions = {\n    id: string,\n    path: string,\n    scope: Vue,\n}\n\ntype dataset = {\n    id: string,\n    scope: number,\n    data: unknown\n}\n\ntype transferObject = {\n    [key: string|symbol]: unknown\n}\n\ntype ParsedPath = {\n    pathToLastSegment: string,\n    lastSegment: string,\n};\n\ntype vueWithUid = Partial<Vue> & { _uid: number };\n\n// This is used by the Vue devtool extension plugin\nlet publishedDataSets: dataset[] = [];\n\n/**\n * Splits an object path like \"foo.bar.buz\" to \"{ pathToLastSegment: 'foo.bar', lastSegment: 'buz' }\".\n */\nfunction parsePath(path :string): ParsedPath | null {\n    if (!path.includes('.')) {\n        return null;\n    }\n\n    const properties = path.split('.');\n    const lastSegment = properties.pop();\n    const pathToLastSegment = properties.join('.');\n\n    if (lastSegment && lastSegment.length && pathToLastSegment && pathToLastSegment.length) {\n        return {\n            pathToLastSegment,\n            lastSegment,\n        };\n    }\n\n    return null;\n}\n\nexport function publishData({ id, path, scope }: publishOptions): void {\n    const registeredDataSet = publishedDataSets.find(s => s.id === id);\n\n    // Dataset registered from different scope? Prevent update.\n    if (registeredDataSet && registeredDataSet.scope !== (scope as vueWithUid)._uid) {\n        console.error(`The dataset id \"${id}\" you tried to publish is already registered.`);\n\n        return;\n    }\n\n    // Dataset registered from same scope? Update.\n    if (registeredDataSet && registeredDataSet.scope === (scope as vueWithUid)._uid) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        register({ id: id, data: get(scope, path) }).catch(() => {});\n\n        return;\n    }\n\n    // Create updateSubscriber which maps back changes from the app to Vue\n    updateSubscriber(id, (value) => {\n        // Null updates are not allowed\n        if (!value) {\n            return;\n        }\n\n        function setObject(transferObject: transferObject, prePath: string|null = null): void {\n            if (typeof transferObject?.getIsDirty === 'function' && !transferObject.getIsDirty()) {\n                return;\n            }\n\n            Object.keys(transferObject).forEach((property) => {\n                let realPath : string;\n                if (prePath) {\n                    realPath = `${prePath}.${property}`;\n                } else {\n                    realPath = `${path}.${property}`;\n                }\n\n                const parsedPath = parsePath(realPath);\n                if (parsedPath === null) {\n                    return;\n                }\n\n                // @ts-expect-error\n                // eslint-disable-next-line max-len\n                if (Shopware.Utils.hasOwnProperty(transferObject[property], 'getDraft', this) && typeof transferObject[property].getDraft === 'function') {\n                    setObject({ [property]: Shopware.Utils.object.cloneDeep(transferObject[property]) }, realPath);\n\n                    return;\n                }\n\n                if (Array.isArray(transferObject[property])) {\n                    (transferObject[property] as Array<unknown>).forEach((c, index) => {\n                        setObject({ [index]: c }, realPath);\n                    });\n\n                    return;\n                }\n\n                scope.$set(\n                    Shopware.Utils.object.get(scope, parsedPath.pathToLastSegment) as Vue,\n                    parsedPath.lastSegment,\n                    transferObject[property],\n                );\n            });\n        }\n\n        // @ts-expect-error\n        if (typeof value.data?.getDraft === 'function') {\n            setObject(value.data as transferObject);\n\n            return;\n        }\n\n        if (Array.isArray(value.data)) {\n            value.data.forEach((entry, index) => {\n                if (entry === null || typeof entry !== 'object') {\n                    return;\n                }\n\n                setObject({ [index]: entry as unknown });\n            });\n        }\n\n        // Vue.set does not resolve path's therefore we need to resolve to the last child property\n        if (path.includes('.')) {\n            const properties = path.split('.');\n            const lastPath = properties.pop();\n            const newPath = properties.join('.');\n            if (!lastPath) {\n                return;\n            }\n\n            scope.$set(Shopware.Utils.object.get(scope, newPath) as Vue, lastPath, value.data);\n\n            return;\n        }\n\n        scope.$set(scope, path, value.data);\n    });\n\n    // Watch for Changes on the Reactive Vue property and automatically publish them\n    const unwatch = scope.$watch(path, (value: Vue) => {\n        // const preparedValue = prepareValue(value);\n\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        register({ id: id, data: value }).catch(() => {});\n\n        const dataSet = publishedDataSets.find(set => set.id === id);\n        if (dataSet) {\n            dataSet.data = value;\n\n            return;\n        }\n\n        publishedDataSets.push({\n            id,\n            data: value,\n            scope: (scope as vueWithUid)._uid,\n        });\n    }, {\n        deep: true,\n        immediate: true,\n    });\n\n    // Before the registering component gets destroyed, destroy the watcher and deregister the dataset\n    scope.$once('hook:beforeDestroy', () => {\n        publishedDataSets = publishedDataSets.filter(value => value.id !== id);\n\n        unwatch();\n    });\n}\n\nexport function getPublishedDataSets(): dataset[] {\n    return publishedDataSets;\n}\n","/**\n * @module core/extension-api\n */\n\nimport { handle } from '@shopware-ag/admin-extension-sdk/es/channel';\nimport { publishData, getPublishedDataSets } from './service/extension-api-data.service';\n\nexport default {\n    handle,\n    publishData,\n    getPublishedDataSets,\n};\n","/**\n * Shopware End Developer API\n * @module Shopware\n * @ignore\n */\nimport Bottle from 'bottlejs';\n\nimport ModuleFactory from 'src/core/factory/module.factory';\nimport ComponentFactory from 'src/core/factory/component.factory';\nimport AsyncComponentFactory from 'src/core/factory/async-component.factory';\nimport TemplateFactory from 'src/core/factory/template.factory';\nimport EntityFactory from 'src/core/factory/entity.factory';\nimport StateFactory from 'src/core/factory/state.factory';\nimport ServiceFactory from 'src/core/factory/service.factory';\nimport ClassesFactory from 'src/core/factory/classes-factory';\nimport MixinFactory from 'src/core/factory/mixin.factory';\nimport FilterFactory from 'src/core/factory/filter.factory';\nimport DirectiveFactory from 'src/core/factory/directive.factory';\nimport LocaleFactory from 'src/core/factory/locale.factory';\nimport ShortcutFactory from 'src/core/factory/shortcut.factory';\nimport PluginBootFactory from 'src/core/factory/plugin-boot.factory';\nimport ApiServiceFactory from 'src/core/factory/api-service.factory';\nimport EntityDefinitionFactory from 'src/core/factory/entity-definition.factory';\nimport WorkerNotificationFactory from 'src/core/factory/worker-notification.factory';\n\nimport Feature from 'src/core/feature';\nimport ShopwareError from 'src/core/data/ShopwareError';\nimport ApiService from 'src/core/service/api.service';\nimport utils from 'src/core/service/util.service';\nimport FlatTreeHelper from 'src/core/helper/flattree.helper';\nimport SanitizerHelper from 'src/core/helper/sanitizer.helper';\nimport DeviceHelper from 'src/core/helper/device.helper';\nimport MiddlewareHelper from 'src/core/helper/middleware.helper';\nimport data from 'src/core/data/index';\nimport ApplicationBootstrapper from 'src/core/application';\n\nimport RefreshTokenHelper from 'src/core/helper/refresh-token.helper';\nimport HttpFactory from 'src/core/factory/http.factory';\nimport RepositoryFactory from 'src/core/data/repository-factory.data';\nimport ApiContextFactory from 'src/core/factory/api-context.factory';\nimport AppContextFactory from 'src/core/factory/app-context.factory';\nimport RouterFactory from 'src/core/factory/router.factory';\nimport ApiServices from 'src/core/service/api';\nimport ModuleFilterFactory from 'src/core/data/filter-factory.data';\nimport ExtensionApi from './extension-api';\n\n/** Initialize feature flags at the beginning */\nif (window.hasOwnProperty('_features_')) {\n    Feature.init(_features_);\n}\n\n// strict mode was set to false because it was defined wrong previously\nBottle.config = { strict: false };\nconst container = new Bottle();\n\nconst application = new ApplicationBootstrapper(container);\n\napplication\n    .addFactory('component', () => {\n        if (Shopware.Feature.isActive('FEATURE_NEXT_19822')) {\n            return AsyncComponentFactory;\n        }\n\n        return ComponentFactory;\n    })\n    .addFactory('template', () => {\n        return TemplateFactory;\n    })\n    .addFactory('module', () => {\n        return ModuleFactory;\n    })\n    .addFactory('entity', () => {\n        return EntityFactory;\n    })\n    .addFactory('state', () => {\n        return StateFactory;\n    })\n    .addFactory('serviceFactory', () => {\n        return ServiceFactory;\n    })\n    .addFactory('classesFactory', () => {\n        return ClassesFactory;\n    })\n    .addFactory('mixin', () => {\n        return MixinFactory;\n    })\n    .addFactory('filter', () => {\n        return FilterFactory;\n    })\n    .addFactory('directive', () => {\n        return DirectiveFactory;\n    })\n    .addFactory('locale', () => {\n        return LocaleFactory;\n    })\n    .addFactory('shortcut', () => {\n        return ShortcutFactory;\n    })\n    .addFactory('plugin', () => {\n        return PluginBootFactory;\n    })\n    .addFactory('apiService', () => {\n        return ApiServiceFactory;\n    })\n    .addFactory('entityDefinition', () => {\n        return EntityDefinitionFactory;\n    })\n    .addFactory('workerNotification', () => {\n        return WorkerNotificationFactory;\n    });\n\nclass ShopwareClass {\n    public Module = {\n        register: ModuleFactory.registerModule,\n        getModuleRegistry: ModuleFactory.getModuleRegistry,\n        getModuleRoutes: ModuleFactory.getModuleRoutes,\n        getModuleByEntityName: ModuleFactory.getModuleByEntityName,\n    };\n\n    public Component = Feature.isActive('FEATURE_NEXT_19822')\n        ? {\n            register: AsyncComponentFactory.register,\n            extend: AsyncComponentFactory.extend,\n            override: AsyncComponentFactory.override,\n            build: AsyncComponentFactory.build,\n            getTemplate: AsyncComponentFactory.getComponentTemplate,\n            getComponentRegistry: AsyncComponentFactory.getComponentRegistry,\n            getComponentHelper: AsyncComponentFactory.getComponentHelper,\n            registerComponentHelper: AsyncComponentFactory.registerComponentHelper,\n            markComponentAsSync: AsyncComponentFactory.markComponentAsSync,\n            isSyncComponent: AsyncComponentFactory.isSyncComponent,\n        }\n        : {\n            register: ComponentFactory.register,\n            extend: ComponentFactory.extend,\n            override: ComponentFactory.override,\n            build: ComponentFactory.build,\n            getTemplate: ComponentFactory.getComponentTemplate,\n            getComponentRegistry: ComponentFactory.getComponentRegistry,\n            getComponentHelper: ComponentFactory.getComponentHelper,\n            registerComponentHelper: ComponentFactory.registerComponentHelper,\n        };\n\n    public Template = {\n        register: TemplateFactory.registerComponentTemplate,\n        extend: TemplateFactory.extendComponentTemplate,\n        override: TemplateFactory.registerTemplateOverride,\n        getRenderedTemplate: TemplateFactory.getRenderedTemplate,\n    };\n\n    public Entity = {\n        addDefinition: EntityFactory.addEntityDefinition,\n        getDefinition: EntityFactory.getEntityDefinition,\n        getDefinitionRegistry: EntityFactory.getDefinitionRegistry,\n        getRawEntityObject: EntityFactory.getRawEntityObject,\n        // eslint-disable-next-line inclusive-language/use-inclusive-words\n        getPropertyBlacklist: EntityFactory.getPropertyBlacklist,\n        getRequiredProperties: EntityFactory.getRequiredProperties,\n        getAssociatedProperties: EntityFactory.getAssociatedProperties,\n        getTranslatableProperties: EntityFactory.getTranslatableProperties,\n    };\n\n    public State = StateFactory();\n\n    public Mixin = {\n        register: MixinFactory.register,\n        getByName: MixinFactory.getByName,\n    };\n\n    public Filter = {\n        register: FilterFactory.register,\n        getByName: FilterFactory.getByName,\n        getRegistry: FilterFactory.getRegistry,\n    };\n\n    public Directive = {\n        register: DirectiveFactory.registerDirective,\n        getByName: DirectiveFactory.getDirectiveByName,\n        getDirectiveRegistry: DirectiveFactory.getDirectiveRegistry,\n    };\n\n    public Locale = {\n        register: LocaleFactory.register,\n        extend: LocaleFactory.extend,\n        getByName: LocaleFactory.getLocaleByName,\n        getLocaleRegistry: LocaleFactory.getLocaleRegistry,\n    };\n\n    public Shortcut = {\n        getShortcutRegistry: ShortcutFactory.getShortcutRegistry,\n        getPathByCombination: ShortcutFactory.getPathByCombination,\n        register: ShortcutFactory.register,\n    };\n\n    public Plugin = {\n        addBootPromise: PluginBootFactory.addBootPromise,\n        getBootPromises: PluginBootFactory.getBootPromises,\n    };\n\n    public Service = ServiceFactory;\n\n    public Utils = utils;\n\n    public Application = application;\n\n    public Feature = Feature;\n\n    public ApiService = {\n        register: ApiServiceFactory.register,\n        getByName: ApiServiceFactory.getByName,\n        getRegistry: ApiServiceFactory.getRegistry,\n        getServices: ApiServiceFactory.getServices,\n        has: ApiServiceFactory.has,\n    };\n\n    public EntityDefinition = {\n        getScalarTypes: EntityDefinitionFactory.getScalarTypes,\n        getJsonTypes: EntityDefinitionFactory.getJsonTypes,\n        getDefinitionRegistry: EntityDefinitionFactory.getDefinitionRegistry,\n        has: EntityDefinitionFactory.has,\n        get: EntityDefinitionFactory.get,\n        add: EntityDefinitionFactory.add,\n        remove: EntityDefinitionFactory.remove,\n        getTranslatedFields: EntityDefinitionFactory.getTranslatedFields,\n        getAssociationFields: EntityDefinitionFactory.getAssociationFields,\n        getRequiredFields: EntityDefinitionFactory.getRequiredFields,\n    };\n\n    public ExtensionAPI = ExtensionApi;\n\n    public WorkerNotification = {\n        register: WorkerNotificationFactory.register,\n        getRegistry: WorkerNotificationFactory.getRegistry,\n        override: WorkerNotificationFactory.override,\n        remove: WorkerNotificationFactory.remove,\n        initialize: WorkerNotificationFactory.initialize,\n    };\n\n    public Defaults = {\n        systemLanguageId: '2fbb5fe2e29a4d70aa5854ce7ce3e20b',\n        defaultLanguageIds: ['2fbb5fe2e29a4d70aa5854ce7ce3e20b'],\n        versionId: '0fa91ce3e96a4bc2be4bd9ce752c3425',\n        storefrontSalesChannelTypeId: '8a243080f92e4c719546314b577cf82b',\n        productComparisonTypeId: 'ed535e5722134ac1aa6524f73e26881b',\n        apiSalesChannelTypeId: 'f183ee5650cf4bdb8a774337575067a6',\n        defaultSalutationId: 'ed643807c9f84cc8b50132ea3ccb1c3b',\n    };\n\n    public Data = data;\n\n    public Classes = {\n        ShopwareError,\n        ApiService,\n        _private: {\n            HttpFactory,\n            RepositoryFactory,\n            ApiContextFactory,\n            AppContextFactory,\n            RouterFactory,\n            FilterFactory: ModuleFilterFactory,\n        },\n    }\n\n    public Helper = {\n        FlatTreeHelper: FlatTreeHelper,\n        MiddlewareHelper: MiddlewareHelper,\n        RefreshTokenHelper: RefreshTokenHelper,\n        SanitizerHelper: SanitizerHelper,\n        DeviceHelper: DeviceHelper,\n    };\n\n    public get Context(): VuexRootState['context'] {\n        return this.State.get('context');\n    }\n\n    private _private = {\n        ApiServices: ApiServices,\n    }\n}\n\nconst ShopwareInstance = new ShopwareClass();\n\nwindow.Shopware = ShopwareInstance;\n\nexport default ShopwareInstance;\nexport { ShopwareClass };\n","var map = {\n\t\"./acl.api.service.js\": \"A45n\",\n\t\"./app-action-button.service.js\": \"s5md\",\n\t\"./app-cms-blocks.service.js\": \"ZnZ0\",\n\t\"./app-modules.service.js\": \"sqsB\",\n\t\"./app-url-change.service.js\": \"Cv5K\",\n\t\"./business-events.api.service.js\": \"8jby\",\n\t\"./cache.api.service.js\": \"juyG\",\n\t\"./calculate-price.api.service.js\": \"jVYu\",\n\t\"./cart-store-api.api.service.js\": \"pCCB\",\n\t\"./checkout-store.api.service.js\": \"MLY4\",\n\t\"./config.api.service.js\": \"Mt2o\",\n\t\"./customer-group-registration.api.service.js\": \"KpoE\",\n\t\"./customer-validation.api.service.js\": \"wqx3\",\n\t\"./document.api.service.js\": \"SnjH\",\n\t\"./excludedSearchTerm.api.service.js\": \"p0GD\",\n\t\"./extension-sdk.service.ts\": \"egkI\",\n\t\"./first-run-wizard.api.service.js\": \"lnsc\",\n\t\"./flow-actions.api.service.js\": \"in9x\",\n\t\"./import-export.api.service.js\": \"JUxB\",\n\t\"./integration.api.service.js\": \"tGtW\",\n\t\"./known-ips.api.service.js\": \"Lz4t\",\n\t\"./language-plugin.api.service.js\": \"J5bW\",\n\t\"./mail.api.service.js\": \"umIt\",\n\t\"./marketing.service.js\": \"UPBq\",\n\t\"./media-folder.api.service.js\": \"RT+Y\",\n\t\"./media.api.service.js\": \"SWCa\",\n\t\"./message-queue.api.service.js\": \"m9g7\",\n\t\"./notifications.service.js\": \"NOZM\",\n\t\"./number-range.api.service.js\": \"T+rS\",\n\t\"./order-document.api.service.js\": \"XwGQ\",\n\t\"./order-state-machine.api.service.js\": \"czq7\",\n\t\"./order.api.service.js\": \"cNT7\",\n\t\"./product-export.api.service.js\": \"A0sK\",\n\t\"./product-stream-preview.service.js\": \"+ZSk\",\n\t\"./promotion-sync.api.service.js\": \"lWuk\",\n\t\"./recommendations.api.service.js\": \"vVie\",\n\t\"./sales-channel.api.service.js\": \"OUny\",\n\t\"./scheduled-task.api.service.js\": \"earh\",\n\t\"./search.api.service.js\": \"JMVm\",\n\t\"./seo-url-template.api.service.js\": \"OW7U\",\n\t\"./seo-url.api.service.js\": \"iXTH\",\n\t\"./snippet-set.api.service.js\": \"7g5+\",\n\t\"./snippet.api.service.js\": \"tTBJ\",\n\t\"./state-machine.api.service.js\": \"gNKo\",\n\t\"./store-context.api.service.js\": \"a6Wd\",\n\t\"./store.api.service.js\": \"ssgS\",\n\t\"./sync.api.service.js\": \"6CVo\",\n\t\"./system-config.api.service.js\": \"hFIz\",\n\t\"./tag.api.service.js\": \"D7Q7\",\n\t\"./update.api.service.js\": \"fLuy\",\n\t\"./user-activity.service.js\": \"C0V+\",\n\t\"./user-config.api.service.js\": \"wjWR\",\n\t\"./user-input-sanitize.service.js\": \"AXza\",\n\t\"./user-recovery.api.service.js\": \"yoR4\",\n\t\"./user-validation.api.service.js\": \"cPrm\",\n\t\"./user.api.service.js\": \"uaRI\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"I404\";","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"language-plugins\"\n * @class\n * @extends ApiService\n */\nclass LanguagePluginApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'language-plugins') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'languagePluginService';\n    }\n\n    /**\n     * Get language-plugins\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getPlugins(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(`/_action/store/${this.apiEndpoint}`, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default LanguagePluginApiService;\n","import ApiService from '../api.service';\n\nconst { Criteria } = Shopware.Data;\n\n/**\n * Gateway for the API end point 'product'\n * @class\n * @extends ApiService\n */\nclass SearchApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = '_admin/search') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'searchService';\n    }\n\n    /* eslint-disable no-unused-vars */\n    /** @deprecated tag:v6.5.0 - Will removed, using searchQuery instead */\n    search({ term, page = 1, limit = 5, additionalParams = {}, additionalHeaders = {} }) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        const criteria = new Criteria();\n        criteria.setTerm(term);\n        criteria.setLimit(limit);\n        criteria.setPage(page);\n\n        const entities = [\n            'landing_page',\n            'order',\n            'customer',\n            'product',\n            'category',\n            'media',\n            'product_manufacturer',\n            'tag',\n            'cms_page',\n        ];\n\n        const queries = {};\n\n        entities.forEach(entity => {\n            queries[entity] = criteria;\n        });\n\n        return this.searchQuery(queries, additionalHeaders);\n    }\n    /* eslint-enable no-unused-vars */\n\n    /**\n     *\n     * @param {object} queries\n     * @param {object} additionalHeaders\n     * */\n    searchQuery(queries = {}, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        Object.keys(queries).forEach(entity => {\n            if (typeof queries[entity].parse === 'function') {\n                queries[entity] = queries[entity].parse();\n            }\n        });\n\n        return this.httpClient\n            .post(this.getApiBasePath(), queries, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SearchApiService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"import-export\"\n * @class\n * @extends ApiService\n */\nclass ImportExportApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'import-export') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'importExportService';\n    }\n\n    getFeatures() {\n        const apiRoute = `/_action/${this.getApiBasePath()}/features`;\n\n        return this.httpClient.get(\n            apiRoute,\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    initiate(profileId, expireDate, file) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/initiate`;\n        const formData = new FormData();\n        if (file) {\n            formData.append('file', file);\n        }\n        formData.append('profileId', profileId);\n        formData.append('expireDate', expireDate);\n\n        return this.httpClient.post(\n            apiRoute,\n            formData,\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    process(logId, offset) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/process`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                logId: logId,\n                offset: offset,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    cancel(logId) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/cancel`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                logId: logId,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getDownloadUrl(fileId, accessToken) {\n        const baseUrl = `${Shopware.Context.api.apiPath}`;\n        return `/${baseUrl}/_action/${this.getApiBasePath()}/file/download?fileId=${fileId}&accessToken=${accessToken}`;\n    }\n}\n\nexport default ImportExportApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"customer-group-registration\"\n * @class\n * @extends ApiService\n */\nclass CustomerGroupRegistrationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'customer-group-registration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'customerGroupRegistrationService';\n    }\n\n    accept(customerId, additionalParams = {}, additionalHeaders = {}, additionalRequest = {}) {\n        const route = `/_action/${this.getApiBasePath()}/accept`;\n        return this.httpClient.post(\n            route,\n            {\n                customerIds: Array.isArray(customerId) ? customerId : [customerId],\n                ...additionalRequest,\n            },\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    decline(customerId, additionalParams = {}, additionalHeaders = {}, additionalRequest = {}) {\n        const route = `/_action/${this.getApiBasePath()}/decline`;\n        return this.httpClient.post(\n            route,\n            {\n                customerIds: Array.isArray(customerId) ? customerId : [customerId],\n                ...additionalRequest,\n            },\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default CustomerGroupRegistrationApiService;\n","/**\n * @module core/service/utils/types\n */\n\nimport isObject from 'lodash/isObject';\nimport isPlainObject from 'lodash/isPlainObject';\nimport isEmpty from 'lodash/isEmpty';\nimport isRegExp from 'lodash/isRegExp';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport isDate from 'lodash/isDate';\nimport isString from 'lodash/isString';\nimport isBoolean from 'lodash/isBoolean';\nimport isEqual from 'lodash/isEqual';\nimport isNumber from 'lodash/isNumber';\n\nexport default {\n    isObject,\n    isPlainObject,\n    isEmpty,\n    isRegExp,\n    isArray,\n    isFunction,\n    isDate,\n    isString,\n    isBoolean,\n    isEqual,\n    isNumber,\n    isUndefined,\n};\n\n\n/**\n * Checks if a value is undefined\n */\nexport function isUndefined(value: unknown): boolean {\n    return typeof value === 'undefined';\n}\n\n","import ApiService from '../api.service';\n\n/**\n * @class\n * @extends ApiService\n */\nclass KnownIpsApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'known-ips') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'knownIpsService';\n    }\n\n    /**\n     * Get snippets\n     *\n     * @returns {Promise<Array<{name: String, value: String}>>}\n     */\n    getKnownIps() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get('/_admin/known-ips', {\n                headers,\n            }).then(response => {\n                return response.data.ips;\n            });\n    }\n}\n\nexport default KnownIpsApiService;\n","import objectMerge from 'lodash/merge';\nimport objectMergeWith from 'lodash/mergeWith';\nimport objectCopy from 'lodash/cloneDeep';\nimport objectGet from 'lodash/get';\nimport objectSet from 'lodash/set';\nimport objectPick from 'lodash/pick';\nimport type from 'src/core/service/utils/types.utils';\n\n/**\n * @module core/service/utils/object\n */\nexport default {\n    deepCopyObject,\n    hasOwnProperty,\n    getObjectDiff,\n    getArrayChanges,\n    merge: objectMerge,\n    mergeWith: objectMerge,\n    cloneDeep: objectCopy,\n    get: objectGet,\n    set: objectSet,\n    pick: objectPick,\n};\n\n/**\n * Lodash import for object merges.\n */\nexport const merge = objectMerge;\n\nexport const mergeWith = objectMergeWith;\n\nexport const cloneDeep = objectCopy;\n\nexport const get = objectGet;\n\nexport const set = objectSet;\n\nexport const pick = objectPick;\n\n/**\n * Shorthand method for `Object.prototype.hasOwnProperty`\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasOwnProperty(scope: any, prop: string): boolean {\n    return Object.prototype.hasOwnProperty.call(scope, prop);\n}\n\n/**\n * Deep copy an object\n */\nexport function deepCopyObject<O extends object>(copyObject: O): O {\n    return JSON.parse(JSON.stringify(copyObject)) as O;\n}\n\n/**\n * Deep merge two objects\n */\nexport function deepMergeObject<FO extends object, SO extends object>(firstObject: FO, secondObject: SO): FO & SO {\n    return mergeWith(firstObject, secondObject, (objValue, srcValue) => {\n        if (Array.isArray(objValue)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return objValue.concat(srcValue);\n        }\n        return undefined;\n    });\n}\n\n/**\n * Get a simple recursive diff of two objects.\n * Does not consider an entity schema or entity related logic.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {*}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getObjectDiff(a: any, b: any): any {\n    if (a === b) {\n        return {};\n    }\n\n    if (!type.isObject(a) || !type.isObject(b)) {\n        return b;\n    }\n\n    if (type.isDate(a) || type.isDate(b)) {\n        if (a.valueOf() === b.valueOf()) {\n            return {};\n        }\n\n        return b;\n    }\n\n    return Object.keys(b).reduce((acc, key) => {\n        if (!hasOwnProperty(a, key)) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            return { ...acc, [key]: b[key] };\n        }\n\n        // @ts-expect-error\n        if (type.isArray(b[key])) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-argument\n            const changes = getArrayChanges(a[key], b[key]);\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            if (Object.keys(changes).length > 0) {\n                // @ts-expect-error\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                return { ...acc, [key]: b[key] };\n            }\n\n            return acc;\n        }\n\n        // @ts-expect-error\n        if (type.isObject(b[key])) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const changes = getObjectDiff(a[key], b[key]);\n\n            if (!type.isObject(changes) || Object.keys(changes).length > 0) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                return { ...acc, [key]: changes };\n            }\n\n            return acc;\n        }\n\n        // @ts-expect-error\n        if (a[key] !== b[key]) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            return { ...acc, [key]: b[key] };\n        }\n\n        return acc;\n    }, {});\n}\n\n/**\n * Check if the compared array has changes.\n * Works a little bit different like the object diff because it does not return a real changeset.\n * In case of a change we will always use the complete compare array,\n * because it always holds the newest state regarding deletions, additions and the order.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getArrayChanges(a: any[], b: any[]): any[] {\n    if (a === b) {\n        return [];\n    }\n\n    if (!type.isArray(a) || !type.isArray(b)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return b;\n    }\n\n    if (a.length <= 0 && b.length <= 0) {\n        return [];\n    }\n\n    if (a.length !== b.length) {\n        return b;\n    }\n\n    if (!type.isObject(b[0])) {\n        return b.filter(item => !a.includes(item));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const changes: any[] = [];\n\n    b.forEach((item, index) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const objDiff = getObjectDiff(a[index], b[index]);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (Object.keys(objDiff).length > 0) {\n            changes.push(b[index]);\n        }\n    });\n\n    return changes;\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"order\"\n * Uses the _proxy endpoint of the admin api to connect to the store-api endpoint cart\n * @class\n * @extends ApiService\n */\nclass CheckoutStoreService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'checkout') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'checkoutStoreService';\n    }\n\n    checkout(salesChannelId, contextToken, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy-order/${salesChannelId}`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n        return this.httpClient\n            .post(route, {}, { additionalParams, headers });\n    }\n}\n\nexport default CheckoutStoreService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"config\"\n * @class\n * @extends ApiService\n */\nclass ConfigApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'config') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'configService';\n    }\n\n    /**\n     * Get information of the logged in user\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getConfig(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return new Promise((resolve) => {\n            this.httpClient\n                .get('/_info/config', {\n                    params,\n                    headers,\n                })\n                .then((response) => {\n                    resolve(ApiService.handleResponse(response));\n                });\n        });\n    }\n}\n\nexport default ConfigApiService;\n","import ApiService from '../api.service';\n\nexport default class NotificationsService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'notificationsService';\n    }\n\n    fetchNotifications(limit, latestTimestamp = null) {\n        return this.httpClient.get(\n            'notification/message',\n            {\n                params: { limit, latestTimestamp },\n                headers: this.getBasicHeaders(),\n            },\n        ).then(({ data }) => {\n            return data;\n        });\n    }\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"application\"\n * @class\n * @extends ApiService\n */\nclass SalesChannelApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sales-channel') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'salesChannelService';\n    }\n\n    /**\n     * Get the generated access key and secret access key from the API\n     *\n     * @param {Object} additionalParams\n     * @param {Object} additionalHeaders\n     * @returns {Promise<T>}\n     */\n    generateKey(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/access-key/sales-channel', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SalesChannelApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"seo-url-template\"\n * @class\n * @extends ApiService\n */\nclass SeoUrlTemplateApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'seo-url-template') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'seoUrlTemplateService';\n    }\n\n    validate(urlTemplate, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/validate`;\n\n        return this.httpClient.post(\n            apiRoute,\n            urlTemplate,\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    preview(urlTemplate, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/preview`;\n\n        return this.httpClient.post(\n            apiRoute,\n            urlTemplate,\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            if (response.status === 204) {\n                return null;\n            }\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getContext(urlTemplate, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/context`;\n\n        return this.httpClient.post(\n            apiRoute,\n            urlTemplate,\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getDefault(route, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/default/${route}`;\n\n        return this.httpClient.get(\n            apiRoute,\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default SeoUrlTemplateApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"media-folder\"\n * @class\n * @extends ApiService\n */\nclass MediaFolderApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'media-folder') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'mediaFolderService';\n    }\n\n    dissolveFolder(id) {\n        const apiRoute = `/_action/${this.getApiBasePath(id)}/dissolve`;\n        return this.httpClient.post(\n            apiRoute,\n            '',\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    moveFolder(id, targetId) {\n        if (targetId) {\n            targetId = `/${targetId}`;\n        }\n        const apiRoute = `/_action/${this.getApiBasePath(id)}/move${targetId}`;\n        return this.httpClient.post(\n            apiRoute,\n            '',\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default MediaFolderApiService;\n","/**\n * This class wraps an upload and stores information about it. For use in core/data/UploadStore\n * @class\n */\nexport default class UploadTask {\n    constructor({ uploadTag, src, targetId, fileName, extension = 'dat' }) {\n        this.running = false;\n        this.src = src;\n        this.uploadTag = uploadTag;\n        this.targetId = targetId;\n        this.fileName = fileName;\n        this.extension = extension;\n        this.error = null;\n    }\n}\n","import { fileReader, array } from 'src/core/service/util.service';\nimport UploadTask from 'src/core/helper/upload-task.helper';\nimport ApiService from '../api.service';\n\nconst UploadEvents = {\n    UPLOAD_ADDED: 'media-upload-add',\n    UPLOAD_FINISHED: 'media-upload-finish',\n    UPLOAD_FAILED: 'media-upload-fail',\n    UPLOAD_CANCELED: 'media-upload-cancel',\n};\n\n/**\n * Gateway for the API end point \"media\"\n * @class\n * @extends ApiService\n */\nclass MediaApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'media') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'mediaService';\n        this.uploads = [];\n        this.$listeners = {};\n    }\n\n    hasListeners(uploadTag) {\n        if (!uploadTag) {\n            return false;\n        }\n\n        return this.$listeners.hasOwnProperty(uploadTag);\n    }\n\n    hasDefaultListeners() {\n        return this.hasListeners('default');\n    }\n\n    addListener(uploadTag, callback) {\n        if (!this.hasListeners(uploadTag)) {\n            this.$listeners[uploadTag] = [];\n        }\n        this.$listeners[uploadTag].push(callback);\n    }\n\n    removeListener(uploadTag, callback) {\n        if (!this.hasListeners(uploadTag)) {\n            return;\n        }\n\n        if (callback === undefined) {\n            array.remove(this.$listeners[uploadTag], () => true);\n            return;\n        }\n\n        array.remove(this.$listeners[uploadTag], (listener) => {\n            return listener === callback;\n        });\n    }\n\n    removeDefaultListener(callback) {\n        this.removeListener('default', callback);\n    }\n\n    addDefaultListener(callback) {\n        this.addListener('default', callback);\n    }\n\n    getListenerForTag(uploadTag) {\n        const tagListener = this.hasListeners(uploadTag) ? this.$listeners[uploadTag] : [];\n        const defaultListeners = this.hasDefaultListeners() ? this.$listeners.default : [];\n\n        return [...tagListener, ...defaultListeners];\n    }\n\n    _createUploadEvent(action, uploadTag, payload) {\n        return { action, uploadTag, payload };\n    }\n\n    addUpload(uploadTag, uploadData) {\n        this.addUploads(uploadTag, [uploadData]);\n    }\n\n    addUploads(uploadTag, uploadCollection) {\n        const tasks = uploadCollection.map((uploadData) => {\n            return new UploadTask({ uploadTag, ...uploadData });\n        });\n\n        this.uploads.push(...tasks);\n\n        this.getListenerForTag(uploadTag).forEach((listener) => {\n            listener(this._createUploadEvent(\n                UploadEvents.UPLOAD_ADDED,\n                uploadTag,\n                { data: tasks },\n            ));\n        });\n    }\n\n    cancelUpload(uploadTag, uploadData) {\n        const tasks = new UploadTask({ uploadTag, ...uploadData });\n        this.getListenerForTag(uploadTag).forEach((listener) => {\n            listener(this._createUploadEvent(\n                UploadEvents.UPLOAD_CANCELED,\n                uploadTag,\n                { data: tasks },\n            ));\n        });\n    }\n\n    removeByTag(uploadTag) {\n        array.remove(this.uploads, (upload) => {\n            return upload.uploadTag === uploadTag;\n        });\n    }\n\n    runUploads(tag) {\n        const affectedUploads = array.remove(this.uploads, (upload) => {\n            return upload.uploadTag === tag;\n        });\n        const affectedListeners = this.getListenerForTag(tag);\n\n        if (affectedUploads.length === 0) {\n            return Promise.resolve();\n        }\n\n        const totalUploads = affectedUploads.length;\n        let successUploads = 0;\n        let failureUploads = 0;\n        return Promise.all(affectedUploads.map((task) => {\n            if (task.running) {\n                return Promise.resolve();\n            }\n\n            task.running = true;\n            return this._startUpload(task).then(() => {\n                task.running = false;\n                successUploads += 1;\n                affectedListeners.forEach((listener) => {\n                    listener(this._createUploadEvent(\n                        UploadEvents.UPLOAD_FINISHED,\n                        tag,\n                        {\n                            targetId: task.targetId,\n                            successAmount: successUploads,\n                            failureAmount: failureUploads,\n                            totalAmount: totalUploads,\n                        },\n                    ));\n                });\n            }).catch((cause) => {\n                task.error = cause;\n                task.running = false;\n                failureUploads += 1;\n                task.successAmount = successUploads;\n                task.failureAmount = failureUploads;\n                task.totalAmount = totalUploads;\n                affectedListeners.forEach((listener) => {\n                    listener(this._createUploadEvent(\n                        UploadEvents.UPLOAD_FAILED,\n                        tag,\n                        task,\n                    ));\n                });\n            });\n        }));\n    }\n\n    _startUpload(task) {\n        if (task.src instanceof File) {\n            return fileReader.readAsArrayBuffer(task.src).then((buffer) => {\n                return this.uploadMediaById(\n                    task.targetId,\n                    task.src.type,\n                    buffer,\n                    task.extension,\n                    task.fileName,\n                );\n            });\n        }\n\n        if (task.src instanceof URL) {\n            return this.uploadMediaFromUrl(\n                task.targetId,\n                task.src.href,\n                task.extension,\n                task.fileName,\n            );\n        }\n\n        return Promise.reject(new Error('src of upload must either be an instance of File or URL'));\n    }\n\n    uploadMediaById(id, mimeType, data, extension, fileName = id) {\n        const apiRoute = `/_action/${this.getApiBasePath(id)}/upload`;\n        const headers = this.getBasicHeaders({ 'Content-Type': mimeType });\n        const params = {\n            extension,\n            fileName,\n        };\n\n        return this.httpClient.post(\n            apiRoute,\n            data,\n            { params, headers },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    uploadMediaFromUrl(id, url, extension, fileName = id) {\n        const apiRoute = `/_action/${this.getApiBasePath(id)}/upload`;\n        const headers = this.getBasicHeaders({ 'Content-Type': 'application/json' });\n        const params = {\n            extension,\n            fileName,\n        };\n\n        const body = JSON.stringify({ url });\n\n        return this.httpClient.post(\n            apiRoute,\n            body,\n            { params, headers },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    renameMedia(id, fileName) {\n        const apiRoute = `/_action/${this.getApiBasePath(id)}/rename`;\n        return this.httpClient.post(\n            apiRoute,\n            JSON.stringify({\n                fileName,\n            }),\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    provideName(fileName, extension, mediaId = null) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/provide-name`;\n        return this.httpClient.get(\n            apiRoute,\n            {\n                params: { fileName, extension, mediaId },\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport { MediaApiService as default, UploadEvents };\n","import ApiService from '../api.service';\n\nconst DocumentEvents = {\n    DOCUMENT_FAILED: 'create-document-fail',\n    DOCUMENT_FINISHED: 'create-document-finished',\n};\n\n/**\n * Gateway for the API end point \"document\"\n * @class\n * @extends ApiService\n */\nclass DocumentApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'document') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'documentService';\n        this.$listener = () => ({});\n    }\n\n    createDocument(orderId,\n        documentTypeName,\n        documentConfig = {},\n        referencedDocumentId = null,\n        additionalParams = {},\n        additionalHeaders = {},\n        file = null) {\n        let route = `/_action/order/${orderId}/document/${documentTypeName}`;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        const params = {\n            config: documentConfig,\n            referenced_document_id: referencedDocumentId,\n        };\n\n        if (file) {\n            params.static = true;\n        }\n\n        let docCreated = this.httpClient\n            .post(route, params, {\n                additionalParams,\n                headers,\n            }).then((response) => {\n                if (file && response.data.documentId) {\n                    const fileName = file.name.split('.').shift();\n                    const fileExtension = file.name.split('.').pop();\n                    // eslint-disable-next-line max-len\n                    route = `/_action/document/${response.data.documentId}/upload?fileName=${documentConfig.documentNumber}_${fileName}&extension=${fileExtension}`;\n                    headers['Content-Type'] = file.type;\n                    docCreated = this.httpClient.post(route, file, {\n                        additionalParams,\n                        headers,\n                    });\n                }\n\n                this.$listener(this.createDocumentEvent(DocumentEvents.DOCUMENT_FINISHED));\n\n                return docCreated;\n            }).catch((error) => {\n                if (error.response?.data?.errors) {\n                    this.$listener(\n                        this.createDocumentEvent(DocumentEvents.DOCUMENT_FAILED, error.response.data.errors.pop()),\n                    );\n                }\n            });\n    }\n\n    getDocumentPreview(orderId, orderDeepLink, documentTypeName, params) {\n        const config = JSON.stringify(params);\n\n        return this.httpClient\n            .get(\n                `/_action/order/${orderId}/${orderDeepLink}/document/${documentTypeName}/preview`,\n                {\n                    params: { config },\n                    responseType: 'blob',\n                    headers: this.getBasicHeaders(),\n                },\n            );\n    }\n\n    getDocument(documentId, documentDeepLink, context, download = false) {\n        return this.httpClient\n            .get(\n                `/_action/document/${documentId}/${documentDeepLink}${download ? '?download=1' : ''}`,\n                {\n                    responseType: 'blob',\n                    headers: this.getBasicHeaders(),\n                },\n            );\n    }\n\n    createDocumentEvent(action, payload) {\n        return { action, payload };\n    }\n\n    setListener(callback) {\n        this.$listener = callback;\n    }\n}\n\nexport { DocumentApiService as default, DocumentEvents };\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"number-range\"\n * @class\n * @extends ApiService\n */\nclass NumberRangeApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'number-range') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'numberRangeService';\n    }\n\n    /**\n     * reserve a number range value\n     *\n     * @param {string} typeName\n     * @param {string} [salesChannelId]\n     * @param {boolean} preview [preview=false]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    reserve(typeName, salesChannelId = '', preview = false, additionalHeaders = {}) {\n        const urlSuffix = salesChannelId ? `/${salesChannelId}` : '';\n        const url = `_action/number-range/reserve/${typeName}${urlSuffix}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const params = {\n            preview: preview,\n        };\n\n        return this.httpClient\n            .get(url, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * get preview of next number range value\n     *\n     * @param {string} typeName\n     * @param {string} pattern\n     * @param {int} start\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    previewPattern(typeName, pattern, start, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const params = {\n            pattern: pattern,\n            start: start,\n        };\n\n        return this.httpClient\n            .get(`_action/number-range/preview-pattern/${typeName}`, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default NumberRangeApiService;\n","import ApiService from 'src/core/service/api.service';\n\nexport default class MarketingService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, 'marketing');\n        this.name = 'marketingService';\n    }\n\n    getActiveDiscountCampaigns() {\n        // to enable the mock you need to disable this line\n        return Promise.resolve({});\n\n        // return mock value instead of value from the SBP\n        // eslint-disable-next-line no-unreachable\n        return this._getActiveDiscountCampaignsMock();\n\n        // eslint-disable-next-line no-unreachable\n        return this.httpClient\n            .post(`/${this.getApiBasePath()}/campaigns`, {}, {\n                headers: this.basicHeaders(Shopware.Context.api),\n            });\n    }\n\n    /**\n     * This returns a mock discount campaign and should be removed\n     * in the final code.\n     * @returns {Promise<unknown>}\n     * @private\n     */\n    _getActiveDiscountCampaignsMock() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve({\n                    name: 'An example campaign',\n                    title: 'string',\n                    phase: 'comingSoonPhase',\n                    comingSoonStartDate: '2005-08-15T15:52:01',\n                    startDate: '2005-08-15T15:52:01',\n                    lastCallStartDate: '2005-08-15T15:52:01',\n                    endDate: '2025-08-15T15:52:01',\n                    components: {\n                        storeBanner: {\n                            background: {\n                                color: '#ffffff',\n                                // eslint-disable-next-line max-len\n                                image: 'https://images.unsplash.com/photo-1518695075031-b83a29bf0012?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80',\n                                position: '50% 70%',\n                            },\n                            content: {\n                                textColor: '#fff',\n                                headline: {\n                                    'de-DE': 'Super Angebot',\n                                    'en-GB': 'Amazing offer',\n                                },\n                                description: {\n                                    'de-DE': 'Günstiger geht es nicht',\n                                    'en-GB': 'It will not get cheaper',\n                                },\n                                cta: {\n                                    category: 'GitHub',\n                                    text: {\n                                        'de-DE': 'Zeige GitHub',\n                                        'en-GB': 'Show GitHub',\n                                    },\n                                },\n                            },\n                        },\n                        dashboardBanner: {\n                            background: {\n                                color: '#ffffff',\n                                // eslint-disable-next-line max-len\n                                image: 'https://images.unsplash.com/photo-1493606278519-11aa9f86e40a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80',\n                                position: '100% 75%',\n                            },\n                            leftImage: {\n                                src: {\n                                    // eslint-disable-next-line max-len\n                                    'en-GB': 'https://images.unsplash.com/photo-1587049016823-69ef9d68bd44?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n                                    // eslint-disable-next-line max-len\n                                    'de-DE': 'https://images.unsplash.com/photo-1527866959252-deab85ef7d1b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80',\n                                },\n                                bgColor: '#ffffff',\n                                hideInSmallViewports: false,\n                                srcset: {\n                                    // eslint-disable-next-line max-len\n                                    'en-GB': 'https://images.unsplash.com/photo-1587049016823-69ef9d68bd44?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80 634w',\n                                    // eslint-disable-next-line max-len\n                                    'de-DE': 'https://images.unsplash.com/photo-1527866959252-deab85ef7d1b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80 1050w',\n                                },\n                            },\n                            content: {\n                                textColor: '#171717',\n                                linkColor: '#26af44',\n                                headline: {\n                                    'de-DE': 'Tolle Kampagne',\n                                    'en-GB': 'Amazing campaign',\n                                },\n                                description: {\n                                    text: {\n                                        // eslint-disable-next-line max-len\n                                        'de-DE': 'Es ist {goToShopwareHomePage}, öffne den {goToExtensionStoreAndOpenCategory} oder gehe zum {goToExtensionStore}',\n                                        // eslint-disable-next-line max-len\n                                        'en-GB': 'Its {goToShopwareHomePage}, open {goToExtensionStoreAndOpenCategory} or go to the {goToExtensionStore}',\n                                    },\n                                    inlineActions: [\n                                        {\n                                            placeholder: 'goToExtensionStore',\n                                            text: {\n                                                'de-DE': 'Erweiterungs Store',\n                                                'en-GB': 'Extension Store',\n                                            },\n                                            route: 'sw.extension.store.index.extensions',\n                                        },\n                                        {\n                                            placeholder: 'goToExtensionStoreAndOpenCategory',\n                                            text: {\n                                                'de-DE': 'Sommer Sale',\n                                                'en-GB': 'Summer Sale',\n                                            },\n                                            execution: {\n                                                method: 'linkToExtensionStoreAndSelectCategory',\n                                                arguments: ['category', 'summerSale'],\n                                            },\n                                        },\n                                        {\n                                            placeholder: 'goToShopwareHomePage',\n                                            text: {\n                                                'de-DE': 'Shopware',\n                                                'en-GB': 'Shopware',\n                                            },\n                                            externalLink: {\n                                                'de-DE': 'https://www.shopware.de',\n                                                'en-GB': 'https://www.shopware.com',\n                                            },\n                                        },\n                                    ],\n                                },\n                                label: {\n                                    bgColor: '#ac2c2c',\n                                    textColor: '#ffffff',\n                                    text: {\n                                        'de-DE': 'Wichtig',\n                                        'en-GB': 'Important',\n                                    },\n                                },\n                                mainAction: {\n                                    buttonVariant: 'ghost',\n                                    bannerIsClickable: true,\n                                    cta: {\n                                        'de-DE': 'Kampagne öffnen',\n                                        'en-GB': 'Open campaign',\n                                    },\n                                    execution: {\n                                        method: 'linkToExtensionStoreAndSelectCategory',\n                                        arguments: ['category', 'summerSale'],\n                                    },\n                                },\n                            },\n                        },\n                    },\n                });\n            }, 1500);\n        });\n    }\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"order/document\"\n * @class\n * @extends ApiService\n */\nexport default class OrderDocumentApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'order/document') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'orderDocumentApiService';\n    }\n\n    create(payload, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient.post(`/_admin/${this.apiEndpoint}/create`, payload, {\n            additionalParams,\n            headers: this.getBasicHeaders(additionalHeaders),\n        });\n    }\n}\n","import ApiService from '../api.service';\n\nexport default class AppCmsBlocksService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'appCmsBlocks';\n    }\n\n    /**\n     * Fetches CMS blocks which are provided by third-party applications.\n     * @returns {Promise<Object>}\n     */\n    fetchAppBlocks() {\n        return this.httpClient.get(\n            'app-system/cms/blocks',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then(({ data }) => {\n            return data.blocks;\n        });\n    }\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"sales-channel-context\"\n * Uses the _proxy endpoint of the admin api to connect to the store-api endpoint cart\n * @class\n * @extends ApiService\n */\nclass StoreContextService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sales-channel-context') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'contextStoreService';\n    }\n\n    updateCustomerContext(\n        customerId,\n        salesChannelId,\n        contextToken,\n        additionalParams = {},\n        additionalHeaders = {},\n        permissions = ['allowProductPriceOverwrites'],\n    ) {\n        const route = '_proxy/switch-customer';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient\n            .patch(\n                route,\n                { customerId: customerId, salesChannelId: salesChannelId, permissions: permissions },\n                { additionalParams, headers },\n            );\n    }\n\n    updateContext(\n        context,\n        salesChannelId,\n        contextToken,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/context`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient\n            .patch(\n                route,\n                context,\n                { additionalParams, headers },\n            );\n    }\n\n    getContext(salesChannelId, source, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy/store-api/${salesChannelId}/${source}`;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(route, {}, { additionalParams, headers });\n    }\n}\n\nexport default StoreContextService;\n","// @ts-expect-error\nimport MD5 from 'md5-es';\n\n/**\n * @module core/service/utils/format\n */\nexport default {\n    currency,\n    date,\n    dateWithUserTimezone,\n    md5,\n    fileSize,\n    toISODate,\n};\n\ninterface CurrencyOptions extends Intl.NumberFormatOptions {\n    language?: string\n}\n\n/**\n * Converts a Number to a formatted currency. Especially helpful for template filters.\n * Defaults to the currencyISOCode of the standard currency and locale of the user.\n *\n * @param {Number} val - Number which should be formatted as a currency.\n * @param {String} sign - Currency sign which should be displayed\n * @param {Number} [decimalPlaces] - Number of decimal places\n * @param {Object} additionalOptions\n * @returns {string} Formatted string\n */\nexport function currency(val: number, sign: string, decimalPlaces: number, additionalOptions: CurrencyOptions = {}): string {\n    const decimalOpts = decimalPlaces !== undefined ? {\n        minimumFractionDigits: decimalPlaces,\n        maximumFractionDigits: decimalPlaces,\n    } : {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 20,\n    };\n\n    const opts = {\n        style: 'currency',\n        currency: sign || Shopware.Context.app.systemCurrencyISOCode as string,\n        ...decimalOpts,\n        ...additionalOptions,\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n    return val.toLocaleString((additionalOptions.language ?? Shopware.State.get('session').currentLocale) ?? 'en-US', opts);\n}\n\n/**\n * Formats a Date object to a localized string\n *\n * @param {string} val\n * @param {Object} options\n * @returns {string}\n */\nexport function date(val: string, options: Intl.DateTimeFormatOptions = {}): string {\n    // should return an empty string when no date is given\n    if (!val) {\n        return '';\n    }\n\n    const givenDate = new Date(val);\n\n    // check if given date value is valid\n    // @ts-expect-error\n    // eslint-disable-next-line\n    if (isNaN(givenDate)) {\n        return '';\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    const lastKnownLang = Shopware.Application.getContainer('factory').locale.getLastKnownLocale() as string;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const userTimeZone = (Shopware?.State?.get('session')?.currentUser?.timeZone as string) ?? 'UTC';\n\n    const dateTimeFormatter = new Intl.DateTimeFormat(lastKnownLang, {\n        timeZone: userTimeZone,\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        ...options,\n    });\n\n    return dateTimeFormatter.format(givenDate);\n}\n\n/**\n * Formats a Date object to the currently selected timezone.\n *\n * @param {Date} dateObj\n * @returns {Date}\n */\nexport function dateWithUserTimezone(dateObj: Date = new Date()) : Date {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const userTimeZone = (Shopware.State.get('session').currentUser?.timeZone as string) ?? 'UTC';\n\n    // Language and options are set in order to re-create the date object\n    const localizedDate = dateObj.toLocaleDateString('en-GB', {\n        timeZone: userTimeZone,\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n    });\n\n    return new Date(localizedDate);\n}\n\n/**\n * Generates a md5 hash of the given value.\n *\n * @param {String} value\n * @return {String}\n */\nexport function md5(value: string): string {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    return MD5.hash(value) as string;\n}\n\n/**\n * Formats a number of bytes to a string with a unit\n */\nexport function fileSize(bytes: number, locale = 'de-DE'): string {\n    const denominator = 1024;\n    const units = ['B', 'KB', 'MB', 'GB'];\n\n    let result = Number.parseInt(String(bytes), 10);\n    let i = 0;\n\n    for (; i < units.length; i += 1) {\n        const currentResult = result / denominator;\n\n        if (currentResult < 0.9) {\n            break;\n        }\n\n        result = currentResult;\n    }\n\n    // @ts-expect-error\n    return `${result.toFixed(2).toLocaleString(locale)}${units[i]}`;\n}\n\nexport function toISODate(dateObj: Date, useTime = true): string {\n    const isoDate = dateObj.toISOString();\n\n    return useTime ? isoDate : isoDate.split('T')[0];\n}\n\n","/**\n * @module core/service/utils/dom\n */\n\nimport { warn } from './debug.utils';\n\n/**\n * Returns the scrollbar height of an HTML element.\n */\nfunction getScrollbarHeight(element: HTMLElement): number {\n    if (!(element instanceof HTMLElement)) {\n        warn('DOM Utilities', 'The provided element needs to be an instance of \"HTMLElement\".', element);\n        return 0;\n    }\n    return (element.offsetHeight - element.clientHeight);\n}\n\n/**\n * Returns the scrollbar width of an HTML element.\n */\nfunction getScrollbarWidth(element: HTMLElement): number {\n    if (!(element instanceof HTMLElement)) {\n        warn('DOM Utilities', 'The provided element needs to be an instance of \"HTMLElement\".', element);\n        return 0;\n    }\n    return (element.offsetWidth - element.clientWidth);\n}\n\n/**\n * uses the browser's copy function to copy a string\n */\nfunction copyToClipboard(stringToCopy: string): void {\n    const tempTextArea = document.createElement('textarea');\n    tempTextArea.value = stringToCopy;\n    document.body.appendChild(tempTextArea);\n    tempTextArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempTextArea);\n}\n\nexport default {\n    getScrollbarHeight,\n    getScrollbarWidth,\n    copyToClipboard,\n};\n","/**\n * @module core/service/utils/file-reader\n */\n\nfunction registerPromiseOnFileReader(\n    fileReader: FileReader,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    resolve: (value?: any) => void,\n    reject: (reason?: unknown) => void,\n):void {\n    fileReader.onerror = ():void => {\n        fileReader.abort();\n        reject(new DOMException('Problem parsing file.'));\n    };\n\n    fileReader.onload = ():void => {\n        resolve(fileReader.result);\n    };\n}\n\nfunction splitFileNameAndExtension(completeFileName: string): {extension: string | undefined, fileName: string} {\n    const fileParts = completeFileName.split('.');\n\n    // no dot in filename\n    if (fileParts.length === 1) {\n        return {\n            extension: '',\n            fileName: completeFileName,\n        };\n    }\n\n    // hidden file without extension\n    if (fileParts.length === 2 && !fileParts[0]) {\n        return {\n            extension: '',\n            fileName: completeFileName,\n        };\n    }\n\n    return {\n        extension: fileParts.pop(),\n        fileName: fileParts.join('.'),\n    };\n}\n\nfunction readFileAsArrayBuffer<FILE = unknown>(inputFile: Blob): Promise<FILE> {\n    const fReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        registerPromiseOnFileReader(fReader, resolve, reject);\n\n        fReader.readAsArrayBuffer(inputFile);\n    });\n}\n\nfunction readFileAsDataURL<FILE = unknown>(inputFile: Blob): Promise<FILE> {\n    const fReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        registerPromiseOnFileReader(fReader, resolve, reject);\n\n        fReader.readAsDataURL(inputFile);\n    });\n}\n\nfunction readFileAsText<FILE = unknown>(inputFile: Blob): Promise<FILE> {\n    const fReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        registerPromiseOnFileReader(fReader, resolve, reject);\n\n        fReader.readAsText(inputFile);\n    });\n}\n\nfunction getNameAndExtensionFromFile(fileHandle: File): {extension: string | undefined, fileName: string} {\n    return splitFileNameAndExtension(fileHandle.name);\n}\n\nfunction getNameAndExtensionFromUrl(urlObject: URL): {extension: string | undefined, fileName: string} {\n    let ref = urlObject.href.split('/').pop();\n\n    if (!ref) {\n        throw new Error('Invalid URL');\n    }\n\n    const indexOfQueryIndicator = ref.indexOf('?');\n    if (indexOfQueryIndicator > 0) {\n        ref = ref.substring(0, indexOfQueryIndicator);\n    }\n\n    ref = decodeURI(ref);\n\n    return splitFileNameAndExtension(ref);\n}\n\nexport default {\n    readFileAsArrayBuffer,\n    readFileAsDataURL,\n    readFileAsText,\n    getNameAndExtensionFromFile,\n    getNameAndExtensionFromUrl,\n};\n","\n/**\n * @module core/service/utils/sort\n */\nexport default {\n    afterSort,\n};\n\n\ninterface SortElements {\n    id: string,\n    data: {\n        [key: string]: unknown\n    }\n}\n\n/**\n * Sorts the elements by their after id property chain\n *\n * @param {array} elements\n * @param {string} property\n * @returns {array}\n */\nfunction afterSort(elements: SortElements[], property = 'afterId'): SortElements[] {\n    if (elements.length === 0) {\n        return elements;\n    }\n\n    // pre-sort elements to pull elements without an after id parent to the front\n    elements.sort((a, b) => {\n        if (a.data[property] === b.data[property] && a.data[property] === null) {\n            return 0;\n        }\n\n        if (b.data[property] === null) {\n            return 1;\n        }\n\n        if (a.data[property] === null) {\n            return -1;\n        }\n\n        return 0;\n    });\n\n    // add first element to sorted list as this will be the absolute first item\n    const firstItem = elements.shift();\n    const sortedElements = [firstItem];\n\n    let lastId = firstItem && firstItem.id;\n\n    while (elements.length > 0) {\n        let loop = true;\n        /* eslint-disable no-loop-func */\n        elements.forEach((leaf, key) => {\n            if (leaf.data[property] !== lastId) {\n                return;\n            }\n\n            // find the next element in the chain and set it as the new parent\n            sortedElements.push(leaf);\n            lastId = leaf.id;\n\n            elements.splice(key, 1);\n            loop = false;\n        });\n        /* eslint-enable no-loop-func */\n\n        // chain is broken, continue with next element as parent\n        if (loop) {\n            const nextItem = elements.shift();\n\n            sortedElements.push(nextItem);\n\n            if (!elements.length) {\n                break;\n            }\n\n            lastId = nextItem && nextItem.data[property] as string;\n        }\n    }\n\n    return sortedElements as SortElements[];\n}\n","/**\n * @module core/service/utils\n */\nimport throttle from 'lodash/throttle';\nimport flow from 'lodash/flow';\nimport debounce from 'lodash/debounce';\nimport flattenDeep from 'lodash/flattenDeep';\nimport uuidV4 from 'uuid/v4';\nimport remove from 'lodash/remove';\nimport slice from 'lodash/slice';\nimport uniqBy from 'lodash/uniqBy';\nimport chunk from 'lodash/chunk';\nimport intersectionBy from 'lodash/intersectionBy';\n\nimport {\n    deepCopyObject,\n    hasOwnProperty,\n    getObjectDiff,\n    getArrayChanges,\n    cloneDeep,\n    merge,\n    mergeWith,\n    deepMergeObject,\n    get,\n    set,\n    pick,\n} from './utils/object.utils';\nimport { warn, error } from './utils/debug.utils';\nimport { currency, date, dateWithUserTimezone, fileSize, md5, toISODate } from './utils/format.utils';\nimport domUtils from './utils/dom.utils';\nimport stringUtils from './utils/string.utils';\nimport typesUtils, { isUndefined } from './utils/types.utils';\nimport fileReaderUtils from './utils/file-reader.utils';\nimport sortUtils from './utils/sort.utils';\n\nexport const object = {\n    deepCopyObject: deepCopyObject,\n    hasOwnProperty: hasOwnProperty,\n    getObjectDiff: getObjectDiff,\n    getArrayChanges: getArrayChanges,\n    cloneDeep: cloneDeep,\n    merge: merge,\n    mergeWith: mergeWith,\n    deepMergeObject: deepMergeObject,\n    get: get,\n    set: set,\n    pick: pick,\n};\n\nexport const debug = {\n    warn: warn,\n    error: error,\n};\n\nexport const format = {\n    currency: currency,\n    date: date,\n    dateWithUserTimezone: dateWithUserTimezone,\n    fileSize: fileSize,\n    md5: md5,\n    toISODate: toISODate,\n};\n\nexport const dom = {\n    getScrollbarHeight: domUtils.getScrollbarHeight,\n    getScrollbarWidth: domUtils.getScrollbarWidth,\n    copyToClipboard: domUtils.copyToClipboard,\n};\n\nexport const string = {\n    capitalizeString: stringUtils.capitalizeString,\n    camelCase: stringUtils.camelCase,\n    upperFirst: stringUtils.upperFirst,\n    kebabCase: stringUtils.kebabCase,\n    snakeCase: stringUtils.snakeCase,\n    md5: md5,\n    isEmptyOrSpaces: stringUtils.isEmptyOrSpaces,\n    isUrl: stringUtils.isUrl,\n    isValidIp: stringUtils.isValidIp,\n};\n\nexport const types = {\n    isObject: typesUtils.isObject,\n    isPlainObject: typesUtils.isPlainObject,\n    isEmpty: typesUtils.isEmpty,\n    isRegExp: typesUtils.isRegExp,\n    isArray: typesUtils.isArray,\n    isFunction: typesUtils.isFunction,\n    isDate: typesUtils.isDate,\n    isString: typesUtils.isString,\n    isBoolean: typesUtils.isBoolean,\n    isEqual: typesUtils.isEqual,\n    isNumber: typesUtils.isNumber,\n    isUndefined: isUndefined,\n};\n\nexport const fileReader = {\n    readAsArrayBuffer: fileReaderUtils.readFileAsArrayBuffer,\n    readAsDataURL: fileReaderUtils.readFileAsDataURL,\n    readAsText: fileReaderUtils.readFileAsText,\n    getNameAndExtensionFromFile: fileReaderUtils.getNameAndExtensionFromFile,\n    getNameAndExtensionFromUrl: fileReaderUtils.getNameAndExtensionFromUrl,\n};\n\nexport const sort = {\n    afterSort: sortUtils.afterSort,\n};\n\nexport const array = {\n    flattenDeep: flattenDeep,\n    remove: remove,\n    slice: slice,\n    uniqBy: uniqBy,\n    chunk: chunk,\n    intersectionBy: intersectionBy,\n};\n\nexport default {\n    createId,\n    throttle,\n    debounce,\n    flow,\n    get,\n    object,\n    debug,\n    format,\n    dom,\n    string,\n    types,\n    fileReader,\n    sort,\n    array,\n};\n\n/**\n * Returns a uuid string in hex format.\n *\n * @returns {String}\n */\nfunction createId(): string {\n    // eslint-disable-next-line max-len\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-member-access\n    return uuidV4().replace(/-/g, '');\n}\n","/**\n * @module core/feature-config\n */\n\n/**\n * A static registry containing a list of all registered flags and the associated activation state\n */\nexport default class Feature {\n    static flags: { [featureName: string]: boolean } = {};\n\n    static init(flagConfig: { [featureName: string]: boolean }): void {\n        Object.entries(flagConfig).forEach(([flagName, isActive]) => {\n            this.flags[flagName] = isActive;\n        });\n    }\n\n    static getAll(): { [featureName: string]: boolean } {\n        return this.flags;\n    }\n\n    static isActive(flagName:string):boolean {\n        if (!this.flags.hasOwnProperty(flagName)) {\n            // if not set, its false\n            return false;\n        }\n\n        return this.flags[flagName];\n    }\n}\n","import { deepCopyObject } from 'src/core/service/utils/object.utils';\nimport utils from 'src/core/service/util.service';\nimport ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"order\"\n * @class\n * @extends ApiService\n */\nclass OrderApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'order') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'orderService';\n    }\n\n    recalculateOrder(orderId, versionId, additionalParams = {}, additionalHeaders = {}) {\n        const route = `/_action/order/${orderId}/recalculate`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        return this.httpClient\n            .post(route, {}, { additionalParams, headers });\n    }\n\n    addProductToOrder(orderId, versionId, productId, quantity, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/product/${productId}`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        return this.httpClient\n            .post(\n                route,\n                { quantity: quantity },\n                { additionalParams, headers },\n            );\n    }\n\n    addCustomLineItemToOrder(orderId, versionId, item, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/lineItem`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        const dummyPrice = deepCopyObject(item.priceDefinition);\n        dummyPrice.taxRules = item.priceDefinition.taxRules;\n        dummyPrice.isCalculated = true;\n\n        return this.httpClient\n            .post(route,\n                JSON.stringify(\n                    { label: item.label,\n                        quantity: item.quantity,\n                        type: item.type,\n                        identifier: utils.createId(),\n                        description: item.description,\n                        priceDefinition: dummyPrice },\n                ), {\n                    additionalParams,\n                    headers,\n                });\n    }\n\n    addCreditItemToOrder(orderId, versionId, item, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/creditItem`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        const dummyPrice = deepCopyObject(item.priceDefinition);\n        return this.httpClient\n            .post(route,\n                JSON.stringify(\n                    { label: item.label,\n                        quantity: item.quantity,\n                        type: item.type,\n                        identifier: utils.createId(),\n                        description: item.description,\n                        priceDefinition: dummyPrice },\n                ), {\n                    additionalParams,\n                    headers,\n                });\n    }\n\n    addPromotionToOrder(orderId, versionId, code, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/promotion-item`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        return this.httpClient\n            .post(route,\n                JSON.stringify(\n                    { code },\n                ), {\n                    additionalParams,\n                    headers,\n                });\n    }\n\n    toggleAutomaticPromotions(orderId, versionId, skipAutomaticPromotions, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/toggleAutomaticPromotions`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        return this.httpClient\n            .post(route,\n                JSON.stringify(\n                    { skipAutomaticPromotions },\n                ), {\n                    additionalParams,\n                    headers,\n                });\n    }\n\n    changeOrderAddress(orderAddressId, customerAddressId, additionalParams, additionalHeaders) {\n        const route = `_action/order-address/${orderAddressId}/customer-address/${customerAddressId}`;\n        const params = Object.assign({ }, additionalParams);\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(route, {}, {\n                params,\n                headers,\n            });\n    }\n}\n\nexport default OrderApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"check-email-unique\"\n * @class\n * @extends ApiService\n */\nclass UserValidationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'check-email-unique') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userValidationService';\n    }\n\n    checkUserEmail({ email, id }, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const payload = {\n            email,\n            id,\n        };\n\n        return this.httpClient\n            .post(`/_action/user/${this.apiEndpoint}`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    checkUserUsername({ username, id }, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const payload = {\n            username,\n            id,\n        };\n\n        return this.httpClient\n            .post('/_action/user/check-username-unique', payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default UserValidationApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"order/state-machine\"\n * @class\n * @extends ApiService\n */\nclass OrderStateMachineApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'order') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'orderStateMachineService';\n    }\n\n    transitionOrderState(orderId, actionName, mediaIds = {}, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/state/${actionName}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(route, mediaIds, {\n                additionalParams,\n                headers,\n            });\n    }\n\n    transitionOrderTransactionState(\n        orderTransactionId,\n        actionName,\n        mediaIds = {},\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_action/order_transaction/${orderTransactionId}/state/${actionName}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(route, mediaIds, {\n                additionalParams,\n                headers,\n            });\n    }\n\n    transitionOrderDeliveryState(\n        orderDeliveryStateId,\n        actionName,\n        mediaIds = {},\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_action/order_delivery/${orderDeliveryStateId}/state/${actionName}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(route, mediaIds, {\n                additionalParams,\n                headers,\n            });\n    }\n}\n\nexport default OrderStateMachineApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"scheduled-task\"\n * @class\n * @extends ApiService\n */\nclass ScheduledTaskApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'scheduled-task') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'scheduledTaskService';\n    }\n\n    /**\n     * Run all due scheduled tasks\n     *\n     * @returns {Promise<T>}\n     */\n    runTasks() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/run`, null, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get the minimum run interval of all tasks\n     *\n     * @returns {Promise<T>}\n     */\n    getMinRunInterval() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/min-run-interval`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default ScheduledTaskApiService;\n","import type { AxiosInstance, AxiosResponse } from 'axios';\nimport ApiService from '../api.service';\nimport type { LoginService } from '../login.service';\n\nexport type action = {\n    url: string,\n    entity: string,\n    action: string,\n    appName: string,\n};\n\nexport default class ExtensionSdkService extends ApiService {\n    constructor(httpClient: AxiosInstance, loginService: LoginService) {\n        super(httpClient, loginService, 'extension-sdk', 'application/json');\n\n        this.name = 'extensionSdkService';\n    }\n\n    /**\n     * @internal Only to be used by the extension sdk\n     */\n    runAction(action: action, entityIdList: string[]): Promise<unknown> {\n        return this.httpClient.post(\n            `/_action/${this.getApiBasePath()}/run-action`,\n            {\n                ...action,\n                ids: entityIdList,\n            },\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response: AxiosResponse<unknown>) => {\n            ApiService.handleResponse(response);\n        });\n    }\n}\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"update\"\n * @class\n * @extends ApiService\n */\nclass UpdateService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'update') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'updateService';\n    }\n\n    checkForUpdates() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/check`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    checkRequirements() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/check-requirements`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    pluginCompatibility() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/plugin-compatibility`, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    downloadUpdate(offset) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/download-latest-update?offset=${offset}`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    deactivatePlugins(offset, pluginDeactivationStrategy = '') {\n        const headers = this.getBasicHeaders();\n        const actionUrlPart = `/_action/${this.getApiBasePath()}`;\n        const offsetParam = `offset=${offset}&deactivationFilter=${pluginDeactivationStrategy}`;\n\n        return this.httpClient\n            .get(`${actionUrlPart}/deactivate-plugins?${offsetParam}`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    unpackUpdate(offset) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(\n                `/_action/${this.getApiBasePath()}/unpack?offset=${offset}`,\n                { headers },\n            ).then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getBasicParams(additionalParams = {}) {\n        const basicParams = {\n            language: localStorage.getItem('sw-admin-locale'),\n        };\n\n        return Object.assign({}, basicParams, additionalParams);\n    }\n}\n\nexport default UpdateService;\n","/**\n * @module core/service/utils/string\n */\nimport capitalizeString from 'lodash/capitalize';\nimport camelCase from 'lodash/camelCase';\nimport kebabCase from 'lodash/kebabCase';\nimport snakeCase from 'lodash/snakeCase';\nimport upperFirst from 'lodash/upperFirst';\n\nexport default {\n    capitalizeString,\n    upperFirst,\n    camelCase,\n    kebabCase,\n    snakeCase,\n    isEmptyOrSpaces,\n    isUrl,\n    isValidIp,\n};\n\n/**\n * Gets if the content of the string is really empty.\n * This does also remove any whitespaces that might\n * exist in the text.\n */\nfunction isEmptyOrSpaces(value: string): boolean {\n    return (!value || value.length <= 0) ? true : value.trim().length <= 0;\n}\n\n/**\n * Checks if the provided value is a URL\n */\nfunction isUrl(value: string): boolean {\n    try {\n        return Boolean(new URL(value));\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isValidIp(ip: string): boolean {\n    // https://regex101.com/r/qHTUIe/1\n    // eslint-disable-next-line max-len\n    return RegExp('((^\\\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\\\s*$)|(^\\\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))(%.+)?\\\\s*$))').test(ip);\n}\n","import Criteria from '@shopware-ag/admin-extension-sdk/es/data/Criteria';\n\nexport default Criteria;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"state-machine\"\n * @class\n * @extends ApiService\n */\nclass StateMachineApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'state-machine') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'stateMachineService';\n    }\n\n    /**\n     * @param {string} stateFieldName (optional) Specify a different property of the base entity\n     *   that holds the state id (e.g. `stateId`)\n     */\n    getState(\n        entity,\n        entityId,\n        additionalParams = {},\n        additionalHeaders = {},\n        stateFieldName = null,\n        additionalQueryParams = {},\n    ) {\n        const query = ApiService.makeQueryParams({\n            stateFieldName,\n            ...additionalQueryParams,\n        });\n        const route = `_action/state-machine/${entity}/${entityId}/state${query}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(route, {\n                additionalParams,\n                headers,\n            });\n    }\n\n    /**\n     * @param {string} stateFieldName (optional) Specify a different property of the base entity\n     *   that holds the state id (e.g. `stateId`)\n     */\n    transitionState(\n        entity,\n        entityId,\n        actionName,\n        additionalParams = {},\n        additionalHeaders = {},\n        stateFieldName = null,\n        additionalQueryParams = {},\n    ) {\n        const query = ApiService.makeQueryParams({\n            stateFieldName,\n            ...additionalQueryParams,\n        });\n        const route = `_action/state-machine/${entity}/${entityId}/state/${actionName}${query}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(route, {}, {\n                additionalParams,\n                headers,\n            });\n    }\n}\n\nexport default StateMachineApiService;\n","export default {\n    warn,\n    error,\n};\n\n/**\n * General logging function which provides a unified style of log messages for developers. Please keep in mind the log\n * messages will be displayed in the developer console when they're running the application in development mode.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function warn(name = 'Core', ...message: any[]): void {\n    if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n        message.unshift(`[${name}]`);\n        // @ts-expect-error\n        console.warn.apply(this, message);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function error(name = 'Core', ...message: any[]): void {\n    if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n        message.unshift(`[${name}]`);\n        // @ts-expect-error\n        console.error.apply(this, message);\n    }\n}\n","import ApiService from '../api.service';\n\n\nclass SystemConfigApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'system-config') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'systemConfigApiService';\n    }\n\n    checkConfig(domain, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient\n            .get('_action/system-config/check', {\n                params: { domain, ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders),\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getConfig(domain, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient\n            .get('_action/system-config/schema', {\n                params: { domain, ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders),\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getValues(domain, salesChannelId = null, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient\n            .get('_action/system-config', {\n                params: { domain, salesChannelId, ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders),\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            }).then((data) => {\n                // If config is empty we will receive an empty array.\n                // We have to return an empty object instead because of reactivity\n                return Array.isArray(data) ? {} : data;\n            });\n    }\n\n    saveValues(values, salesChannelId = null, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient\n            .post('_action/system-config',\n                values,\n                {\n                    params: { salesChannelId, ...additionalParams },\n                    headers: this.getBasicHeaders(additionalHeaders),\n                })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    batchSave(values, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient\n            .post('_action/system-config/batch',\n                values,\n                {\n                    params: { ...additionalParams },\n                    headers: this.getBasicHeaders(additionalHeaders),\n                })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SystemConfigApiService;\n","/**\n * Refresh token helper which manages a cache of requests to retry them after the token got refreshed.\n * @class\n */\nclass RefreshTokenHelper {\n    constructor() {\n        this._isRefreshing = false;\n        this._subscribers = [];\n        this._errorSubscribers = [];\n        // eslint-disable-next-line inclusive-language/use-inclusive-words\n        this._whitelist = [\n            '/oauth/token',\n        ];\n    }\n\n    /**\n     * Subscribe a new callback to the cache queue\n     *\n     * @param {Function} [callback = () => {}]\n     * @param {Function} [errorCallback = () => {}]\n     */\n    subscribe(callback = () => {}, errorCallback = () => {}) {\n        this._subscribers.push(callback);\n        this._errorSubscribers.push(errorCallback);\n    }\n\n    /**\n     * Event handler which will be fired when the token got refresh. It iterates over the registered\n     * subscribers and fires the callbacks with the new token.\n     *\n     * @param {String} token - Renewed access token\n     */\n    onRefreshToken(token) {\n        this._subscribers = this._subscribers.reduce((accumulator, callback) => {\n            callback.call(null, token);\n            return accumulator;\n        }, []);\n        this._errorSubscribers = [];\n    }\n\n    /**\n     * Event handler which will be fired when the refresh token couldn't be fetched from the API\n     *\n     * @param {Error} err\n     */\n    onRefreshTokenFailed(err) {\n        this._errorSubscribers = this._errorSubscribers.reduce((accumulator, callback) => {\n            callback.call(null, err);\n            return accumulator;\n        }, []);\n        this._subscribers = [];\n    }\n\n    /**\n     * Fires the refresh token request and renews the bearer authentication in the login service.\n     *\n     * @returns {Promise<String>}\n     */\n    fireRefreshTokenRequest() {\n        const loginService = Shopware.Service('loginService');\n        this.isRefreshing = true;\n\n        return loginService.refreshToken().then((newToken) => {\n            this.onRefreshToken(newToken);\n        }).finally(() => {\n            this.isRefreshing = false;\n        }).catch(() => {\n            loginService.logout();\n            this.onRefreshTokenFailed();\n            return Promise.reject();\n        });\n    }\n\n    // eslint-disable-next-line inclusive-language/use-inclusive-words\n    get whitelist() {\n        // eslint-disable-next-line inclusive-language/use-inclusive-words\n        return this._whitelist;\n    }\n\n    // eslint-disable-next-line inclusive-language/use-inclusive-words\n    set whitelist(urls) {\n        // eslint-disable-next-line inclusive-language/use-inclusive-words\n        this._whitelists = urls;\n    }\n\n    get isRefreshing() {\n        return this._isRefreshing;\n    }\n\n    set isRefreshing(value) {\n        this._isRefreshing = value;\n    }\n}\n\nconst refreshTokenHelper = new RefreshTokenHelper();\n\nexport default function getRefreshTokenHelper() {\n    return refreshTokenHelper;\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"seo-url\"\n * @class\n * @extends ApiService\n */\nclass SeoUrlApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'seo-url') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'seoUrlService';\n    }\n\n    updateCanonicalUrl(seoUrl, languageId, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/canonical`;\n\n        Object.assign(additionalHeaders, { 'sw-language-id': languageId });\n\n        return this.httpClient.patch(\n            apiRoute,\n            seoUrl,\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    createCustomUrl(routeName, urls, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/create-custom-url`;\n\n        return this.httpClient.post(\n            apiRoute,\n            { routeName, urls },\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default SeoUrlApiService;\n","import ApiService from '../api.service';\n\n/**\n * @class\n * @extends ApiService\n */\nclass FlowActionApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'actions') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'flowActionService';\n    }\n\n    /**\n     * Get all actions\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getActions(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_info/flow-actions.json', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default FlowActionApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"calculate-price\"\n * @class\n * @extends ApiService\n */\nclass CalculatePriceApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'calculate-price') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'calculate-price';\n    }\n\n    calculatePrice({ taxId, price, output = 'gross', currencyId }, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const payload = {\n            taxId,\n            price,\n            output,\n            currencyId,\n        };\n\n        return this.httpClient\n            .post(`/_action/${this.apiEndpoint}`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    calculatePrices(taxId, prices, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const payload = {\n            taxId,\n            prices,\n        };\n\n        return this.httpClient\n            .post('/_action/calculate-prices', payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response.data);\n            });\n    }\n}\n\nexport default CalculatePriceApiService;\n","class CacheApiService {\n    constructor(httpClient, loginService) {\n        this.httpClient = httpClient;\n        this.loginService = loginService;\n        this.name = 'cacheApiService';\n    }\n\n    info() {\n        const headers = this.getHeaders();\n        return this.httpClient.get('/_action/cache_info', { headers });\n    }\n\n    index(skip = []) {\n        const headers = this.getHeaders();\n        return this.httpClient.post('/_action/index', { skip }, { headers });\n    }\n\n    clear() {\n        const headers = this.getHeaders();\n        return this.httpClient.delete('/_action/cache', { headers }).then((response) => {\n            if (response.status === 204) {\n                return this.httpClient.delete('/_action/container_cache', { headers });\n            }\n            return Promise.reject();\n        });\n    }\n\n    cleanupOldCaches() {\n        const headers = this.getHeaders();\n        return this.httpClient.delete('/_action/cleanup', { headers });\n    }\n\n    clearAndWarmup() {\n        const headers = this.getHeaders();\n        return this.httpClient.delete('/_action/cache_warmup', { headers });\n    }\n\n    getHeaders() {\n        return {\n            Accept: 'application/json',\n            Authorization: `Bearer ${this.loginService.getToken()}`,\n            'Content-Type': 'application/json',\n        };\n    }\n}\n\nexport default CacheApiService;\n","import SyncApiService from './sync.api.service';\n\nexport default class PromotionSyncApiService extends SyncApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sync') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'promotionSyncService';\n    }\n\n    async loadPackagers() {\n        return this.httpClient.get(\n            '/_action/promotion/setgroup/packager',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return response.data;\n        });\n    }\n\n    async loadSorters() {\n        return this.httpClient.get(\n            '/_action/promotion/setgroup/sorter',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return response.data;\n        });\n    }\n}\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"frw\"\n * @class\n * @extends ApiService\n */\nclass FirstRunWizardApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'frw') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'firstRunWizardService';\n    }\n\n    /**\n     * Check shopwareId\n     *\n     * @param {Object} [payload = {}]\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    checkShopwareId(payload = {}, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(`/_action/store/${this.apiEndpoint}/login`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get license domains\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getLicenseDomains(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/store/license-domains', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Verify license domain\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    verifyLicenseDomain(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post('/_action/store/verify-license-domain', {}, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Set wizard start message\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    setFRWStart(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post('/_action/store/frw/start', {}, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Set wizard finish message\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    setFRWFinish(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post('/_action/store/frw/finish', {}, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default FirstRunWizardApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"message-queue\"\n * @class\n * @extends ApiService\n */\nclass MessageQueueApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'message-queue') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'messageQueueService';\n    }\n\n    /**\n     * Run all due scheduled tasks\n     *\n     * @returns {Promise<T>}\n     */\n    consume(receiver, cancelToken = null) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/consume`, { receiver }, {\n                headers,\n                cancelToken,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default MessageQueueApiService;\n","/**\n * @module core/factory/http\n */\nimport Axios from 'axios';\nimport getRefreshTokenHelper from 'src/core/helper/refresh-token.helper';\nimport cacheAdapterFactory from 'src/core/factory/cache-adapter.factory';\n\n/**\n * Initializes the HTTP client with the provided context. The context provides the API end point and will be used as\n * the base url for the HTTP client.\n *\n * @method createHTTPClient\n * @memberOf module:core/factory/http\n * @param {Context} context Information about the environment\n * @returns {AxiosInstance}\n */\nexport default function createHTTPClient(context) {\n    return createClient(context);\n}\n\n/**\n * Provides CancelToken so a request's promise from Http Client could be canceled.\n *\n * @returns { CancelToken, isCancel, Cancel}\n */\nexport const { CancelToken, isCancel, Cancel } = Axios;\n\n/**\n * Creates the HTTP client with the provided context.\n *\n * @param {Context} context Information about the environment\n * @returns {AxiosInstance}\n */\nfunction createClient() {\n    const client = Axios.create({\n        baseURL: Shopware.Context.api.apiPath,\n    });\n\n    refreshTokenInterceptor(client);\n    globalErrorHandlingInterceptor(client);\n    client.CancelToken = CancelToken;\n\n    /**\n     * Don´t use cache in unit tests because it is possible\n     * that the test uses the same route with different responses\n     * (e.g. error, success) in a short amount of time.\n     * So in test cases we are using the originalAdapter directly\n     * and skipping the caching mechanism.\n     */\n    if (process?.env?.NODE_ENV !== 'test') {\n        requestCacheAdapterInterceptor(client);\n    }\n\n    return client;\n}\n\n/**\n * Sets up an interceptor to handle automatic cache of same requests in short time amount\n *\n * @param {AxiosInstance} client\n * @returns {AxiosInstance}\n */\nfunction requestCacheAdapterInterceptor(client) {\n    const requestCaches = {};\n\n    client.interceptors.request.use((config) => {\n        const originalAdapter = config.adapter;\n\n        config.adapter = cacheAdapterFactory(originalAdapter, requestCaches);\n\n        return config;\n    });\n}\n\n/**\n * Sets up an interceptor to process global request errors\n * @param {AxiosInstance} client\n * @returns {AxiosInstance}\n */\nfunction globalErrorHandlingInterceptor(client) {\n    client.interceptors.response.use(response => response, error => {\n        const { hasOwnProperty } = Shopware.Utils.object;\n\n        if (hasOwnProperty(error.config.headers, 'sw-app-integration-id')) {\n            return Promise.reject(error);\n        }\n\n        const { response: { status, data: { errors, data } } } = error;\n\n        try {\n            handleErrorStates({ status, errors, error, data });\n        } catch (e) {\n            Shopware.Utils.debug.error(e);\n\n            if (errors) {\n                errors.forEach(singleError => {\n                    Shopware.State.dispatch('notification/createNotification', {\n                        variant: 'error',\n                        title: singleError.title,\n                        message: singleError.detail,\n                    });\n                });\n            }\n        }\n\n        return Promise.reject(error);\n    });\n\n    return client;\n}\n\n/**\n * Determines the different status codes and creates a matching error via Shopware.State\n * @param {Number} status\n * @param {Array} errors\n * @param {Object} error\n * @param {Object} data\n */\nfunction handleErrorStates({ status, errors, error = null, data }) {\n    // Get $tc for translations and bind the Vue component scope to make it working\n    const viewRoot = Shopware.Application.view.root;\n    const $tc = viewRoot.$tc.bind(viewRoot);\n\n    // Handle sync-api errors\n    if (status === 400 &&\n        (error?.response?.config?.url ?? '').includes('_action/sync')) {\n        if (!data) {\n            return;\n        }\n\n        // Get data for each entity\n        Object.values(data).forEach((item) => {\n            // Get error for each result\n            item.result.forEach((resultItem) => {\n                if (!resultItem.errors.length) {\n                    return;\n                }\n\n                const statusCode = parseInt(resultItem.errors[0].status, 10);\n                handleErrorStates({ status: statusCode, errors: resultItem.errors, data });\n            });\n        });\n    }\n\n    if (status === 403) {\n        const missingPrivilegeErrors = errors.filter(e => e.code === 'FRAMEWORK__MISSING_PRIVILEGE_ERROR');\n        missingPrivilegeErrors.forEach(missingPrivilegeError => {\n            const detail = JSON.parse(missingPrivilegeError.detail);\n            let missingPrivileges = detail.missingPrivileges;\n\n            // check if response is an object and not an array. If yes, then convert it\n            if (!Array.isArray(missingPrivileges) && typeof missingPrivileges === 'object') {\n                missingPrivileges = Object.values(missingPrivileges);\n            }\n\n            const missingPrivilegesMessage = missingPrivileges.reduce((message, privilege) => {\n                return `${message}<br>\"${privilege}\"`;\n            }, '');\n\n            Shopware.State.dispatch('notification/createNotification', {\n                variant: 'error',\n                system: true,\n                autoClose: false,\n                growl: true,\n                title: $tc('global.error-codes.FRAMEWORK__MISSING_PRIVILEGE_ERROR'),\n                message: `${$tc('sw-privileges.error.description')} <br> ${missingPrivilegesMessage}`,\n            });\n        });\n    }\n\n    if (status === 409) {\n        if (errors[0].code === 'FRAMEWORK__DELETE_RESTRICTED') {\n            const parameters = errors[0].meta.parameters;\n\n            const entityName = parameters.entity;\n            let blockingEntities = '';\n\n            blockingEntities = parameters.usages.reduce((message, usageObject) => {\n                const times = usageObject.count;\n                const timesSnippet = $tc('global.default.xTimesIn', times);\n                const blockingEntitiesSnippet = $tc(`global.entities.${usageObject.entityName}`, times[1]);\n                return `${message}<br>${timesSnippet} <b>${blockingEntitiesSnippet}</b>`;\n            }, '');\n\n            Shopware.State.dispatch('notification/createNotification', {\n                variant: 'error',\n                title: $tc('global.default.error'),\n                message: `${$tc(\n                    'global.notification.messageDeleteFailed',\n                    3,\n                    { entityName: $tc(`global.entities.${entityName}`) },\n                )\n                }${blockingEntities}`,\n            });\n        }\n    }\n\n    if (status === 412) {\n        const frameworkLanguageNotFound = errors.find((e) => e.code === 'FRAMEWORK__LANGUAGE_NOT_FOUND');\n\n        if (frameworkLanguageNotFound) {\n            localStorage.removeItem('sw-admin-current-language');\n\n            Shopware.State.dispatch('notification/createNotification', {\n                variant: 'error',\n                system: true,\n                autoClose: false,\n                growl: true,\n                title: frameworkLanguageNotFound.title,\n                message: `${frameworkLanguageNotFound.detail} Please reload the administration.`,\n                actions: [\n                    {\n                        label: 'Reload administration',\n                        method: () => window.location.reload(),\n                    },\n                ],\n            });\n        }\n    }\n}\n\n/**\n * Sets up an interceptor to refresh the token, cache the requests and retry them after the token got refreshed.\n *\n * @param {AxiosInstance} client\n * @returns {AxiosInstance}\n */\nfunction refreshTokenInterceptor(client) {\n    const tokenHandler = getRefreshTokenHelper();\n\n    client.interceptors.response.use((response) => {\n        return response;\n    }, (error) => {\n        const { config, response: { status } } = error;\n        const originalRequest = config;\n        const resource = originalRequest.url.replace(originalRequest.baseURL, '');\n\n        // eslint-disable-next-line inclusive-language/use-inclusive-words\n        if (tokenHandler.whitelist.includes(resource)) {\n            return Promise.reject(error);\n        }\n\n        if (status === 401) {\n            if (!tokenHandler.isRefreshing) {\n                tokenHandler.fireRefreshTokenRequest().catch(() => {\n                    return Promise.reject(error);\n                });\n            }\n\n            return new Promise((resolve, reject) => {\n                tokenHandler.subscribe((newToken) => {\n                    // replace the expired token and retry\n                    originalRequest.headers.Authorization = `Bearer ${newToken}`;\n                    originalRequest.url = originalRequest.url.replace(originalRequest.baseURL, '');\n                    resolve(Axios(originalRequest));\n                }, (err) => {\n                    if (!Shopware.Application.getApplicationRoot()) {\n                        reject(err);\n                        window.location.reload();\n                        return;\n                    }\n                    Shopware.Service('loginService').logout();\n                    Shopware.Application.getApplicationRoot().$router.push({ name: 'sw.login.index' });\n                    reject(err);\n                });\n            });\n        }\n\n        return Promise.reject(error);\n    });\n\n    return client;\n}\n","import ApiService from '../api.service';\n\nexport default class ExcludedSearchTermService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'reset-excluded-search-term') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'excludedSearchTermService';\n    }\n\n    resetExcludedSearchTerm() {\n        const route = '/_admin/reset-excluded-search-term';\n        const headers = this._getHeader();\n        return this.httpClient.post(route, {}, { headers });\n    }\n\n    _getHeader() {\n        return {\n            ...super.getBasicHeaders(),\n            'sw-language-id': Shopware.Context.api.languageId,\n        };\n    }\n}\n","import { deepCopyObject } from 'src/core/service/utils/object.utils';\nimport utils from 'src/core/service/util.service';\nimport ApiService from '../api.service';\n\nconst lineItemConstants = Object.freeze({\n    types: Object.freeze({\n        PRODUCT: 'product',\n        CREDIT: 'credit',\n        CUSTOM: 'custom',\n        PROMOTION: 'promotion',\n    }),\n\n    priceTypes: Object.freeze({\n        ABSOLUTE: 'absolute',\n        QUANTITY: 'quantity',\n    }),\n});\n\n/**\n * Gateway for the API end point \"cart\"\n * Uses the _proxy endpoint of the admin api to connect to the store-api endpoint cart\n * @class\n * @extends ApiService\n */\nclass CartStoreService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'cart') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'cartStoreService';\n    }\n\n    getLineItemTypes() {\n        return lineItemConstants.types;\n    }\n\n    getLineItemPriceTypes() {\n        return lineItemConstants.priceTypes;\n    }\n\n    mapLineItemTypeToPriceType(itemType) {\n        const lineItemTypes = this.getLineItemTypes();\n        const priceTypes = this.getLineItemPriceTypes();\n\n        const mapTypes = {\n            [lineItemTypes.PRODUCT]: priceTypes.QUANTITY,\n            [lineItemTypes.CUSTOM]: priceTypes.QUANTITY,\n            [lineItemTypes.CREDIT]: priceTypes.ABSOLUTE,\n        };\n\n        return mapTypes[itemType];\n    }\n\n    createCart(salesChannelId, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart`;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.get(route, { additionalParams, headers });\n    }\n\n    getCart(salesChannelId, contextToken, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient.get(route, { additionalParams, headers });\n    }\n\n    cancelCart(salesChannelId, contextToken, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient.delete(route, { additionalParams, headers });\n    }\n\n    removeLineItems(\n        salesChannelId,\n        contextToken,\n        lineItemKeys,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient.delete(route, { additionalParams, headers, data: { ids: lineItemKeys } });\n    }\n\n    getRouteForItem(id, salesChannelId) {\n        return `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n    }\n\n    shouldPriceUpdated(item, isNewProductItem) {\n        const isUnitPriceEdited = item.price.unitPrice !== item.priceDefinition.price;\n        const isTaxRateEdited = (item?.price?.taxRules?.[0]?.taxRate ?? null)\n            !== (item?.priceDefinition?.taxRules?.[0]?.taxRate ?? null);\n        const isCustomItem = item.type === this.getLineItemTypes().CUSTOM;\n\n        const isExistingProductAndUnitPriceIsEdited = !isNewProductItem && isUnitPriceEdited;\n\n        if ((isExistingProductAndUnitPriceIsEdited || isTaxRateEdited) || (isCustomItem && !isUnitPriceEdited)) {\n            return true;\n        }\n        return false;\n    }\n\n    getPayloadForItem(item, salesChannelId, isNewProductItem, id) {\n        let dummyPrice = null;\n        if (this.shouldPriceUpdated(item, isNewProductItem)) {\n            dummyPrice = deepCopyObject(item.priceDefinition);\n            dummyPrice.taxRules = item.priceDefinition.taxRules;\n            dummyPrice.quantity = item.quantity;\n            dummyPrice.type = this.mapLineItemTypeToPriceType(item.type);\n        }\n\n        return {\n            items: [\n                {\n                    id: id,\n                    referencedId: id,\n                    label: item.label,\n                    quantity: item.quantity,\n                    type: item.type,\n                    description: item.description,\n                    priceDefinition: dummyPrice,\n                    stackable: true,\n                    removable: true,\n                    salesChannelId,\n                },\n            ],\n        };\n    }\n\n    saveLineItem(\n        salesChannelId,\n        contextToken,\n        item,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const isNewProductItem = item._isNew === true && item.type === this.getLineItemTypes().PRODUCT;\n        const id = item.identifier || item.id || utils.createId();\n        const route = this.getRouteForItem(id, salesChannelId, isNewProductItem);\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const payload = this.getPayloadForItem(item, salesChannelId, isNewProductItem, id);\n\n        if (item._isNew) {\n            return this.httpClient.post(route, payload, { additionalParams, headers });\n        }\n\n        return this.httpClient.patch(route, payload, { additionalParams, headers });\n    }\n\n    addPromotionCode(\n        salesChannelId,\n        contextToken,\n        code,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const payload = {\n            items: [\n                {\n                    type: this.getLineItemTypes().PROMOTION,\n                    referencedId: code,\n                },\n            ],\n        };\n\n        return this.httpClient.post(route, payload, { additionalParams, headers });\n    }\n\n    modifyShippingCosts(salesChannelId, contextToken, shippingCosts, additionalHeaders, additionalParams = {}) {\n        const route = '_proxy/modify-shipping-costs';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient.patch(route, { salesChannelId, shippingCosts }, { additionalParams, headers });\n    }\n\n\n    disableAutomaticPromotions(contextToken, additionalParams = {}, additionalHeaders = {}) {\n        const route = '_proxy/disable-automatic-promotions';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const data = {\n            salesChannelId: additionalParams.salesChannelId,\n        };\n\n        return this.httpClient.patch(route, data, { additionalParams, headers });\n    }\n\n    enableAutomaticPromotions(contextToken, additionalParams = {}, additionalHeaders = {}) {\n        const route = '_proxy/enable-automatic-promotions';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const data = {\n            salesChannelId: additionalParams.salesChannelId,\n        };\n\n        return this.httpClient.patch(route, data, { additionalParams, headers });\n    }\n\n    addMultipleLineItems(\n        salesChannelId,\n        contextToken,\n        items,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const payload = items.map(item => {\n            if (item.type === this.getLineItemTypes().PROMOTION) {\n                return item;\n            }\n\n            const id = item.identifier || item.id || utils.createId();\n\n            return {\n                id,\n                referencedId: id,\n                label: item.label,\n                quantity: item.quantity,\n                type: item.type,\n                description: item.description,\n                priceDefinition: item.type === this.getLineItemTypes().PRODUCT ? null : item.priceDefinition,\n                stackable: true,\n                removable: true,\n                salesChannelId,\n            };\n        });\n\n        return this.httpClient.post(route, { items: payload }, { additionalParams, headers });\n    }\n}\n\nexport default CartStoreService;\n","import ApiService from '../api.service';\n\nexport class InvalidActionButtonParameterError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InvalidActionButtonParameterError';\n    }\n}\n\nexport default class AppActionButtonService extends ApiService {\n    /**\n     * @param {AxiosInstance} httpClient\n     * @param {LoginService} loginService\n     */\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'appActionButtonService';\n    }\n\n    getBasicHeaders() {\n        return {\n            ...super.getBasicHeaders(),\n            'sw-language-id': Shopware.Context.api.languageId,\n        };\n    }\n\n    /**\n     * Fetches available actions for a page\n     *\n     * @param {string} entity\n     * @param {string} view\n     */\n    getActionButtonsPerView(entity, view) {\n        if (!entity) {\n            throw new InvalidActionButtonParameterError(`Parameter \"entity\" must have a valid value. Given: ${entity}`);\n        }\n\n        if (!view) {\n            throw new InvalidActionButtonParameterError(`Parameter \"view\" must have a valid value. Given: ${view}`);\n        }\n\n        return this.httpClient\n            .get(`app-system/action-button/${entity}/${view}`,\n                {\n                    headers: this.getBasicHeaders(),\n                }).then(({ data }) => {\n                return data.actions;\n            });\n    }\n\n    /**\n     * Run an action on the server\n     *\n     * @param {string} id\n     * @param {Object} params\n     */\n    runAction(id, params = {}) {\n        return this.httpClient\n            .post(\n                `app-system/action-button/run/${id}`,\n                params,\n                {\n                    headers: this.getBasicHeaders(),\n                },\n            );\n    }\n}\n","import ApiService from '../api.service';\n\nexport default class AppModulesService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'appModulesService';\n    }\n\n    fetchAppModules() {\n        return this.httpClient.get(\n            'app-system/modules',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then(({ data }) => {\n            return data.modules;\n        });\n    }\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"store\"\n * @class\n * @extends ApiService\n */\nclass StoreApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'store') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'storeService';\n    }\n\n    ping() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/ping`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    login(shopwareId, password) {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/login`, { shopwareId, password }, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    checkLogin() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/checklogin`, {}, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    logout() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/logout`, {}, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @deprecated tag:v6.5.0 Unused method will be removed\n     */\n    getLicenseList() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/licenses`, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getUpdateList() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/updates`, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @deprecated tag:v6.5.0 - Use ExtensionStoreActionService.downloadExtension() instead\n     */\n    downloadPlugin(pluginName, unauthenticated = false, onlyDownload = false) {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams({\n            pluginName: pluginName,\n        });\n        if (unauthenticated) {\n            params.unauthenticated = true;\n        }\n\n        if (onlyDownload) {\n            return this.httpClient\n                .get(`/_action/${this.getApiBasePath()}/download`, { params, headers })\n                .then((response) => {\n                    return ApiService.handleResponse(response);\n                });\n        }\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/download`, { params, headers })\n            .then(() => {\n                return this.httpClient\n                    .post('/_action/plugin/update', null, { params, headers });\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @deprecated tag:v6.5.0 - Use ExtensionStoreActionService.downloadExtension() and\n     * ExtensionStoreActionService.updateExtension() instead\n     */\n    downloadAndUpdatePlugin(pluginName, unauthenticated = false) {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams({\n            pluginName: pluginName,\n        });\n        if (unauthenticated) {\n            params.unauthenticated = true;\n        }\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/download`, { params, headers })\n            .then(() => {\n                return this.httpClient\n                    .post('/_action/plugin/update', null, { params, headers });\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getLicenseViolationList() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/plugin/search`, null, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getBasicParams(additionalParams = {}) {\n        const basicParams = {\n            language: localStorage.getItem('sw-admin-locale'),\n        };\n\n        return Object.assign({}, basicParams, additionalParams);\n    }\n}\n\nexport default StoreApiService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"integration\"\n * @class\n * @extends ApiService\n */\nclass IntegrationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'integration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'integrationService';\n    }\n\n    /**\n     * Get the generated access key and secret access key from the API\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    generateKey(additionalParams = {}, additionalHeaders = {}, user = false) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const endpoint = user ? '/_action/access-key/user' : '/_action/access-key/intergration';\n\n        return this.httpClient\n            .get(endpoint, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default IntegrationApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"snippet\"\n * @class\n * @extends ApiService\n */\nclass SnippetApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'snippet') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'snippetService';\n    }\n\n    /**\n     * @returns {Promise<T>}\n     */\n    getByKey(translationKey, page, limit, isCustom = false) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}`, { translationKey, page, limit, isCustom }, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @returns {Promise<T>}\n     */\n    getFilter() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/filter`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get snippets\n     *\n     * @returns {Promise<T>}\n     */\n    getSnippets(localeFactory, code) {\n        const headers = this.getBasicHeaders();\n        const locale = code || localeFactory.getLastKnownLocale();\n\n        return this.httpClient\n            .get(`/_admin/snippets?locale=${locale}`, {\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            }).then((allSnippets) => {\n                const registry = localeFactory.getLocaleRegistry();\n\n                Object.entries(allSnippets).forEach(([localeKey, snippets]) => {\n                    const fnName = (registry.has(localeKey) ? 'extend' : 'register');\n\n                    localeFactory[fnName](localeKey, snippets);\n                });\n            });\n    }\n}\n\nexport default SnippetApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"user\"\n * @class\n * @extends ApiService\n */\nclass UserApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'user') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userService';\n    }\n\n    /**\n     * Get information of the logged in user\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getUser(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_info/me', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Update information of the logged in user\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    updateUser(additionalParams = {}, additionalHeaders = {}) {\n        const data = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .patch('/_info/me', data,\n                {\n                    headers,\n                })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default UserApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"mail\"\n * @class\n * @extends ApiService\n */\nclass MailApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'mail-template') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'mailService';\n    }\n\n    sendMailTemplate(\n        recipientMail,\n        recipient,\n        mailTemplate,\n        mailTemplateMedia,\n        salesChannelId,\n        testMode = false,\n        documentIds = [],\n        templateData = null,\n    ) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/send`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                contentHtml: mailTemplate.contentHtml ?? mailTemplate.translated?.contentHtml,\n                contentPlain: mailTemplate.contentPlain ?? mailTemplate.translated?.contentPlain,\n                mailTemplateData: templateData ?? mailTemplate.mailTemplateType.templateData,\n                recipients: { [recipientMail]: recipient },\n                salesChannelId: salesChannelId,\n                mediaIds: mailTemplateMedia.getIds(),\n                subject: mailTemplate.subject ?? mailTemplate.translated?.subject,\n                senderMail: mailTemplate.senderMail,\n                senderName: mailTemplate.senderName ?? mailTemplate.translated?.senderName,\n                documentIds,\n                testMode,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    testMailTemplate(recipient, mailTemplate, mailTemplateMedia, salesChannelId, documentIds = []) {\n        return this.sendMailTemplate(\n            recipient,\n            recipient,\n            mailTemplate,\n            mailTemplateMedia,\n            salesChannelId,\n            true,\n            documentIds,\n        );\n    }\n\n    buildRenderPreview(mailTemplateType, mailTemplate) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/build`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                mailTemplateType: mailTemplateType,\n                mailTemplate: mailTemplate,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default MailApiService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"recommenations\"\n * @class\n * @extends ApiService\n */\nclass RecommendationsApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'recommendations') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'recommendationsService';\n    }\n\n    /**\n     * Get recommendations\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getRecommendations(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(`/_action/store/${this.apiEndpoint}`, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get recommendations-regions\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getRecommendationRegions(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/store/recommendation-regions', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default RecommendationsApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point 'user-config'\n * @class\n * @extends ApiService\n */\nclass UserConfigService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = '_info/config-me') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userConfigService';\n    }\n\n    /**\n     * @description Process search user-config based on provide array keys of user-config,\n     * if keys is null, get all config of current logged-in user\n     *\n     * @param {Array|null} keys\n     * [\n     *     key_1,\n     *     key_2,\n     * ]\n     * @returns {Object}\n     * {\n     *     key_1: [value1],\n     *     key_2: [value2],\n     * }\n     */\n    search(keys = null) {\n        const headers = this.getBasicHeaders();\n        const params = Object.assign({}, { keys });\n\n        return this.httpClient\n            .get(this.getApiBasePath(), {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            })\n            .catch((error) => {\n                Shopware.Utils.debug.error(error);\n            });\n    }\n\n    /**\n     * @description Process mass upsert user-config for current logged-in user\n     * @param {Array} upsertData\n     * {\n     *     key_1: [value1],\n     *     key_2: [value2],\n     * }\n     */\n    upsert(upsertData) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(this.getApiBasePath(), upsertData, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default UserConfigService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"check-email-valid\"\n * @class\n * @extends ApiService\n */\nclass CustomerValidationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'check-customer-email-valid') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'customerValidationService';\n    }\n\n    checkCustomerEmail(payload, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(`/_admin/${this.apiEndpoint}`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            })\n            .catch((exception) => {\n                throw exception;\n            });\n    }\n}\n\nexport default CustomerValidationApiService;\n","import ApiService from '../api.service';\n\n/**\n * Custom gateway for the \"user/user-recovery\" routes\n * @class\n * @extends ApiService\n */\nclass UserRecoveryApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'user') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userRecoveryService';\n        this.context = Shopware.Context;\n    }\n\n    createRecovery(email) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/user-recovery`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                email: email,\n            },\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            ApiService.handleResponse(response);\n        });\n    }\n\n    checkHash(hash) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/user-recovery/hash`;\n\n        return this.httpClient.get(\n            apiRoute,\n            {\n                params: { hash: hash },\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            ApiService.handleResponse(response);\n        });\n    }\n\n    updateUserPassword(hash, password, passwordConfirm) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/user-recovery/password`;\n\n        return this.httpClient.patch(\n            apiRoute,\n            {\n                hash: hash,\n                password: password,\n                passwordConfirm: passwordConfirm,\n            },\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default UserRecoveryApiService;\n"],"sourceRoot":""}