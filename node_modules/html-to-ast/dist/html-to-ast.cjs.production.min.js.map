{"version":3,"file":"html-to-ast.cjs.production.min.js","sources":["../src/element.ts","../src/parse-tag.ts","../src/parse.ts","../src/stringify.ts"],"sourcesContent":["export const htmlVoidElements = [\n    'area',\n    'base',\n    'basefont',\n    'bgsound',\n    'br',\n    'col',\n    'command',\n    'embed',\n    'frame',\n    'hr',\n    'image',\n    'img',\n    'input',\n    'isindex',\n    'keygen',\n    'link',\n    'menuitem',\n    'meta',\n    'nextid',\n    'param',\n    'source',\n    'track',\n    'wbr'\n  ]","import { Comment, IDoc } from './types';\n\nimport { htmlVoidElements } from './element';\n\nconst attrRE = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;\n\nexport const parseTag = (tag: string): IDoc | Comment => {\n  const res: IDoc = {\n    type: 'tag',\n    name: '',\n    voidElement: false,\n    attrs: {},\n    children: [],\n  };\n\n  const tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/);\n  if (tagMatch) {\n    res.name = tagMatch[1];\n    res.voidElement =\n      htmlVoidElements.includes(tagMatch[1]) ||\n      tag.charAt(tag.length - 2) === '/';\n\n    // handle comment tag\n    if (res.name.startsWith('!--')) {\n      const endIndex = tag.indexOf('-->');\n      return {\n        type: 'comment',\n        comment: endIndex !== -1 ? tag.slice(4, endIndex) : '',\n      };\n    }\n  }\n\n  const reg = new RegExp(attrRE);\n  let result = null;\n  for (;;) {\n    result = reg.exec(tag);\n\n    if (result === null) {\n      break;\n    }\n\n    if (!result[0].trim()) {\n      continue;\n    }\n\n    if (result[1]) {\n      const attr = result[1].trim();\n      let arr = [attr, ''];\n\n      if (attr.indexOf('=') > -1) {\n        arr = attr.split('=');\n      }\n\n      res.attrs[arr[0]] = arr[1];\n      reg.lastIndex--;\n    } else if (result[2]) {\n      res.attrs[result[2]] = result[3]\n        .trim()\n        .substring(1, result[3].length - 1);\n    }\n  }\n\n  return res;\n};\n","import type { Attr, IOptions } from './types';\n\nimport { parseTag } from './parse-tag';\n\nconst tagRE = /<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g;\nconst whitespaceRE = /^\\s*$/;\n\n// re-used obj for quick lookups of components\nconst empty = Object.create(null);\n\ninterface MaybeDoc {\n  type?: string;\n  text?: string;\n  content?: string;\n  voidElement?: boolean;\n  name?: string;\n  style?: string[];\n  attrs?: Attr;\n  children?: MaybeDoc[];\n  comment?: string;\n}\n\nexport const parse = (html: string, options: Partial<IOptions> = {}) => {\n  options || (options = {});\n  options.components || (options.components = empty);\n  const result: MaybeDoc[] = [];\n  const arr: MaybeDoc[] = [];\n  let current: MaybeDoc;\n  let level = -1;\n  let inComponent = false;\n\n  // handle text at top level\n  if (html.indexOf('<') !== 0) {\n    var end = html.indexOf('<');\n    result.push({\n      type: 'text',\n      content: end === -1 ? html : html.substring(0, end),\n    });\n  }\n  // @ts-ignore\n  html.replace(tagRE, function (tag, index) {\n    if (inComponent) {\n      if (tag !== '</' + current.name + '>') {\n        return '';\n      } else {\n        inComponent = false;\n      }\n    }\n    const isOpen = tag.charAt(1) !== '/';\n    const isComment = tag.startsWith('<!--');\n    const start = index + tag.length;\n    const nextChar = html.charAt(start);\n\n    let parent: MaybeDoc | MaybeDoc['children'];\n\n    if (isComment) {\n      const comment = parseTag(tag);\n\n      // if we're at root, push new base node\n      if (level < 0) {\n        result.push(comment);\n        return result\n      }\n      parent = arr[level];\n      if (parent && parent.children && Array.isArray(parent.children)) {\n        parent.children.push(comment);\n      }\n      return result\n    }\n\n    if (isOpen) {\n      level++;\n\n      current = parseTag(tag);\n      if (\n        current.type === 'tag' &&\n        current.name &&\n        options.components &&\n        options.components[current.name]\n      ) {\n        current.type = 'component';\n        inComponent = true;\n      }\n\n      if (\n        !current.voidElement &&\n        !inComponent &&\n        nextChar &&\n        nextChar !== '<' &&\n        Array.isArray(current.children)\n      ) {\n        current.children.push({\n          type: 'text',\n          content: html.slice(start, html.indexOf('<', start)),\n        });\n      }\n\n      // if we're at root, push new base node\n      if (level === 0) {\n        result.push(current);\n      }\n\n      parent = arr[level - 1];\n\n      if (parent && parent.children) {\n        parent.children.push(current);\n      }\n\n      arr[level] = current;\n    }\n\n    if (!isOpen || current.voidElement) {\n      if (\n        level > -1 &&\n        (current.voidElement || current.name === tag.slice(2, -1))\n      ) {\n        level--;\n        // move current up a level to match the end tag\n        current = level === -1 ? (result as MaybeDoc) : arr[level];\n      }\n      if (!inComponent && nextChar !== '<' && nextChar) {\n        // trailing text node\n        // if we're at the root, push a base text node. otherwise add as\n        // a child to the current node.\n        parent = level === -1 ? result : (arr[level].children as MaybeDoc[]);\n\n        // calculate correct end of the content slice in case there's\n        // no tag after the text node.\n        const end = html.indexOf('<', start);\n        let content = html.slice(start, end === -1 ? undefined : end);\n        // if a node is nothing but whitespace, collapse it as the spec states:\n        // https://www.w3.org/TR/html4/struct/text.html#h-9.1\n        if (whitespaceRE.test(content)) {\n          content = ' ';\n        }\n        // don't add whitespace-only text nodes if they would be trailing text nodes\n        // or if they would be leading whitespace-only text nodes:\n        //  * end > -1 indicates this is not a trailing text node\n        //  * leading node is when level is -1 and parent has length 0\n        if ((end > -1 && level + parent.length >= 0) || content !== ' ') {\n          if (parent && Array.isArray(parent)) {\n            parent.push({\n              type: 'text',\n              content: content,\n            });\n          }\n        }\n      }\n    }\n  });\n\n  return result;\n};\n","import { Attr, IDoc } from './types';\n\nfunction attrString(attrs: Attr) {\n  const buff = [];\n  for (let key in attrs) {\n    buff.push(key + '=\"' + attrs[key] + '\"');\n  }\n  if (!buff.length) {\n    return '';\n  }\n  return ' ' + buff.join(' ');\n}\n\nfunction _stringify(buff: string, doc: IDoc): string {\n  switch (doc.type) {\n    case 'text':\n      return buff + doc.content;\n    case 'tag':\n      buff +=\n        '<' +\n        doc.name +\n        (doc.attrs ? attrString(doc.attrs) : '') +\n        (doc.voidElement ? '/>' : '>');\n      if (doc.voidElement) {\n        return buff;\n      }\n      return buff + doc.children.reduce(_stringify, '') + '</' + doc.name + '>';\n    case 'comment':\n      buff += '<!--' + doc.comment + '-->';\n      return buff;\n    default:\n      return '';\n  }\n}\n\nexport const stringify = (doc: IDoc[]) => {\n  return doc.reduce(function (token: string, rootEl: IDoc) {\n    return token + _stringify('', rootEl);\n  }, '');\n};\n"],"names":["htmlVoidElements","attrRE","parseTag","tag","res","type","name","voidElement","attrs","children","tagMatch","match","includes","charAt","length","startsWith","endIndex","indexOf","comment","slice","reg","RegExp","result","exec","trim","attr","arr","split","lastIndex","substring","tagRE","whitespaceRE","empty","Object","create","_stringify","buff","doc","content","key","push","join","attrString","reduce","html","options","components","current","level","inComponent","end","replace","index","parent","isOpen","isComment","start","nextChar","Array","isArray","undefined","test","token","rootEl"],"mappings":"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"}